"use strict";Object.defineProperty(exports, "__esModule", {value: true});

var _NH6Q6YSMcjs = require('../__chunks/NH6Q6YSM.cjs');


var _OTRABJ4Ycjs = require('../__chunks/OTRABJ4Y.cjs');


var _2GAPZOO5cjs = require('../__chunks/2GAPZOO5.cjs');


var _LRB2BIFRcjs = require('../__chunks/LRB2BIFR.cjs');
require('../__chunks/FO6MB5HF.cjs');
require('../__chunks/OSQTQ6OF.cjs');
require('../__chunks/ETK4FMZH.cjs');
require('../__chunks/ZQAFJQIS.cjs');
require('../__chunks/I4JDDV3V.cjs');
require('../__chunks/LHHW5ZQP.cjs');




var _CWY2PHPRcjs = require('../__chunks/CWY2PHPR.cjs');
require('../__chunks/MPGRRS75.cjs');
require('../__chunks/5WLTMVVQ.cjs');
require('../__chunks/7WUTS26Y.cjs');



var _72I2GWXFcjs = require('../__chunks/72I2GWXF.cjs');

// src/form/form-checkbox.ts
var _react = require('react');
var _misc = require('@ariakit/core/utils/misc');
var useFormCheckbox = _CWY2PHPRcjs.createHook.call(void 0, 
  (_a) => {
    var _b = _a, { store, name: nameProp, value, checked, defaultChecked } = _b, props = _72I2GWXFcjs.__objRest.call(void 0, _b, ["store", "name", "value", "checked", "defaultChecked"]);
    const context = _react.useContext.call(void 0, _OTRABJ4Ycjs.FormContext);
    store = store || context;
    _misc.invariant.call(void 0, 
      store,
      process.env.NODE_ENV !== "production" && "FormCheckbox must be wrapped in a Form component"
    );
    const name = `${nameProp}`;
    const checkboxStore = _LRB2BIFRcjs.useCheckboxStore.call(void 0, {
      value: store.useValue(name),
      setValue: (value2) => store == null ? void 0 : store.setValue(name, value2)
    });
    props = _2GAPZOO5cjs.useCheckbox.call(void 0, _72I2GWXFcjs.__spreadValues.call(void 0, { store: checkboxStore, value, checked }, props));
    props = _NH6Q6YSMcjs.useFormField.call(void 0, _72I2GWXFcjs.__spreadValues.call(void 0, {
      store,
      name,
      "aria-labelledby": void 0
    }, props));
    return props;
  }
);
var FormCheckbox = _CWY2PHPRcjs.createMemoComponent.call(void 0, 
  (props) => {
    const htmlProps = useFormCheckbox(props);
    return _CWY2PHPRcjs.createElement.call(void 0, "input", htmlProps);
  }
);
if (process.env.NODE_ENV !== "production") {
  FormCheckbox.displayName = "FormCheckbox";
}



exports.FormCheckbox = FormCheckbox; exports.useFormCheckbox = useFormCheckbox;
