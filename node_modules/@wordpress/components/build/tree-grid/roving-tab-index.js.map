{"version":3,"names":["_element","require","_rovingTabIndexContext","RovingTabIndex","children","lastFocusedElement","setLastFocusedElement","useState","providerValue","useMemo","createElement","RovingTabIndexProvider","value"],"sources":["@wordpress/components/src/tree-grid/roving-tab-index.tsx"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useState, useMemo } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { RovingTabIndexProvider } from './roving-tab-index-context';\n\n/**\n * Provider for adding roving tab index behaviors to tree grid structures.\n *\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/components/src/tree-grid/README.md\n */\nexport default function RovingTabIndex( {\n\tchildren,\n}: {\n\tchildren: React.ReactNode;\n} ) {\n\tconst [ lastFocusedElement, setLastFocusedElement ] =\n\t\tuseState< HTMLElement >();\n\n\t// Use `useMemo` to avoid creation of a new object for the providerValue\n\t// on every render. Only create a new object when the `lastFocusedElement`\n\t// value changes.\n\tconst providerValue = useMemo(\n\t\t() => ( { lastFocusedElement, setLastFocusedElement } ),\n\t\t[ lastFocusedElement ]\n\t);\n\n\treturn (\n\t\t<RovingTabIndexProvider value={ providerValue }>\n\t\t\t{ children }\n\t\t</RovingTabIndexProvider>\n\t);\n}\n"],"mappings":";;;;;;AAGA,IAAAA,QAAA,GAAAC,OAAA;AAKA,IAAAC,sBAAA,GAAAD,OAAA;AARA;AACA;AACA;;AAGA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACe,SAASE,cAAcA,CAAE;EACvCC;AAGD,CAAC,EAAG;EACH,MAAM,CAAEC,kBAAkB,EAAEC,qBAAqB,CAAE,GAClD,IAAAC,iBAAQ,EAAgB,CAAC;;EAE1B;EACA;EACA;EACA,MAAMC,aAAa,GAAG,IAAAC,gBAAO,EAC5B,OAAQ;IAAEJ,kBAAkB;IAAEC;EAAsB,CAAC,CAAE,EACvD,CAAED,kBAAkB,CACrB,CAAC;EAED,OACC,IAAAL,QAAA,CAAAU,aAAA,EAACR,sBAAA,CAAAS,sBAAsB;IAACC,KAAK,EAAGJ;EAAe,GAC5CJ,QACqB,CAAC;AAE3B"}