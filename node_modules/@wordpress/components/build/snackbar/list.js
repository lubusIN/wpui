"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SnackbarList = SnackbarList;
exports.default = void 0;
var _element = require("@wordpress/element");
var _classnames = _interopRequireDefault(require("classnames"));
var _compose = require("@wordpress/compose");
var _ = _interopRequireDefault(require("."));
var _animation = require("../animation");
/**
 * External dependencies
 */

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

const SNACKBAR_VARIANTS = {
  init: {
    height: 0,
    opacity: 0
  },
  open: {
    height: 'auto',
    opacity: 1,
    transition: {
      height: {
        type: 'tween',
        duration: 0.3,
        ease: [0, 0, 0.2, 1]
      },
      opacity: {
        type: 'tween',
        duration: 0.25,
        delay: 0.05,
        ease: [0, 0, 0.2, 1]
      }
    }
  },
  exit: {
    opacity: 0,
    transition: {
      type: 'tween',
      duration: 0.1,
      ease: [0, 0, 0.2, 1]
    }
  }
};

/**
 * Renders a list of notices.
 *
 * ```jsx
 * const MySnackbarListNotice = () => (
 *   <SnackbarList
 *     notices={ notices }
 *     onRemove={ removeNotice }
 *   />
 * );
 * ```
 */
function SnackbarList({
  notices,
  className,
  children,
  onRemove
}) {
  const listRef = (0, _element.useRef)(null);
  const isReducedMotion = (0, _compose.useReducedMotion)();
  className = (0, _classnames.default)('components-snackbar-list', className);
  const removeNotice = notice => () => onRemove?.(notice.id);
  return (0, _element.createElement)("div", {
    className: className,
    tabIndex: -1,
    ref: listRef
  }, children, (0, _element.createElement)(_animation.__unstableAnimatePresence, null, notices.map(notice => {
    const {
      content,
      ...restNotice
    } = notice;
    return (0, _element.createElement)(_animation.__unstableMotion.div, {
      layout: !isReducedMotion // See https://www.framer.com/docs/animation/#layout-animations
      ,
      initial: 'init',
      animate: 'open',
      exit: 'exit',
      key: notice.id,
      variants: isReducedMotion ? undefined : SNACKBAR_VARIANTS
    }, (0, _element.createElement)("div", {
      className: "components-snackbar-list__notice-container"
    }, (0, _element.createElement)(_.default, {
      ...restNotice,
      onRemove: removeNotice(notice),
      listRef: listRef
    }, notice.content)));
  })));
}
var _default = SnackbarList;
exports.default = _default;
//# sourceMappingURL=list.js.map