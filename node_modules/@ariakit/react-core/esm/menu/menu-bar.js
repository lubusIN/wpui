import {
  MenuBarContext
} from "../__chunks/HVBRRKV4.js";
import {
  useComposite
} from "../__chunks/AAVDGJD5.js";
import "../__chunks/OXPV2NBK.js";
import "../__chunks/WJ37OVG2.js";
import "../__chunks/MYID4V27.js";
import "../__chunks/BMLNRUFQ.js";
import {
  createComponent,
  createElement,
  createHook
} from "../__chunks/NQJBHION.js";
import {
  useWrapElement
} from "../__chunks/J7Q2EO23.js";
import "../__chunks/CP3U4HPL.js";
import {
  __objRest,
  __spreadValues
} from "../__chunks/PNRLI7OV.js";

// src/menu/menu-bar.tsx
import { jsx } from "react/jsx-runtime";
var useMenuBar = createHook(
  (_a) => {
    var _b = _a, { store, composite = true } = _b, props = __objRest(_b, ["store", "composite"]);
    const orientation = store.useState(
      (state) => !composite || state.orientation === "both" ? void 0 : state.orientation
    );
    props = useWrapElement(
      props,
      (element) => /* @__PURE__ */ jsx(MenuBarContext.Provider, { value: store, children: element }),
      [store]
    );
    if (composite) {
      props = __spreadValues({
        role: "menubar",
        "aria-orientation": orientation
      }, props);
    }
    props = useComposite(__spreadValues({ store, composite }, props));
    return props;
  }
);
var MenuBar = createComponent((props) => {
  const htmlProps = useMenuBar(props);
  return createElement("div", htmlProps);
});
if (process.env.NODE_ENV !== "production") {
  MenuBar.displayName = "MenuBar";
}
export {
  MenuBar,
  useMenuBar
};
