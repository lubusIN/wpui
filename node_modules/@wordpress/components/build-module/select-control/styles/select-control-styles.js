import _styled from "@emotion/styled/base";
/**
 * External dependencies
 */
import { css } from '@emotion/react';
/**
 * Internal dependencies
 */
import { COLORS, rtl } from '../../utils';
import { space } from '../../ui/utils/space';
import InputControlSuffixWrapper from '../../input-control/input-suffix-wrapper';
const disabledStyles = ({
  disabled
}) => {
  if (!disabled) return '';
  return /*#__PURE__*/css({
    color: COLORS.ui.textDisabled
  }, process.env.NODE_ENV === "production" ? "" : ";label:disabledStyles;", process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvc2VsZWN0LWNvbnRyb2wvc3R5bGVzL3NlbGVjdC1jb250cm9sLXN0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEyQlEiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9zZWxlY3QtY29udHJvbC9zdHlsZXMvc2VsZWN0LWNvbnRyb2wtc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBFeHRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuXG4vKipcbiAqIEludGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgeyBDT0xPUlMsIHJ0bCB9IGZyb20gJy4uLy4uL3V0aWxzJztcbmltcG9ydCB7IHNwYWNlIH0gZnJvbSAnLi4vLi4vdWkvdXRpbHMvc3BhY2UnO1xuaW1wb3J0IHR5cGUgeyBTZWxlY3RDb250cm9sUHJvcHMgfSBmcm9tICcuLi90eXBlcyc7XG5pbXBvcnQgSW5wdXRDb250cm9sU3VmZml4V3JhcHBlciBmcm9tICcuLi8uLi9pbnB1dC1jb250cm9sL2lucHV0LXN1ZmZpeC13cmFwcGVyJztcblxuaW50ZXJmYWNlIFNlbGVjdFByb3BzXG5cdGV4dGVuZHMgUGljazxcblx0XHRTZWxlY3RDb250cm9sUHJvcHMsXG5cdFx0J19fbmV4dDM2cHhEZWZhdWx0U2l6ZScgfCAnZGlzYWJsZWQnIHwgJ211bHRpcGxlJ1xuXHQ+IHtcblx0Ly8gVXNpbmcgYHNlbGVjdFNpemVgIGluc3RlYWQgb2YgYHNpemVgIHRvIGF2b2lkIGEgdHlwZSBjb25mbGljdCB3aXRoIHRoZVxuXHQvLyBgc2l6ZWAgSFRNTCBhdHRyaWJ1dGUgb2YgdGhlIGBzZWxlY3RgIGVsZW1lbnQuXG5cdHNlbGVjdFNpemU/OiBTZWxlY3RDb250cm9sUHJvcHNbICdzaXplJyBdO1xufVxuXG5jb25zdCBkaXNhYmxlZFN0eWxlcyA9ICggeyBkaXNhYmxlZCB9OiBTZWxlY3RQcm9wcyApID0+IHtcblx0aWYgKCAhIGRpc2FibGVkICkgcmV0dXJuICcnO1xuXG5cdHJldHVybiBjc3MoIHtcblx0XHRjb2xvcjogQ09MT1JTLnVpLnRleHREaXNhYmxlZCxcblx0fSApO1xufTtcblxuY29uc3QgZm9udFNpemVTdHlsZXMgPSAoIHsgc2VsZWN0U2l6ZSA9ICdkZWZhdWx0JyB9OiBTZWxlY3RQcm9wcyApID0+IHtcblx0Y29uc3Qgc2l6ZXMgPSB7XG5cdFx0ZGVmYXVsdDogJzEzcHgnLFxuXHRcdHNtYWxsOiAnMTFweCcsXG5cdFx0J19fdW5zdGFibGUtbGFyZ2UnOiAnMTNweCcsXG5cdH07XG5cblx0Y29uc3QgZm9udFNpemUgPSBzaXplc1sgc2VsZWN0U2l6ZSBdO1xuXHRjb25zdCBmb250U2l6ZU1vYmlsZSA9ICcxNnB4JztcblxuXHRpZiAoICEgZm9udFNpemUgKSByZXR1cm4gJyc7XG5cblx0cmV0dXJuIGNzc2Bcblx0XHRmb250LXNpemU6ICR7IGZvbnRTaXplTW9iaWxlIH07XG5cblx0XHRAbWVkaWEgKCBtaW4td2lkdGg6IDYwMHB4ICkge1xuXHRcdFx0Zm9udC1zaXplOiAkeyBmb250U2l6ZSB9O1xuXHRcdH1cblx0YDtcbn07XG5cbmNvbnN0IHNpemVTdHlsZXMgPSAoIHtcblx0X19uZXh0MzZweERlZmF1bHRTaXplLFxuXHRtdWx0aXBsZSxcblx0c2VsZWN0U2l6ZSA9ICdkZWZhdWx0Jyxcbn06IFNlbGVjdFByb3BzICkgPT4ge1xuXHRpZiAoIG11bHRpcGxlICkge1xuXHRcdC8vIFdoZW4gYG11bHRpcGxlYCwganVzdCB1c2UgdGhlIG5hdGl2ZSBicm93c2VyIHN0eWxlc1xuXHRcdC8vIHdpdGhvdXQgc2V0dGluZyBleHBsaWNpdCBoZWlnaHQuXG5cdFx0cmV0dXJuO1xuXHR9XG5cblx0Y29uc3Qgc2l6ZXMgPSB7XG5cdFx0ZGVmYXVsdDoge1xuXHRcdFx0aGVpZ2h0OiAzNixcblx0XHRcdG1pbkhlaWdodDogMzYsXG5cdFx0XHRwYWRkaW5nVG9wOiAwLFxuXHRcdFx0cGFkZGluZ0JvdHRvbTogMCxcblx0XHR9LFxuXHRcdHNtYWxsOiB7XG5cdFx0XHRoZWlnaHQ6IDI0LFxuXHRcdFx0bWluSGVpZ2h0OiAyNCxcblx0XHRcdHBhZGRpbmdUb3A6IDAsXG5cdFx0XHRwYWRkaW5nQm90dG9tOiAwLFxuXHRcdH0sXG5cdFx0J19fdW5zdGFibGUtbGFyZ2UnOiB7XG5cdFx0XHRoZWlnaHQ6IDQwLFxuXHRcdFx0bWluSGVpZ2h0OiA0MCxcblx0XHRcdHBhZGRpbmdUb3A6IDAsXG5cdFx0XHRwYWRkaW5nQm90dG9tOiAwLFxuXHRcdH0sXG5cdH07XG5cblx0aWYgKCAhIF9fbmV4dDM2cHhEZWZhdWx0U2l6ZSApIHtcblx0XHRzaXplcy5kZWZhdWx0ID0ge1xuXHRcdFx0aGVpZ2h0OiAzMCxcblx0XHRcdG1pbkhlaWdodDogMzAsXG5cdFx0XHRwYWRkaW5nVG9wOiAwLFxuXHRcdFx0cGFkZGluZ0JvdHRvbTogMCxcblx0XHR9O1xuXHR9XG5cblx0Y29uc3Qgc3R5bGUgPSBzaXplc1sgc2VsZWN0U2l6ZSBdIHx8IHNpemVzLmRlZmF1bHQ7XG5cblx0cmV0dXJuIGNzcyggc3R5bGUgKTtcbn07XG5cbmV4cG9ydCBjb25zdCBjaGV2cm9uSWNvblNpemUgPSAxODtcblxuY29uc3Qgc2l6ZVBhZGRpbmdzID0gKCB7XG5cdF9fbmV4dDM2cHhEZWZhdWx0U2l6ZSxcblx0bXVsdGlwbGUsXG5cdHNlbGVjdFNpemUgPSAnZGVmYXVsdCcsXG59OiBTZWxlY3RQcm9wcyApID0+IHtcblx0Y29uc3QgcGFkZGluZyA9IHtcblx0XHRkZWZhdWx0OiAxNixcblx0XHRzbWFsbDogOCxcblx0XHQnX191bnN0YWJsZS1sYXJnZSc6IDE2LFxuXHR9O1xuXG5cdGlmICggISBfX25leHQzNnB4RGVmYXVsdFNpemUgKSB7XG5cdFx0cGFkZGluZy5kZWZhdWx0ID0gODtcblx0fVxuXG5cdGNvbnN0IHNlbGVjdGVkUGFkZGluZyA9IHBhZGRpbmdbIHNlbGVjdFNpemUgXSB8fCBwYWRkaW5nLmRlZmF1bHQ7XG5cblx0cmV0dXJuIHJ0bCgge1xuXHRcdHBhZGRpbmdMZWZ0OiBzZWxlY3RlZFBhZGRpbmcsXG5cdFx0cGFkZGluZ1JpZ2h0OiBzZWxlY3RlZFBhZGRpbmcgKyBjaGV2cm9uSWNvblNpemUsXG5cdFx0Li4uKCBtdWx0aXBsZVxuXHRcdFx0PyB7XG5cdFx0XHRcdFx0cGFkZGluZ1RvcDogc2VsZWN0ZWRQYWRkaW5nLFxuXHRcdFx0XHRcdHBhZGRpbmdCb3R0b206IHNlbGVjdGVkUGFkZGluZyxcblx0XHRcdCAgfVxuXHRcdFx0OiB7fSApLFxuXHR9ICk7XG59O1xuXG5jb25zdCBvdmVyZmxvd1N0eWxlcyA9ICggeyBtdWx0aXBsZSB9OiBTZWxlY3RQcm9wcyApID0+IHtcblx0cmV0dXJuIHtcblx0XHRvdmVyZmxvdzogbXVsdGlwbGUgPyAnYXV0bycgOiAnaGlkZGVuJyxcblx0fTtcbn07XG5cbi8vIFRPRE86IFJlc29sdmUgbmVlZCB0byB1c2UgJiYmIHRvIGluY3JlYXNlIHNwZWNpZmljaXR5XG4vLyBodHRwczovL2dpdGh1Yi5jb20vV29yZFByZXNzL2d1dGVuYmVyZy9pc3N1ZXMvMTg0ODNcblxuZXhwb3J0IGNvbnN0IFNlbGVjdCA9IHN0eWxlZC5zZWxlY3Q8IFNlbGVjdFByb3BzID5gXG5cdCYmJiB7XG5cdFx0YXBwZWFyYW5jZTogbm9uZTtcblx0XHRiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcblx0XHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXHRcdGJvcmRlcjogbm9uZTtcblx0XHRib3gtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XG5cdFx0Y29sb3I6ICR7IENPTE9SUy5ncmF5WyA5MDAgXSB9O1xuXHRcdGRpc3BsYXk6IGJsb2NrO1xuXHRcdGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuXHRcdG1hcmdpbjogMDtcblx0XHR3aWR0aDogMTAwJTtcblx0XHRtYXgtd2lkdGg6IG5vbmU7XG5cdFx0Y3Vyc29yOiBwb2ludGVyO1xuXHRcdHdoaXRlLXNwYWNlOiBub3dyYXA7XG5cdFx0dGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG5cblx0XHQkeyBkaXNhYmxlZFN0eWxlcyB9O1xuXHRcdCR7IGZvbnRTaXplU3R5bGVzIH07XG5cdFx0JHsgc2l6ZVN0eWxlcyB9O1xuXHRcdCR7IHNpemVQYWRkaW5ncyB9O1xuXHRcdCR7IG92ZXJmbG93U3R5bGVzIH1cblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IERvd25BcnJvd1dyYXBwZXIgPSBzdHlsZWQuZGl2YFxuXHRtYXJnaW4taW5saW5lLWVuZDogJHsgc3BhY2UoIC0xICkgfTsgLy8gb3B0aWNhbGx5IGFkanVzdCB0aGUgaWNvblxuXHRsaW5lLWhlaWdodDogMDtcbmA7XG5cbmV4cG9ydCBjb25zdCBJbnB1dENvbnRyb2xTdWZmaXhXcmFwcGVyV2l0aENsaWNrVGhyb3VnaCA9IHN0eWxlZChcblx0SW5wdXRDb250cm9sU3VmZml4V3JhcHBlclxuKWBcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHRwb2ludGVyLWV2ZW50czogbm9uZTtcblxuXHQkeyBydGwoIHsgcmlnaHQ6IDAgfSApIH1cbmA7XG4iXX0= */");
};
const fontSizeStyles = ({
  selectSize = 'default'
}) => {
  const sizes = {
    default: '13px',
    small: '11px',
    '__unstable-large': '13px'
  };
  const fontSize = sizes[selectSize];
  const fontSizeMobile = '16px';
  if (!fontSize) return '';
  return /*#__PURE__*/css("font-size:", fontSizeMobile, ";@media ( min-width: 600px ){font-size:", fontSize, ";}" + (process.env.NODE_ENV === "production" ? "" : ";label:fontSizeStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvc2VsZWN0LWNvbnRyb2wvc3R5bGVzL3NlbGVjdC1jb250cm9sLXN0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE0Q1ciLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9zZWxlY3QtY29udHJvbC9zdHlsZXMvc2VsZWN0LWNvbnRyb2wtc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBFeHRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuXG4vKipcbiAqIEludGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgeyBDT0xPUlMsIHJ0bCB9IGZyb20gJy4uLy4uL3V0aWxzJztcbmltcG9ydCB7IHNwYWNlIH0gZnJvbSAnLi4vLi4vdWkvdXRpbHMvc3BhY2UnO1xuaW1wb3J0IHR5cGUgeyBTZWxlY3RDb250cm9sUHJvcHMgfSBmcm9tICcuLi90eXBlcyc7XG5pbXBvcnQgSW5wdXRDb250cm9sU3VmZml4V3JhcHBlciBmcm9tICcuLi8uLi9pbnB1dC1jb250cm9sL2lucHV0LXN1ZmZpeC13cmFwcGVyJztcblxuaW50ZXJmYWNlIFNlbGVjdFByb3BzXG5cdGV4dGVuZHMgUGljazxcblx0XHRTZWxlY3RDb250cm9sUHJvcHMsXG5cdFx0J19fbmV4dDM2cHhEZWZhdWx0U2l6ZScgfCAnZGlzYWJsZWQnIHwgJ211bHRpcGxlJ1xuXHQ+IHtcblx0Ly8gVXNpbmcgYHNlbGVjdFNpemVgIGluc3RlYWQgb2YgYHNpemVgIHRvIGF2b2lkIGEgdHlwZSBjb25mbGljdCB3aXRoIHRoZVxuXHQvLyBgc2l6ZWAgSFRNTCBhdHRyaWJ1dGUgb2YgdGhlIGBzZWxlY3RgIGVsZW1lbnQuXG5cdHNlbGVjdFNpemU/OiBTZWxlY3RDb250cm9sUHJvcHNbICdzaXplJyBdO1xufVxuXG5jb25zdCBkaXNhYmxlZFN0eWxlcyA9ICggeyBkaXNhYmxlZCB9OiBTZWxlY3RQcm9wcyApID0+IHtcblx0aWYgKCAhIGRpc2FibGVkICkgcmV0dXJuICcnO1xuXG5cdHJldHVybiBjc3MoIHtcblx0XHRjb2xvcjogQ09MT1JTLnVpLnRleHREaXNhYmxlZCxcblx0fSApO1xufTtcblxuY29uc3QgZm9udFNpemVTdHlsZXMgPSAoIHsgc2VsZWN0U2l6ZSA9ICdkZWZhdWx0JyB9OiBTZWxlY3RQcm9wcyApID0+IHtcblx0Y29uc3Qgc2l6ZXMgPSB7XG5cdFx0ZGVmYXVsdDogJzEzcHgnLFxuXHRcdHNtYWxsOiAnMTFweCcsXG5cdFx0J19fdW5zdGFibGUtbGFyZ2UnOiAnMTNweCcsXG5cdH07XG5cblx0Y29uc3QgZm9udFNpemUgPSBzaXplc1sgc2VsZWN0U2l6ZSBdO1xuXHRjb25zdCBmb250U2l6ZU1vYmlsZSA9ICcxNnB4JztcblxuXHRpZiAoICEgZm9udFNpemUgKSByZXR1cm4gJyc7XG5cblx0cmV0dXJuIGNzc2Bcblx0XHRmb250LXNpemU6ICR7IGZvbnRTaXplTW9iaWxlIH07XG5cblx0XHRAbWVkaWEgKCBtaW4td2lkdGg6IDYwMHB4ICkge1xuXHRcdFx0Zm9udC1zaXplOiAkeyBmb250U2l6ZSB9O1xuXHRcdH1cblx0YDtcbn07XG5cbmNvbnN0IHNpemVTdHlsZXMgPSAoIHtcblx0X19uZXh0MzZweERlZmF1bHRTaXplLFxuXHRtdWx0aXBsZSxcblx0c2VsZWN0U2l6ZSA9ICdkZWZhdWx0Jyxcbn06IFNlbGVjdFByb3BzICkgPT4ge1xuXHRpZiAoIG11bHRpcGxlICkge1xuXHRcdC8vIFdoZW4gYG11bHRpcGxlYCwganVzdCB1c2UgdGhlIG5hdGl2ZSBicm93c2VyIHN0eWxlc1xuXHRcdC8vIHdpdGhvdXQgc2V0dGluZyBleHBsaWNpdCBoZWlnaHQuXG5cdFx0cmV0dXJuO1xuXHR9XG5cblx0Y29uc3Qgc2l6ZXMgPSB7XG5cdFx0ZGVmYXVsdDoge1xuXHRcdFx0aGVpZ2h0OiAzNixcblx0XHRcdG1pbkhlaWdodDogMzYsXG5cdFx0XHRwYWRkaW5nVG9wOiAwLFxuXHRcdFx0cGFkZGluZ0JvdHRvbTogMCxcblx0XHR9LFxuXHRcdHNtYWxsOiB7XG5cdFx0XHRoZWlnaHQ6IDI0LFxuXHRcdFx0bWluSGVpZ2h0OiAyNCxcblx0XHRcdHBhZGRpbmdUb3A6IDAsXG5cdFx0XHRwYWRkaW5nQm90dG9tOiAwLFxuXHRcdH0sXG5cdFx0J19fdW5zdGFibGUtbGFyZ2UnOiB7XG5cdFx0XHRoZWlnaHQ6IDQwLFxuXHRcdFx0bWluSGVpZ2h0OiA0MCxcblx0XHRcdHBhZGRpbmdUb3A6IDAsXG5cdFx0XHRwYWRkaW5nQm90dG9tOiAwLFxuXHRcdH0sXG5cdH07XG5cblx0aWYgKCAhIF9fbmV4dDM2cHhEZWZhdWx0U2l6ZSApIHtcblx0XHRzaXplcy5kZWZhdWx0ID0ge1xuXHRcdFx0aGVpZ2h0OiAzMCxcblx0XHRcdG1pbkhlaWdodDogMzAsXG5cdFx0XHRwYWRkaW5nVG9wOiAwLFxuXHRcdFx0cGFkZGluZ0JvdHRvbTogMCxcblx0XHR9O1xuXHR9XG5cblx0Y29uc3Qgc3R5bGUgPSBzaXplc1sgc2VsZWN0U2l6ZSBdIHx8IHNpemVzLmRlZmF1bHQ7XG5cblx0cmV0dXJuIGNzcyggc3R5bGUgKTtcbn07XG5cbmV4cG9ydCBjb25zdCBjaGV2cm9uSWNvblNpemUgPSAxODtcblxuY29uc3Qgc2l6ZVBhZGRpbmdzID0gKCB7XG5cdF9fbmV4dDM2cHhEZWZhdWx0U2l6ZSxcblx0bXVsdGlwbGUsXG5cdHNlbGVjdFNpemUgPSAnZGVmYXVsdCcsXG59OiBTZWxlY3RQcm9wcyApID0+IHtcblx0Y29uc3QgcGFkZGluZyA9IHtcblx0XHRkZWZhdWx0OiAxNixcblx0XHRzbWFsbDogOCxcblx0XHQnX191bnN0YWJsZS1sYXJnZSc6IDE2LFxuXHR9O1xuXG5cdGlmICggISBfX25leHQzNnB4RGVmYXVsdFNpemUgKSB7XG5cdFx0cGFkZGluZy5kZWZhdWx0ID0gODtcblx0fVxuXG5cdGNvbnN0IHNlbGVjdGVkUGFkZGluZyA9IHBhZGRpbmdbIHNlbGVjdFNpemUgXSB8fCBwYWRkaW5nLmRlZmF1bHQ7XG5cblx0cmV0dXJuIHJ0bCgge1xuXHRcdHBhZGRpbmdMZWZ0OiBzZWxlY3RlZFBhZGRpbmcsXG5cdFx0cGFkZGluZ1JpZ2h0OiBzZWxlY3RlZFBhZGRpbmcgKyBjaGV2cm9uSWNvblNpemUsXG5cdFx0Li4uKCBtdWx0aXBsZVxuXHRcdFx0PyB7XG5cdFx0XHRcdFx0cGFkZGluZ1RvcDogc2VsZWN0ZWRQYWRkaW5nLFxuXHRcdFx0XHRcdHBhZGRpbmdCb3R0b206IHNlbGVjdGVkUGFkZGluZyxcblx0XHRcdCAgfVxuXHRcdFx0OiB7fSApLFxuXHR9ICk7XG59O1xuXG5jb25zdCBvdmVyZmxvd1N0eWxlcyA9ICggeyBtdWx0aXBsZSB9OiBTZWxlY3RQcm9wcyApID0+IHtcblx0cmV0dXJuIHtcblx0XHRvdmVyZmxvdzogbXVsdGlwbGUgPyAnYXV0bycgOiAnaGlkZGVuJyxcblx0fTtcbn07XG5cbi8vIFRPRE86IFJlc29sdmUgbmVlZCB0byB1c2UgJiYmIHRvIGluY3JlYXNlIHNwZWNpZmljaXR5XG4vLyBodHRwczovL2dpdGh1Yi5jb20vV29yZFByZXNzL2d1dGVuYmVyZy9pc3N1ZXMvMTg0ODNcblxuZXhwb3J0IGNvbnN0IFNlbGVjdCA9IHN0eWxlZC5zZWxlY3Q8IFNlbGVjdFByb3BzID5gXG5cdCYmJiB7XG5cdFx0YXBwZWFyYW5jZTogbm9uZTtcblx0XHRiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcblx0XHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXHRcdGJvcmRlcjogbm9uZTtcblx0XHRib3gtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XG5cdFx0Y29sb3I6ICR7IENPTE9SUy5ncmF5WyA5MDAgXSB9O1xuXHRcdGRpc3BsYXk6IGJsb2NrO1xuXHRcdGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuXHRcdG1hcmdpbjogMDtcblx0XHR3aWR0aDogMTAwJTtcblx0XHRtYXgtd2lkdGg6IG5vbmU7XG5cdFx0Y3Vyc29yOiBwb2ludGVyO1xuXHRcdHdoaXRlLXNwYWNlOiBub3dyYXA7XG5cdFx0dGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG5cblx0XHQkeyBkaXNhYmxlZFN0eWxlcyB9O1xuXHRcdCR7IGZvbnRTaXplU3R5bGVzIH07XG5cdFx0JHsgc2l6ZVN0eWxlcyB9O1xuXHRcdCR7IHNpemVQYWRkaW5ncyB9O1xuXHRcdCR7IG92ZXJmbG93U3R5bGVzIH1cblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IERvd25BcnJvd1dyYXBwZXIgPSBzdHlsZWQuZGl2YFxuXHRtYXJnaW4taW5saW5lLWVuZDogJHsgc3BhY2UoIC0xICkgfTsgLy8gb3B0aWNhbGx5IGFkanVzdCB0aGUgaWNvblxuXHRsaW5lLWhlaWdodDogMDtcbmA7XG5cbmV4cG9ydCBjb25zdCBJbnB1dENvbnRyb2xTdWZmaXhXcmFwcGVyV2l0aENsaWNrVGhyb3VnaCA9IHN0eWxlZChcblx0SW5wdXRDb250cm9sU3VmZml4V3JhcHBlclxuKWBcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHRwb2ludGVyLWV2ZW50czogbm9uZTtcblxuXHQkeyBydGwoIHsgcmlnaHQ6IDAgfSApIH1cbmA7XG4iXX0= */");
};
const sizeStyles = ({
  __next36pxDefaultSize,
  multiple,
  selectSize = 'default'
}) => {
  if (multiple) {
    // When `multiple`, just use the native browser styles
    // without setting explicit height.
    return;
  }
  const sizes = {
    default: {
      height: 36,
      minHeight: 36,
      paddingTop: 0,
      paddingBottom: 0
    },
    small: {
      height: 24,
      minHeight: 24,
      paddingTop: 0,
      paddingBottom: 0
    },
    '__unstable-large': {
      height: 40,
      minHeight: 40,
      paddingTop: 0,
      paddingBottom: 0
    }
  };
  if (!__next36pxDefaultSize) {
    sizes.default = {
      height: 30,
      minHeight: 30,
      paddingTop: 0,
      paddingBottom: 0
    };
  }
  const style = sizes[selectSize] || sizes.default;
  return /*#__PURE__*/css(style, process.env.NODE_ENV === "production" ? "" : ";label:sizeStyles;", process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvc2VsZWN0LWNvbnRyb2wvc3R5bGVzL3NlbGVjdC1jb250cm9sLXN0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFnR1EiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9zZWxlY3QtY29udHJvbC9zdHlsZXMvc2VsZWN0LWNvbnRyb2wtc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBFeHRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuXG4vKipcbiAqIEludGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgeyBDT0xPUlMsIHJ0bCB9IGZyb20gJy4uLy4uL3V0aWxzJztcbmltcG9ydCB7IHNwYWNlIH0gZnJvbSAnLi4vLi4vdWkvdXRpbHMvc3BhY2UnO1xuaW1wb3J0IHR5cGUgeyBTZWxlY3RDb250cm9sUHJvcHMgfSBmcm9tICcuLi90eXBlcyc7XG5pbXBvcnQgSW5wdXRDb250cm9sU3VmZml4V3JhcHBlciBmcm9tICcuLi8uLi9pbnB1dC1jb250cm9sL2lucHV0LXN1ZmZpeC13cmFwcGVyJztcblxuaW50ZXJmYWNlIFNlbGVjdFByb3BzXG5cdGV4dGVuZHMgUGljazxcblx0XHRTZWxlY3RDb250cm9sUHJvcHMsXG5cdFx0J19fbmV4dDM2cHhEZWZhdWx0U2l6ZScgfCAnZGlzYWJsZWQnIHwgJ211bHRpcGxlJ1xuXHQ+IHtcblx0Ly8gVXNpbmcgYHNlbGVjdFNpemVgIGluc3RlYWQgb2YgYHNpemVgIHRvIGF2b2lkIGEgdHlwZSBjb25mbGljdCB3aXRoIHRoZVxuXHQvLyBgc2l6ZWAgSFRNTCBhdHRyaWJ1dGUgb2YgdGhlIGBzZWxlY3RgIGVsZW1lbnQuXG5cdHNlbGVjdFNpemU/OiBTZWxlY3RDb250cm9sUHJvcHNbICdzaXplJyBdO1xufVxuXG5jb25zdCBkaXNhYmxlZFN0eWxlcyA9ICggeyBkaXNhYmxlZCB9OiBTZWxlY3RQcm9wcyApID0+IHtcblx0aWYgKCAhIGRpc2FibGVkICkgcmV0dXJuICcnO1xuXG5cdHJldHVybiBjc3MoIHtcblx0XHRjb2xvcjogQ09MT1JTLnVpLnRleHREaXNhYmxlZCxcblx0fSApO1xufTtcblxuY29uc3QgZm9udFNpemVTdHlsZXMgPSAoIHsgc2VsZWN0U2l6ZSA9ICdkZWZhdWx0JyB9OiBTZWxlY3RQcm9wcyApID0+IHtcblx0Y29uc3Qgc2l6ZXMgPSB7XG5cdFx0ZGVmYXVsdDogJzEzcHgnLFxuXHRcdHNtYWxsOiAnMTFweCcsXG5cdFx0J19fdW5zdGFibGUtbGFyZ2UnOiAnMTNweCcsXG5cdH07XG5cblx0Y29uc3QgZm9udFNpemUgPSBzaXplc1sgc2VsZWN0U2l6ZSBdO1xuXHRjb25zdCBmb250U2l6ZU1vYmlsZSA9ICcxNnB4JztcblxuXHRpZiAoICEgZm9udFNpemUgKSByZXR1cm4gJyc7XG5cblx0cmV0dXJuIGNzc2Bcblx0XHRmb250LXNpemU6ICR7IGZvbnRTaXplTW9iaWxlIH07XG5cblx0XHRAbWVkaWEgKCBtaW4td2lkdGg6IDYwMHB4ICkge1xuXHRcdFx0Zm9udC1zaXplOiAkeyBmb250U2l6ZSB9O1xuXHRcdH1cblx0YDtcbn07XG5cbmNvbnN0IHNpemVTdHlsZXMgPSAoIHtcblx0X19uZXh0MzZweERlZmF1bHRTaXplLFxuXHRtdWx0aXBsZSxcblx0c2VsZWN0U2l6ZSA9ICdkZWZhdWx0Jyxcbn06IFNlbGVjdFByb3BzICkgPT4ge1xuXHRpZiAoIG11bHRpcGxlICkge1xuXHRcdC8vIFdoZW4gYG11bHRpcGxlYCwganVzdCB1c2UgdGhlIG5hdGl2ZSBicm93c2VyIHN0eWxlc1xuXHRcdC8vIHdpdGhvdXQgc2V0dGluZyBleHBsaWNpdCBoZWlnaHQuXG5cdFx0cmV0dXJuO1xuXHR9XG5cblx0Y29uc3Qgc2l6ZXMgPSB7XG5cdFx0ZGVmYXVsdDoge1xuXHRcdFx0aGVpZ2h0OiAzNixcblx0XHRcdG1pbkhlaWdodDogMzYsXG5cdFx0XHRwYWRkaW5nVG9wOiAwLFxuXHRcdFx0cGFkZGluZ0JvdHRvbTogMCxcblx0XHR9LFxuXHRcdHNtYWxsOiB7XG5cdFx0XHRoZWlnaHQ6IDI0LFxuXHRcdFx0bWluSGVpZ2h0OiAyNCxcblx0XHRcdHBhZGRpbmdUb3A6IDAsXG5cdFx0XHRwYWRkaW5nQm90dG9tOiAwLFxuXHRcdH0sXG5cdFx0J19fdW5zdGFibGUtbGFyZ2UnOiB7XG5cdFx0XHRoZWlnaHQ6IDQwLFxuXHRcdFx0bWluSGVpZ2h0OiA0MCxcblx0XHRcdHBhZGRpbmdUb3A6IDAsXG5cdFx0XHRwYWRkaW5nQm90dG9tOiAwLFxuXHRcdH0sXG5cdH07XG5cblx0aWYgKCAhIF9fbmV4dDM2cHhEZWZhdWx0U2l6ZSApIHtcblx0XHRzaXplcy5kZWZhdWx0ID0ge1xuXHRcdFx0aGVpZ2h0OiAzMCxcblx0XHRcdG1pbkhlaWdodDogMzAsXG5cdFx0XHRwYWRkaW5nVG9wOiAwLFxuXHRcdFx0cGFkZGluZ0JvdHRvbTogMCxcblx0XHR9O1xuXHR9XG5cblx0Y29uc3Qgc3R5bGUgPSBzaXplc1sgc2VsZWN0U2l6ZSBdIHx8IHNpemVzLmRlZmF1bHQ7XG5cblx0cmV0dXJuIGNzcyggc3R5bGUgKTtcbn07XG5cbmV4cG9ydCBjb25zdCBjaGV2cm9uSWNvblNpemUgPSAxODtcblxuY29uc3Qgc2l6ZVBhZGRpbmdzID0gKCB7XG5cdF9fbmV4dDM2cHhEZWZhdWx0U2l6ZSxcblx0bXVsdGlwbGUsXG5cdHNlbGVjdFNpemUgPSAnZGVmYXVsdCcsXG59OiBTZWxlY3RQcm9wcyApID0+IHtcblx0Y29uc3QgcGFkZGluZyA9IHtcblx0XHRkZWZhdWx0OiAxNixcblx0XHRzbWFsbDogOCxcblx0XHQnX191bnN0YWJsZS1sYXJnZSc6IDE2LFxuXHR9O1xuXG5cdGlmICggISBfX25leHQzNnB4RGVmYXVsdFNpemUgKSB7XG5cdFx0cGFkZGluZy5kZWZhdWx0ID0gODtcblx0fVxuXG5cdGNvbnN0IHNlbGVjdGVkUGFkZGluZyA9IHBhZGRpbmdbIHNlbGVjdFNpemUgXSB8fCBwYWRkaW5nLmRlZmF1bHQ7XG5cblx0cmV0dXJuIHJ0bCgge1xuXHRcdHBhZGRpbmdMZWZ0OiBzZWxlY3RlZFBhZGRpbmcsXG5cdFx0cGFkZGluZ1JpZ2h0OiBzZWxlY3RlZFBhZGRpbmcgKyBjaGV2cm9uSWNvblNpemUsXG5cdFx0Li4uKCBtdWx0aXBsZVxuXHRcdFx0PyB7XG5cdFx0XHRcdFx0cGFkZGluZ1RvcDogc2VsZWN0ZWRQYWRkaW5nLFxuXHRcdFx0XHRcdHBhZGRpbmdCb3R0b206IHNlbGVjdGVkUGFkZGluZyxcblx0XHRcdCAgfVxuXHRcdFx0OiB7fSApLFxuXHR9ICk7XG59O1xuXG5jb25zdCBvdmVyZmxvd1N0eWxlcyA9ICggeyBtdWx0aXBsZSB9OiBTZWxlY3RQcm9wcyApID0+IHtcblx0cmV0dXJuIHtcblx0XHRvdmVyZmxvdzogbXVsdGlwbGUgPyAnYXV0bycgOiAnaGlkZGVuJyxcblx0fTtcbn07XG5cbi8vIFRPRE86IFJlc29sdmUgbmVlZCB0byB1c2UgJiYmIHRvIGluY3JlYXNlIHNwZWNpZmljaXR5XG4vLyBodHRwczovL2dpdGh1Yi5jb20vV29yZFByZXNzL2d1dGVuYmVyZy9pc3N1ZXMvMTg0ODNcblxuZXhwb3J0IGNvbnN0IFNlbGVjdCA9IHN0eWxlZC5zZWxlY3Q8IFNlbGVjdFByb3BzID5gXG5cdCYmJiB7XG5cdFx0YXBwZWFyYW5jZTogbm9uZTtcblx0XHRiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcblx0XHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXHRcdGJvcmRlcjogbm9uZTtcblx0XHRib3gtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XG5cdFx0Y29sb3I6ICR7IENPTE9SUy5ncmF5WyA5MDAgXSB9O1xuXHRcdGRpc3BsYXk6IGJsb2NrO1xuXHRcdGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuXHRcdG1hcmdpbjogMDtcblx0XHR3aWR0aDogMTAwJTtcblx0XHRtYXgtd2lkdGg6IG5vbmU7XG5cdFx0Y3Vyc29yOiBwb2ludGVyO1xuXHRcdHdoaXRlLXNwYWNlOiBub3dyYXA7XG5cdFx0dGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG5cblx0XHQkeyBkaXNhYmxlZFN0eWxlcyB9O1xuXHRcdCR7IGZvbnRTaXplU3R5bGVzIH07XG5cdFx0JHsgc2l6ZVN0eWxlcyB9O1xuXHRcdCR7IHNpemVQYWRkaW5ncyB9O1xuXHRcdCR7IG92ZXJmbG93U3R5bGVzIH1cblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IERvd25BcnJvd1dyYXBwZXIgPSBzdHlsZWQuZGl2YFxuXHRtYXJnaW4taW5saW5lLWVuZDogJHsgc3BhY2UoIC0xICkgfTsgLy8gb3B0aWNhbGx5IGFkanVzdCB0aGUgaWNvblxuXHRsaW5lLWhlaWdodDogMDtcbmA7XG5cbmV4cG9ydCBjb25zdCBJbnB1dENvbnRyb2xTdWZmaXhXcmFwcGVyV2l0aENsaWNrVGhyb3VnaCA9IHN0eWxlZChcblx0SW5wdXRDb250cm9sU3VmZml4V3JhcHBlclxuKWBcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHRwb2ludGVyLWV2ZW50czogbm9uZTtcblxuXHQkeyBydGwoIHsgcmlnaHQ6IDAgfSApIH1cbmA7XG4iXX0= */");
};
export const chevronIconSize = 18;
const sizePaddings = ({
  __next36pxDefaultSize,
  multiple,
  selectSize = 'default'
}) => {
  const padding = {
    default: 16,
    small: 8,
    '__unstable-large': 16
  };
  if (!__next36pxDefaultSize) {
    padding.default = 8;
  }
  const selectedPadding = padding[selectSize] || padding.default;
  return rtl({
    paddingLeft: selectedPadding,
    paddingRight: selectedPadding + chevronIconSize,
    ...(multiple ? {
      paddingTop: selectedPadding,
      paddingBottom: selectedPadding
    } : {})
  });
};
const overflowStyles = ({
  multiple
}) => {
  return {
    overflow: multiple ? 'auto' : 'hidden'
  };
};

// TODO: Resolve need to use &&& to increase specificity
// https://github.com/WordPress/gutenberg/issues/18483

export const Select = _styled("select", process.env.NODE_ENV === "production" ? {
  target: "e1mv6sxx2"
} : {
  target: "e1mv6sxx2",
  label: "Select"
})("&&&{appearance:none;background:transparent;box-sizing:border-box;border:none;box-shadow:none!important;color:", COLORS.gray[900], ";display:block;font-family:inherit;margin:0;width:100%;max-width:none;cursor:pointer;white-space:nowrap;text-overflow:ellipsis;", disabledStyles, ";", fontSizeStyles, ";", sizeStyles, ";", sizePaddings, ";", overflowStyles, ";}" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvc2VsZWN0LWNvbnRyb2wvc3R5bGVzL3NlbGVjdC1jb250cm9sLXN0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEySWtEIiwiZmlsZSI6IkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvc2VsZWN0LWNvbnRyb2wvc3R5bGVzL3NlbGVjdC1jb250cm9sLXN0eWxlcy50cyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcblxuLyoqXG4gKiBJbnRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHsgQ09MT1JTLCBydGwgfSBmcm9tICcuLi8uLi91dGlscyc7XG5pbXBvcnQgeyBzcGFjZSB9IGZyb20gJy4uLy4uL3VpL3V0aWxzL3NwYWNlJztcbmltcG9ydCB0eXBlIHsgU2VsZWN0Q29udHJvbFByb3BzIH0gZnJvbSAnLi4vdHlwZXMnO1xuaW1wb3J0IElucHV0Q29udHJvbFN1ZmZpeFdyYXBwZXIgZnJvbSAnLi4vLi4vaW5wdXQtY29udHJvbC9pbnB1dC1zdWZmaXgtd3JhcHBlcic7XG5cbmludGVyZmFjZSBTZWxlY3RQcm9wc1xuXHRleHRlbmRzIFBpY2s8XG5cdFx0U2VsZWN0Q29udHJvbFByb3BzLFxuXHRcdCdfX25leHQzNnB4RGVmYXVsdFNpemUnIHwgJ2Rpc2FibGVkJyB8ICdtdWx0aXBsZSdcblx0PiB7XG5cdC8vIFVzaW5nIGBzZWxlY3RTaXplYCBpbnN0ZWFkIG9mIGBzaXplYCB0byBhdm9pZCBhIHR5cGUgY29uZmxpY3Qgd2l0aCB0aGVcblx0Ly8gYHNpemVgIEhUTUwgYXR0cmlidXRlIG9mIHRoZSBgc2VsZWN0YCBlbGVtZW50LlxuXHRzZWxlY3RTaXplPzogU2VsZWN0Q29udHJvbFByb3BzWyAnc2l6ZScgXTtcbn1cblxuY29uc3QgZGlzYWJsZWRTdHlsZXMgPSAoIHsgZGlzYWJsZWQgfTogU2VsZWN0UHJvcHMgKSA9PiB7XG5cdGlmICggISBkaXNhYmxlZCApIHJldHVybiAnJztcblxuXHRyZXR1cm4gY3NzKCB7XG5cdFx0Y29sb3I6IENPTE9SUy51aS50ZXh0RGlzYWJsZWQsXG5cdH0gKTtcbn07XG5cbmNvbnN0IGZvbnRTaXplU3R5bGVzID0gKCB7IHNlbGVjdFNpemUgPSAnZGVmYXVsdCcgfTogU2VsZWN0UHJvcHMgKSA9PiB7XG5cdGNvbnN0IHNpemVzID0ge1xuXHRcdGRlZmF1bHQ6ICcxM3B4Jyxcblx0XHRzbWFsbDogJzExcHgnLFxuXHRcdCdfX3Vuc3RhYmxlLWxhcmdlJzogJzEzcHgnLFxuXHR9O1xuXG5cdGNvbnN0IGZvbnRTaXplID0gc2l6ZXNbIHNlbGVjdFNpemUgXTtcblx0Y29uc3QgZm9udFNpemVNb2JpbGUgPSAnMTZweCc7XG5cblx0aWYgKCAhIGZvbnRTaXplICkgcmV0dXJuICcnO1xuXG5cdHJldHVybiBjc3NgXG5cdFx0Zm9udC1zaXplOiAkeyBmb250U2l6ZU1vYmlsZSB9O1xuXG5cdFx0QG1lZGlhICggbWluLXdpZHRoOiA2MDBweCApIHtcblx0XHRcdGZvbnQtc2l6ZTogJHsgZm9udFNpemUgfTtcblx0XHR9XG5cdGA7XG59O1xuXG5jb25zdCBzaXplU3R5bGVzID0gKCB7XG5cdF9fbmV4dDM2cHhEZWZhdWx0U2l6ZSxcblx0bXVsdGlwbGUsXG5cdHNlbGVjdFNpemUgPSAnZGVmYXVsdCcsXG59OiBTZWxlY3RQcm9wcyApID0+IHtcblx0aWYgKCBtdWx0aXBsZSApIHtcblx0XHQvLyBXaGVuIGBtdWx0aXBsZWAsIGp1c3QgdXNlIHRoZSBuYXRpdmUgYnJvd3NlciBzdHlsZXNcblx0XHQvLyB3aXRob3V0IHNldHRpbmcgZXhwbGljaXQgaGVpZ2h0LlxuXHRcdHJldHVybjtcblx0fVxuXG5cdGNvbnN0IHNpemVzID0ge1xuXHRcdGRlZmF1bHQ6IHtcblx0XHRcdGhlaWdodDogMzYsXG5cdFx0XHRtaW5IZWlnaHQ6IDM2LFxuXHRcdFx0cGFkZGluZ1RvcDogMCxcblx0XHRcdHBhZGRpbmdCb3R0b206IDAsXG5cdFx0fSxcblx0XHRzbWFsbDoge1xuXHRcdFx0aGVpZ2h0OiAyNCxcblx0XHRcdG1pbkhlaWdodDogMjQsXG5cdFx0XHRwYWRkaW5nVG9wOiAwLFxuXHRcdFx0cGFkZGluZ0JvdHRvbTogMCxcblx0XHR9LFxuXHRcdCdfX3Vuc3RhYmxlLWxhcmdlJzoge1xuXHRcdFx0aGVpZ2h0OiA0MCxcblx0XHRcdG1pbkhlaWdodDogNDAsXG5cdFx0XHRwYWRkaW5nVG9wOiAwLFxuXHRcdFx0cGFkZGluZ0JvdHRvbTogMCxcblx0XHR9LFxuXHR9O1xuXG5cdGlmICggISBfX25leHQzNnB4RGVmYXVsdFNpemUgKSB7XG5cdFx0c2l6ZXMuZGVmYXVsdCA9IHtcblx0XHRcdGhlaWdodDogMzAsXG5cdFx0XHRtaW5IZWlnaHQ6IDMwLFxuXHRcdFx0cGFkZGluZ1RvcDogMCxcblx0XHRcdHBhZGRpbmdCb3R0b206IDAsXG5cdFx0fTtcblx0fVxuXG5cdGNvbnN0IHN0eWxlID0gc2l6ZXNbIHNlbGVjdFNpemUgXSB8fCBzaXplcy5kZWZhdWx0O1xuXG5cdHJldHVybiBjc3MoIHN0eWxlICk7XG59O1xuXG5leHBvcnQgY29uc3QgY2hldnJvbkljb25TaXplID0gMTg7XG5cbmNvbnN0IHNpemVQYWRkaW5ncyA9ICgge1xuXHRfX25leHQzNnB4RGVmYXVsdFNpemUsXG5cdG11bHRpcGxlLFxuXHRzZWxlY3RTaXplID0gJ2RlZmF1bHQnLFxufTogU2VsZWN0UHJvcHMgKSA9PiB7XG5cdGNvbnN0IHBhZGRpbmcgPSB7XG5cdFx0ZGVmYXVsdDogMTYsXG5cdFx0c21hbGw6IDgsXG5cdFx0J19fdW5zdGFibGUtbGFyZ2UnOiAxNixcblx0fTtcblxuXHRpZiAoICEgX19uZXh0MzZweERlZmF1bHRTaXplICkge1xuXHRcdHBhZGRpbmcuZGVmYXVsdCA9IDg7XG5cdH1cblxuXHRjb25zdCBzZWxlY3RlZFBhZGRpbmcgPSBwYWRkaW5nWyBzZWxlY3RTaXplIF0gfHwgcGFkZGluZy5kZWZhdWx0O1xuXG5cdHJldHVybiBydGwoIHtcblx0XHRwYWRkaW5nTGVmdDogc2VsZWN0ZWRQYWRkaW5nLFxuXHRcdHBhZGRpbmdSaWdodDogc2VsZWN0ZWRQYWRkaW5nICsgY2hldnJvbkljb25TaXplLFxuXHRcdC4uLiggbXVsdGlwbGVcblx0XHRcdD8ge1xuXHRcdFx0XHRcdHBhZGRpbmdUb3A6IHNlbGVjdGVkUGFkZGluZyxcblx0XHRcdFx0XHRwYWRkaW5nQm90dG9tOiBzZWxlY3RlZFBhZGRpbmcsXG5cdFx0XHQgIH1cblx0XHRcdDoge30gKSxcblx0fSApO1xufTtcblxuY29uc3Qgb3ZlcmZsb3dTdHlsZXMgPSAoIHsgbXVsdGlwbGUgfTogU2VsZWN0UHJvcHMgKSA9PiB7XG5cdHJldHVybiB7XG5cdFx0b3ZlcmZsb3c6IG11bHRpcGxlID8gJ2F1dG8nIDogJ2hpZGRlbicsXG5cdH07XG59O1xuXG4vLyBUT0RPOiBSZXNvbHZlIG5lZWQgdG8gdXNlICYmJiB0byBpbmNyZWFzZSBzcGVjaWZpY2l0eVxuLy8gaHR0cHM6Ly9naXRodWIuY29tL1dvcmRQcmVzcy9ndXRlbmJlcmcvaXNzdWVzLzE4NDgzXG5cbmV4cG9ydCBjb25zdCBTZWxlY3QgPSBzdHlsZWQuc2VsZWN0PCBTZWxlY3RQcm9wcyA+YFxuXHQmJiYge1xuXHRcdGFwcGVhcmFuY2U6IG5vbmU7XG5cdFx0YmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG5cdFx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0XHRib3JkZXI6IG5vbmU7XG5cdFx0Ym94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xuXHRcdGNvbG9yOiAkeyBDT0xPUlMuZ3JheVsgOTAwIF0gfTtcblx0XHRkaXNwbGF5OiBibG9jaztcblx0XHRmb250LWZhbWlseTogaW5oZXJpdDtcblx0XHRtYXJnaW46IDA7XG5cdFx0d2lkdGg6IDEwMCU7XG5cdFx0bWF4LXdpZHRoOiBub25lO1xuXHRcdGN1cnNvcjogcG9pbnRlcjtcblx0XHR3aGl0ZS1zcGFjZTogbm93cmFwO1xuXHRcdHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuXG5cdFx0JHsgZGlzYWJsZWRTdHlsZXMgfTtcblx0XHQkeyBmb250U2l6ZVN0eWxlcyB9O1xuXHRcdCR7IHNpemVTdHlsZXMgfTtcblx0XHQkeyBzaXplUGFkZGluZ3MgfTtcblx0XHQkeyBvdmVyZmxvd1N0eWxlcyB9XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBEb3duQXJyb3dXcmFwcGVyID0gc3R5bGVkLmRpdmBcblx0bWFyZ2luLWlubGluZS1lbmQ6ICR7IHNwYWNlKCAtMSApIH07IC8vIG9wdGljYWxseSBhZGp1c3QgdGhlIGljb25cblx0bGluZS1oZWlnaHQ6IDA7XG5gO1xuXG5leHBvcnQgY29uc3QgSW5wdXRDb250cm9sU3VmZml4V3JhcHBlcldpdGhDbGlja1Rocm91Z2ggPSBzdHlsZWQoXG5cdElucHV0Q29udHJvbFN1ZmZpeFdyYXBwZXJcbilgXG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0cG9pbnRlci1ldmVudHM6IG5vbmU7XG5cblx0JHsgcnRsKCB7IHJpZ2h0OiAwIH0gKSB9XG5gO1xuIl19 */"));
export const DownArrowWrapper = _styled("div", process.env.NODE_ENV === "production" ? {
  target: "e1mv6sxx1"
} : {
  target: "e1mv6sxx1",
  label: "DownArrowWrapper"
})("margin-inline-end:", space(-1), ";line-height:0;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvc2VsZWN0LWNvbnRyb2wvc3R5bGVzL3NlbGVjdC1jb250cm9sLXN0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFvSzBDIiwiZmlsZSI6IkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvc2VsZWN0LWNvbnRyb2wvc3R5bGVzL3NlbGVjdC1jb250cm9sLXN0eWxlcy50cyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcblxuLyoqXG4gKiBJbnRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHsgQ09MT1JTLCBydGwgfSBmcm9tICcuLi8uLi91dGlscyc7XG5pbXBvcnQgeyBzcGFjZSB9IGZyb20gJy4uLy4uL3VpL3V0aWxzL3NwYWNlJztcbmltcG9ydCB0eXBlIHsgU2VsZWN0Q29udHJvbFByb3BzIH0gZnJvbSAnLi4vdHlwZXMnO1xuaW1wb3J0IElucHV0Q29udHJvbFN1ZmZpeFdyYXBwZXIgZnJvbSAnLi4vLi4vaW5wdXQtY29udHJvbC9pbnB1dC1zdWZmaXgtd3JhcHBlcic7XG5cbmludGVyZmFjZSBTZWxlY3RQcm9wc1xuXHRleHRlbmRzIFBpY2s8XG5cdFx0U2VsZWN0Q29udHJvbFByb3BzLFxuXHRcdCdfX25leHQzNnB4RGVmYXVsdFNpemUnIHwgJ2Rpc2FibGVkJyB8ICdtdWx0aXBsZSdcblx0PiB7XG5cdC8vIFVzaW5nIGBzZWxlY3RTaXplYCBpbnN0ZWFkIG9mIGBzaXplYCB0byBhdm9pZCBhIHR5cGUgY29uZmxpY3Qgd2l0aCB0aGVcblx0Ly8gYHNpemVgIEhUTUwgYXR0cmlidXRlIG9mIHRoZSBgc2VsZWN0YCBlbGVtZW50LlxuXHRzZWxlY3RTaXplPzogU2VsZWN0Q29udHJvbFByb3BzWyAnc2l6ZScgXTtcbn1cblxuY29uc3QgZGlzYWJsZWRTdHlsZXMgPSAoIHsgZGlzYWJsZWQgfTogU2VsZWN0UHJvcHMgKSA9PiB7XG5cdGlmICggISBkaXNhYmxlZCApIHJldHVybiAnJztcblxuXHRyZXR1cm4gY3NzKCB7XG5cdFx0Y29sb3I6IENPTE9SUy51aS50ZXh0RGlzYWJsZWQsXG5cdH0gKTtcbn07XG5cbmNvbnN0IGZvbnRTaXplU3R5bGVzID0gKCB7IHNlbGVjdFNpemUgPSAnZGVmYXVsdCcgfTogU2VsZWN0UHJvcHMgKSA9PiB7XG5cdGNvbnN0IHNpemVzID0ge1xuXHRcdGRlZmF1bHQ6ICcxM3B4Jyxcblx0XHRzbWFsbDogJzExcHgnLFxuXHRcdCdfX3Vuc3RhYmxlLWxhcmdlJzogJzEzcHgnLFxuXHR9O1xuXG5cdGNvbnN0IGZvbnRTaXplID0gc2l6ZXNbIHNlbGVjdFNpemUgXTtcblx0Y29uc3QgZm9udFNpemVNb2JpbGUgPSAnMTZweCc7XG5cblx0aWYgKCAhIGZvbnRTaXplICkgcmV0dXJuICcnO1xuXG5cdHJldHVybiBjc3NgXG5cdFx0Zm9udC1zaXplOiAkeyBmb250U2l6ZU1vYmlsZSB9O1xuXG5cdFx0QG1lZGlhICggbWluLXdpZHRoOiA2MDBweCApIHtcblx0XHRcdGZvbnQtc2l6ZTogJHsgZm9udFNpemUgfTtcblx0XHR9XG5cdGA7XG59O1xuXG5jb25zdCBzaXplU3R5bGVzID0gKCB7XG5cdF9fbmV4dDM2cHhEZWZhdWx0U2l6ZSxcblx0bXVsdGlwbGUsXG5cdHNlbGVjdFNpemUgPSAnZGVmYXVsdCcsXG59OiBTZWxlY3RQcm9wcyApID0+IHtcblx0aWYgKCBtdWx0aXBsZSApIHtcblx0XHQvLyBXaGVuIGBtdWx0aXBsZWAsIGp1c3QgdXNlIHRoZSBuYXRpdmUgYnJvd3NlciBzdHlsZXNcblx0XHQvLyB3aXRob3V0IHNldHRpbmcgZXhwbGljaXQgaGVpZ2h0LlxuXHRcdHJldHVybjtcblx0fVxuXG5cdGNvbnN0IHNpemVzID0ge1xuXHRcdGRlZmF1bHQ6IHtcblx0XHRcdGhlaWdodDogMzYsXG5cdFx0XHRtaW5IZWlnaHQ6IDM2LFxuXHRcdFx0cGFkZGluZ1RvcDogMCxcblx0XHRcdHBhZGRpbmdCb3R0b206IDAsXG5cdFx0fSxcblx0XHRzbWFsbDoge1xuXHRcdFx0aGVpZ2h0OiAyNCxcblx0XHRcdG1pbkhlaWdodDogMjQsXG5cdFx0XHRwYWRkaW5nVG9wOiAwLFxuXHRcdFx0cGFkZGluZ0JvdHRvbTogMCxcblx0XHR9LFxuXHRcdCdfX3Vuc3RhYmxlLWxhcmdlJzoge1xuXHRcdFx0aGVpZ2h0OiA0MCxcblx0XHRcdG1pbkhlaWdodDogNDAsXG5cdFx0XHRwYWRkaW5nVG9wOiAwLFxuXHRcdFx0cGFkZGluZ0JvdHRvbTogMCxcblx0XHR9LFxuXHR9O1xuXG5cdGlmICggISBfX25leHQzNnB4RGVmYXVsdFNpemUgKSB7XG5cdFx0c2l6ZXMuZGVmYXVsdCA9IHtcblx0XHRcdGhlaWdodDogMzAsXG5cdFx0XHRtaW5IZWlnaHQ6IDMwLFxuXHRcdFx0cGFkZGluZ1RvcDogMCxcblx0XHRcdHBhZGRpbmdCb3R0b206IDAsXG5cdFx0fTtcblx0fVxuXG5cdGNvbnN0IHN0eWxlID0gc2l6ZXNbIHNlbGVjdFNpemUgXSB8fCBzaXplcy5kZWZhdWx0O1xuXG5cdHJldHVybiBjc3MoIHN0eWxlICk7XG59O1xuXG5leHBvcnQgY29uc3QgY2hldnJvbkljb25TaXplID0gMTg7XG5cbmNvbnN0IHNpemVQYWRkaW5ncyA9ICgge1xuXHRfX25leHQzNnB4RGVmYXVsdFNpemUsXG5cdG11bHRpcGxlLFxuXHRzZWxlY3RTaXplID0gJ2RlZmF1bHQnLFxufTogU2VsZWN0UHJvcHMgKSA9PiB7XG5cdGNvbnN0IHBhZGRpbmcgPSB7XG5cdFx0ZGVmYXVsdDogMTYsXG5cdFx0c21hbGw6IDgsXG5cdFx0J19fdW5zdGFibGUtbGFyZ2UnOiAxNixcblx0fTtcblxuXHRpZiAoICEgX19uZXh0MzZweERlZmF1bHRTaXplICkge1xuXHRcdHBhZGRpbmcuZGVmYXVsdCA9IDg7XG5cdH1cblxuXHRjb25zdCBzZWxlY3RlZFBhZGRpbmcgPSBwYWRkaW5nWyBzZWxlY3RTaXplIF0gfHwgcGFkZGluZy5kZWZhdWx0O1xuXG5cdHJldHVybiBydGwoIHtcblx0XHRwYWRkaW5nTGVmdDogc2VsZWN0ZWRQYWRkaW5nLFxuXHRcdHBhZGRpbmdSaWdodDogc2VsZWN0ZWRQYWRkaW5nICsgY2hldnJvbkljb25TaXplLFxuXHRcdC4uLiggbXVsdGlwbGVcblx0XHRcdD8ge1xuXHRcdFx0XHRcdHBhZGRpbmdUb3A6IHNlbGVjdGVkUGFkZGluZyxcblx0XHRcdFx0XHRwYWRkaW5nQm90dG9tOiBzZWxlY3RlZFBhZGRpbmcsXG5cdFx0XHQgIH1cblx0XHRcdDoge30gKSxcblx0fSApO1xufTtcblxuY29uc3Qgb3ZlcmZsb3dTdHlsZXMgPSAoIHsgbXVsdGlwbGUgfTogU2VsZWN0UHJvcHMgKSA9PiB7XG5cdHJldHVybiB7XG5cdFx0b3ZlcmZsb3c6IG11bHRpcGxlID8gJ2F1dG8nIDogJ2hpZGRlbicsXG5cdH07XG59O1xuXG4vLyBUT0RPOiBSZXNvbHZlIG5lZWQgdG8gdXNlICYmJiB0byBpbmNyZWFzZSBzcGVjaWZpY2l0eVxuLy8gaHR0cHM6Ly9naXRodWIuY29tL1dvcmRQcmVzcy9ndXRlbmJlcmcvaXNzdWVzLzE4NDgzXG5cbmV4cG9ydCBjb25zdCBTZWxlY3QgPSBzdHlsZWQuc2VsZWN0PCBTZWxlY3RQcm9wcyA+YFxuXHQmJiYge1xuXHRcdGFwcGVhcmFuY2U6IG5vbmU7XG5cdFx0YmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG5cdFx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0XHRib3JkZXI6IG5vbmU7XG5cdFx0Ym94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xuXHRcdGNvbG9yOiAkeyBDT0xPUlMuZ3JheVsgOTAwIF0gfTtcblx0XHRkaXNwbGF5OiBibG9jaztcblx0XHRmb250LWZhbWlseTogaW5oZXJpdDtcblx0XHRtYXJnaW46IDA7XG5cdFx0d2lkdGg6IDEwMCU7XG5cdFx0bWF4LXdpZHRoOiBub25lO1xuXHRcdGN1cnNvcjogcG9pbnRlcjtcblx0XHR3aGl0ZS1zcGFjZTogbm93cmFwO1xuXHRcdHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuXG5cdFx0JHsgZGlzYWJsZWRTdHlsZXMgfTtcblx0XHQkeyBmb250U2l6ZVN0eWxlcyB9O1xuXHRcdCR7IHNpemVTdHlsZXMgfTtcblx0XHQkeyBzaXplUGFkZGluZ3MgfTtcblx0XHQkeyBvdmVyZmxvd1N0eWxlcyB9XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBEb3duQXJyb3dXcmFwcGVyID0gc3R5bGVkLmRpdmBcblx0bWFyZ2luLWlubGluZS1lbmQ6ICR7IHNwYWNlKCAtMSApIH07IC8vIG9wdGljYWxseSBhZGp1c3QgdGhlIGljb25cblx0bGluZS1oZWlnaHQ6IDA7XG5gO1xuXG5leHBvcnQgY29uc3QgSW5wdXRDb250cm9sU3VmZml4V3JhcHBlcldpdGhDbGlja1Rocm91Z2ggPSBzdHlsZWQoXG5cdElucHV0Q29udHJvbFN1ZmZpeFdyYXBwZXJcbilgXG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0cG9pbnRlci1ldmVudHM6IG5vbmU7XG5cblx0JHsgcnRsKCB7IHJpZ2h0OiAwIH0gKSB9XG5gO1xuIl19 */"));
export const InputControlSuffixWrapperWithClickThrough = /*#__PURE__*/_styled(InputControlSuffixWrapper, process.env.NODE_ENV === "production" ? {
  target: "e1mv6sxx0"
} : {
  target: "e1mv6sxx0",
  label: "InputControlSuffixWrapperWithClickThrough"
})("position:absolute;pointer-events:none;", rtl({
  right: 0
}), ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvc2VsZWN0LWNvbnRyb2wvc3R5bGVzL3NlbGVjdC1jb250cm9sLXN0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEyS0MiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9zZWxlY3QtY29udHJvbC9zdHlsZXMvc2VsZWN0LWNvbnRyb2wtc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBFeHRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuXG4vKipcbiAqIEludGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgeyBDT0xPUlMsIHJ0bCB9IGZyb20gJy4uLy4uL3V0aWxzJztcbmltcG9ydCB7IHNwYWNlIH0gZnJvbSAnLi4vLi4vdWkvdXRpbHMvc3BhY2UnO1xuaW1wb3J0IHR5cGUgeyBTZWxlY3RDb250cm9sUHJvcHMgfSBmcm9tICcuLi90eXBlcyc7XG5pbXBvcnQgSW5wdXRDb250cm9sU3VmZml4V3JhcHBlciBmcm9tICcuLi8uLi9pbnB1dC1jb250cm9sL2lucHV0LXN1ZmZpeC13cmFwcGVyJztcblxuaW50ZXJmYWNlIFNlbGVjdFByb3BzXG5cdGV4dGVuZHMgUGljazxcblx0XHRTZWxlY3RDb250cm9sUHJvcHMsXG5cdFx0J19fbmV4dDM2cHhEZWZhdWx0U2l6ZScgfCAnZGlzYWJsZWQnIHwgJ211bHRpcGxlJ1xuXHQ+IHtcblx0Ly8gVXNpbmcgYHNlbGVjdFNpemVgIGluc3RlYWQgb2YgYHNpemVgIHRvIGF2b2lkIGEgdHlwZSBjb25mbGljdCB3aXRoIHRoZVxuXHQvLyBgc2l6ZWAgSFRNTCBhdHRyaWJ1dGUgb2YgdGhlIGBzZWxlY3RgIGVsZW1lbnQuXG5cdHNlbGVjdFNpemU/OiBTZWxlY3RDb250cm9sUHJvcHNbICdzaXplJyBdO1xufVxuXG5jb25zdCBkaXNhYmxlZFN0eWxlcyA9ICggeyBkaXNhYmxlZCB9OiBTZWxlY3RQcm9wcyApID0+IHtcblx0aWYgKCAhIGRpc2FibGVkICkgcmV0dXJuICcnO1xuXG5cdHJldHVybiBjc3MoIHtcblx0XHRjb2xvcjogQ09MT1JTLnVpLnRleHREaXNhYmxlZCxcblx0fSApO1xufTtcblxuY29uc3QgZm9udFNpemVTdHlsZXMgPSAoIHsgc2VsZWN0U2l6ZSA9ICdkZWZhdWx0JyB9OiBTZWxlY3RQcm9wcyApID0+IHtcblx0Y29uc3Qgc2l6ZXMgPSB7XG5cdFx0ZGVmYXVsdDogJzEzcHgnLFxuXHRcdHNtYWxsOiAnMTFweCcsXG5cdFx0J19fdW5zdGFibGUtbGFyZ2UnOiAnMTNweCcsXG5cdH07XG5cblx0Y29uc3QgZm9udFNpemUgPSBzaXplc1sgc2VsZWN0U2l6ZSBdO1xuXHRjb25zdCBmb250U2l6ZU1vYmlsZSA9ICcxNnB4JztcblxuXHRpZiAoICEgZm9udFNpemUgKSByZXR1cm4gJyc7XG5cblx0cmV0dXJuIGNzc2Bcblx0XHRmb250LXNpemU6ICR7IGZvbnRTaXplTW9iaWxlIH07XG5cblx0XHRAbWVkaWEgKCBtaW4td2lkdGg6IDYwMHB4ICkge1xuXHRcdFx0Zm9udC1zaXplOiAkeyBmb250U2l6ZSB9O1xuXHRcdH1cblx0YDtcbn07XG5cbmNvbnN0IHNpemVTdHlsZXMgPSAoIHtcblx0X19uZXh0MzZweERlZmF1bHRTaXplLFxuXHRtdWx0aXBsZSxcblx0c2VsZWN0U2l6ZSA9ICdkZWZhdWx0Jyxcbn06IFNlbGVjdFByb3BzICkgPT4ge1xuXHRpZiAoIG11bHRpcGxlICkge1xuXHRcdC8vIFdoZW4gYG11bHRpcGxlYCwganVzdCB1c2UgdGhlIG5hdGl2ZSBicm93c2VyIHN0eWxlc1xuXHRcdC8vIHdpdGhvdXQgc2V0dGluZyBleHBsaWNpdCBoZWlnaHQuXG5cdFx0cmV0dXJuO1xuXHR9XG5cblx0Y29uc3Qgc2l6ZXMgPSB7XG5cdFx0ZGVmYXVsdDoge1xuXHRcdFx0aGVpZ2h0OiAzNixcblx0XHRcdG1pbkhlaWdodDogMzYsXG5cdFx0XHRwYWRkaW5nVG9wOiAwLFxuXHRcdFx0cGFkZGluZ0JvdHRvbTogMCxcblx0XHR9LFxuXHRcdHNtYWxsOiB7XG5cdFx0XHRoZWlnaHQ6IDI0LFxuXHRcdFx0bWluSGVpZ2h0OiAyNCxcblx0XHRcdHBhZGRpbmdUb3A6IDAsXG5cdFx0XHRwYWRkaW5nQm90dG9tOiAwLFxuXHRcdH0sXG5cdFx0J19fdW5zdGFibGUtbGFyZ2UnOiB7XG5cdFx0XHRoZWlnaHQ6IDQwLFxuXHRcdFx0bWluSGVpZ2h0OiA0MCxcblx0XHRcdHBhZGRpbmdUb3A6IDAsXG5cdFx0XHRwYWRkaW5nQm90dG9tOiAwLFxuXHRcdH0sXG5cdH07XG5cblx0aWYgKCAhIF9fbmV4dDM2cHhEZWZhdWx0U2l6ZSApIHtcblx0XHRzaXplcy5kZWZhdWx0ID0ge1xuXHRcdFx0aGVpZ2h0OiAzMCxcblx0XHRcdG1pbkhlaWdodDogMzAsXG5cdFx0XHRwYWRkaW5nVG9wOiAwLFxuXHRcdFx0cGFkZGluZ0JvdHRvbTogMCxcblx0XHR9O1xuXHR9XG5cblx0Y29uc3Qgc3R5bGUgPSBzaXplc1sgc2VsZWN0U2l6ZSBdIHx8IHNpemVzLmRlZmF1bHQ7XG5cblx0cmV0dXJuIGNzcyggc3R5bGUgKTtcbn07XG5cbmV4cG9ydCBjb25zdCBjaGV2cm9uSWNvblNpemUgPSAxODtcblxuY29uc3Qgc2l6ZVBhZGRpbmdzID0gKCB7XG5cdF9fbmV4dDM2cHhEZWZhdWx0U2l6ZSxcblx0bXVsdGlwbGUsXG5cdHNlbGVjdFNpemUgPSAnZGVmYXVsdCcsXG59OiBTZWxlY3RQcm9wcyApID0+IHtcblx0Y29uc3QgcGFkZGluZyA9IHtcblx0XHRkZWZhdWx0OiAxNixcblx0XHRzbWFsbDogOCxcblx0XHQnX191bnN0YWJsZS1sYXJnZSc6IDE2LFxuXHR9O1xuXG5cdGlmICggISBfX25leHQzNnB4RGVmYXVsdFNpemUgKSB7XG5cdFx0cGFkZGluZy5kZWZhdWx0ID0gODtcblx0fVxuXG5cdGNvbnN0IHNlbGVjdGVkUGFkZGluZyA9IHBhZGRpbmdbIHNlbGVjdFNpemUgXSB8fCBwYWRkaW5nLmRlZmF1bHQ7XG5cblx0cmV0dXJuIHJ0bCgge1xuXHRcdHBhZGRpbmdMZWZ0OiBzZWxlY3RlZFBhZGRpbmcsXG5cdFx0cGFkZGluZ1JpZ2h0OiBzZWxlY3RlZFBhZGRpbmcgKyBjaGV2cm9uSWNvblNpemUsXG5cdFx0Li4uKCBtdWx0aXBsZVxuXHRcdFx0PyB7XG5cdFx0XHRcdFx0cGFkZGluZ1RvcDogc2VsZWN0ZWRQYWRkaW5nLFxuXHRcdFx0XHRcdHBhZGRpbmdCb3R0b206IHNlbGVjdGVkUGFkZGluZyxcblx0XHRcdCAgfVxuXHRcdFx0OiB7fSApLFxuXHR9ICk7XG59O1xuXG5jb25zdCBvdmVyZmxvd1N0eWxlcyA9ICggeyBtdWx0aXBsZSB9OiBTZWxlY3RQcm9wcyApID0+IHtcblx0cmV0dXJuIHtcblx0XHRvdmVyZmxvdzogbXVsdGlwbGUgPyAnYXV0bycgOiAnaGlkZGVuJyxcblx0fTtcbn07XG5cbi8vIFRPRE86IFJlc29sdmUgbmVlZCB0byB1c2UgJiYmIHRvIGluY3JlYXNlIHNwZWNpZmljaXR5XG4vLyBodHRwczovL2dpdGh1Yi5jb20vV29yZFByZXNzL2d1dGVuYmVyZy9pc3N1ZXMvMTg0ODNcblxuZXhwb3J0IGNvbnN0IFNlbGVjdCA9IHN0eWxlZC5zZWxlY3Q8IFNlbGVjdFByb3BzID5gXG5cdCYmJiB7XG5cdFx0YXBwZWFyYW5jZTogbm9uZTtcblx0XHRiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcblx0XHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXHRcdGJvcmRlcjogbm9uZTtcblx0XHRib3gtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XG5cdFx0Y29sb3I6ICR7IENPTE9SUy5ncmF5WyA5MDAgXSB9O1xuXHRcdGRpc3BsYXk6IGJsb2NrO1xuXHRcdGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuXHRcdG1hcmdpbjogMDtcblx0XHR3aWR0aDogMTAwJTtcblx0XHRtYXgtd2lkdGg6IG5vbmU7XG5cdFx0Y3Vyc29yOiBwb2ludGVyO1xuXHRcdHdoaXRlLXNwYWNlOiBub3dyYXA7XG5cdFx0dGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG5cblx0XHQkeyBkaXNhYmxlZFN0eWxlcyB9O1xuXHRcdCR7IGZvbnRTaXplU3R5bGVzIH07XG5cdFx0JHsgc2l6ZVN0eWxlcyB9O1xuXHRcdCR7IHNpemVQYWRkaW5ncyB9O1xuXHRcdCR7IG92ZXJmbG93U3R5bGVzIH1cblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IERvd25BcnJvd1dyYXBwZXIgPSBzdHlsZWQuZGl2YFxuXHRtYXJnaW4taW5saW5lLWVuZDogJHsgc3BhY2UoIC0xICkgfTsgLy8gb3B0aWNhbGx5IGFkanVzdCB0aGUgaWNvblxuXHRsaW5lLWhlaWdodDogMDtcbmA7XG5cbmV4cG9ydCBjb25zdCBJbnB1dENvbnRyb2xTdWZmaXhXcmFwcGVyV2l0aENsaWNrVGhyb3VnaCA9IHN0eWxlZChcblx0SW5wdXRDb250cm9sU3VmZml4V3JhcHBlclxuKWBcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHRwb2ludGVyLWV2ZW50czogbm9uZTtcblxuXHQkeyBydGwoIHsgcmlnaHQ6IDAgfSApIH1cbmA7XG4iXX0= */"));
//# sourceMappingURL=select-control-styles.js.map