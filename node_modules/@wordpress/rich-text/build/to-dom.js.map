{"version":3,"names":["_toTree","require","_createElement","_isRangeEqual","createPathToNode","node","rootNode","path","parentNode","i","previousSibling","getNodeByPath","length","childNodes","shift","offset","append","element","child","html","undefined","innerHTML","ownerDocument","createTextNode","type","attributes","createElement","key","setAttribute","appendChild","appendText","text","appendData","getLastChild","lastChild","getParent","isText","nodeType","TEXT_NODE","getText","nodeValue","remove","removeChild","toDom","value","prepareEditableTree","isEditableTree","placeholder","doc","document","startPath","endPath","formats","createEmpty","tree","toTree","onStartIndex","body","pointer","onEndIndex","selection","apply","current","__unstableDomOnly","applyValue","start","applySelection","future","futureChild","firstChild","currentChild","isEqualNode","nodeName","data","replaceChild","currentAttributes","futureAttributes","ii","name","getAttribute","removeAttribute","startContainer","startOffset","endContainer","endOffset","defaultView","getSelection","range","createRange","setStart","setEnd","activeElement","rangeCount","isRangeEqual","getRangeAt","removeAllRanges","addRange","HTMLElement","focus"],"sources":["@wordpress/rich-text/src/to-dom.js"],"sourcesContent":["/**\n * Internal dependencies\n */\n\nimport { toTree } from './to-tree';\nimport { createElement } from './create-element';\nimport { isRangeEqual } from './is-range-equal';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n\n/**\n * Creates a path as an array of indices from the given root node to the given\n * node.\n *\n * @param {Node}        node     Node to find the path of.\n * @param {HTMLElement} rootNode Root node to find the path from.\n * @param {Array}       path     Initial path to build on.\n *\n * @return {Array} The path from the root node to the node.\n */\nfunction createPathToNode( node, rootNode, path ) {\n\tconst parentNode = node.parentNode;\n\tlet i = 0;\n\n\twhile ( ( node = node.previousSibling ) ) {\n\t\ti++;\n\t}\n\n\tpath = [ i, ...path ];\n\n\tif ( parentNode !== rootNode ) {\n\t\tpath = createPathToNode( parentNode, rootNode, path );\n\t}\n\n\treturn path;\n}\n\n/**\n * Gets a node given a path (array of indices) from the given node.\n *\n * @param {HTMLElement} node Root node to find the wanted node in.\n * @param {Array}       path Path (indices) to the wanted node.\n *\n * @return {Object} Object with the found node and the remaining offset (if any).\n */\nfunction getNodeByPath( node, path ) {\n\tpath = [ ...path ];\n\n\twhile ( node && path.length > 1 ) {\n\t\tnode = node.childNodes[ path.shift() ];\n\t}\n\n\treturn {\n\t\tnode,\n\t\toffset: path[ 0 ],\n\t};\n}\n\nfunction append( element, child ) {\n\tif ( child.html !== undefined ) {\n\t\treturn ( element.innerHTML += child.html );\n\t}\n\n\tif ( typeof child === 'string' ) {\n\t\tchild = element.ownerDocument.createTextNode( child );\n\t}\n\n\tconst { type, attributes } = child;\n\n\tif ( type ) {\n\t\tchild = element.ownerDocument.createElement( type );\n\n\t\tfor ( const key in attributes ) {\n\t\t\tchild.setAttribute( key, attributes[ key ] );\n\t\t}\n\t}\n\n\treturn element.appendChild( child );\n}\n\nfunction appendText( node, text ) {\n\tnode.appendData( text );\n}\n\nfunction getLastChild( { lastChild } ) {\n\treturn lastChild;\n}\n\nfunction getParent( { parentNode } ) {\n\treturn parentNode;\n}\n\nfunction isText( node ) {\n\treturn node.nodeType === node.TEXT_NODE;\n}\n\nfunction getText( { nodeValue } ) {\n\treturn nodeValue;\n}\n\nfunction remove( node ) {\n\treturn node.parentNode.removeChild( node );\n}\n\nexport function toDom( {\n\tvalue,\n\tprepareEditableTree,\n\tisEditableTree = true,\n\tplaceholder,\n\tdoc = document,\n} ) {\n\tlet startPath = [];\n\tlet endPath = [];\n\n\tif ( prepareEditableTree ) {\n\t\tvalue = {\n\t\t\t...value,\n\t\t\tformats: prepareEditableTree( value ),\n\t\t};\n\t}\n\n\t/**\n\t * Returns a new instance of a DOM tree upon which RichText operations can be\n\t * applied.\n\t *\n\t * Note: The current implementation will return a shared reference, reset on\n\t * each call to `createEmpty`. Therefore, you should not hold a reference to\n\t * the value to operate upon asynchronously, as it may have unexpected results.\n\t *\n\t * @return {Object} RichText tree.\n\t */\n\tconst createEmpty = () => createElement( doc, '' );\n\n\tconst tree = toTree( {\n\t\tvalue,\n\t\tcreateEmpty,\n\t\tappend,\n\t\tgetLastChild,\n\t\tgetParent,\n\t\tisText,\n\t\tgetText,\n\t\tremove,\n\t\tappendText,\n\t\tonStartIndex( body, pointer ) {\n\t\t\tstartPath = createPathToNode( pointer, body, [\n\t\t\t\tpointer.nodeValue.length,\n\t\t\t] );\n\t\t},\n\t\tonEndIndex( body, pointer ) {\n\t\t\tendPath = createPathToNode( pointer, body, [\n\t\t\t\tpointer.nodeValue.length,\n\t\t\t] );\n\t\t},\n\t\tisEditableTree,\n\t\tplaceholder,\n\t} );\n\n\treturn {\n\t\tbody: tree,\n\t\tselection: { startPath, endPath },\n\t};\n}\n\n/**\n * Create an `Element` tree from a Rich Text value and applies the difference to\n * the `Element` tree contained by `current`.\n *\n * @param {Object}        $1                       Named arguments.\n * @param {RichTextValue} $1.value                 Value to apply.\n * @param {HTMLElement}   $1.current               The live root node to apply the element tree to.\n * @param {Function}      [$1.prepareEditableTree] Function to filter editorable formats.\n * @param {boolean}       [$1.__unstableDomOnly]   Only apply elements, no selection.\n * @param {string}        [$1.placeholder]         Placeholder text.\n */\nexport function apply( {\n\tvalue,\n\tcurrent,\n\tprepareEditableTree,\n\t__unstableDomOnly,\n\tplaceholder,\n} ) {\n\t// Construct a new element tree in memory.\n\tconst { body, selection } = toDom( {\n\t\tvalue,\n\t\tprepareEditableTree,\n\t\tplaceholder,\n\t\tdoc: current.ownerDocument,\n\t} );\n\n\tapplyValue( body, current );\n\n\tif ( value.start !== undefined && ! __unstableDomOnly ) {\n\t\tapplySelection( selection, current );\n\t}\n}\n\nexport function applyValue( future, current ) {\n\tlet i = 0;\n\tlet futureChild;\n\n\twhile ( ( futureChild = future.firstChild ) ) {\n\t\tconst currentChild = current.childNodes[ i ];\n\n\t\tif ( ! currentChild ) {\n\t\t\tcurrent.appendChild( futureChild );\n\t\t} else if ( ! currentChild.isEqualNode( futureChild ) ) {\n\t\t\tif (\n\t\t\t\tcurrentChild.nodeName !== futureChild.nodeName ||\n\t\t\t\t( currentChild.nodeType === currentChild.TEXT_NODE &&\n\t\t\t\t\tcurrentChild.data !== futureChild.data )\n\t\t\t) {\n\t\t\t\tcurrent.replaceChild( futureChild, currentChild );\n\t\t\t} else {\n\t\t\t\tconst currentAttributes = currentChild.attributes;\n\t\t\t\tconst futureAttributes = futureChild.attributes;\n\n\t\t\t\tif ( currentAttributes ) {\n\t\t\t\t\tlet ii = currentAttributes.length;\n\n\t\t\t\t\t// Reverse loop because `removeAttribute` on `currentChild`\n\t\t\t\t\t// changes `currentAttributes`.\n\t\t\t\t\twhile ( ii-- ) {\n\t\t\t\t\t\tconst { name } = currentAttributes[ ii ];\n\n\t\t\t\t\t\tif ( ! futureChild.getAttribute( name ) ) {\n\t\t\t\t\t\t\tcurrentChild.removeAttribute( name );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( futureAttributes ) {\n\t\t\t\t\tfor ( let ii = 0; ii < futureAttributes.length; ii++ ) {\n\t\t\t\t\t\tconst { name, value } = futureAttributes[ ii ];\n\n\t\t\t\t\t\tif ( currentChild.getAttribute( name ) !== value ) {\n\t\t\t\t\t\t\tcurrentChild.setAttribute( name, value );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tapplyValue( futureChild, currentChild );\n\t\t\t\tfuture.removeChild( futureChild );\n\t\t\t}\n\t\t} else {\n\t\t\tfuture.removeChild( futureChild );\n\t\t}\n\n\t\ti++;\n\t}\n\n\twhile ( current.childNodes[ i ] ) {\n\t\tcurrent.removeChild( current.childNodes[ i ] );\n\t}\n}\n\nexport function applySelection( { startPath, endPath }, current ) {\n\tconst { node: startContainer, offset: startOffset } = getNodeByPath(\n\t\tcurrent,\n\t\tstartPath\n\t);\n\tconst { node: endContainer, offset: endOffset } = getNodeByPath(\n\t\tcurrent,\n\t\tendPath\n\t);\n\tconst { ownerDocument } = current;\n\tconst { defaultView } = ownerDocument;\n\tconst selection = defaultView.getSelection();\n\tconst range = ownerDocument.createRange();\n\n\trange.setStart( startContainer, startOffset );\n\trange.setEnd( endContainer, endOffset );\n\n\tconst { activeElement } = ownerDocument;\n\n\tif ( selection.rangeCount > 0 ) {\n\t\t// If the to be added range and the live range are the same, there's no\n\t\t// need to remove the live range and add the equivalent range.\n\t\tif ( isRangeEqual( range, selection.getRangeAt( 0 ) ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tselection.removeAllRanges();\n\t}\n\n\tselection.addRange( range );\n\n\t// This function is not intended to cause a shift in focus. Since the above\n\t// selection manipulations may shift focus, ensure that focus is restored to\n\t// its previous state.\n\tif ( activeElement !== ownerDocument.activeElement ) {\n\t\t// The `instanceof` checks protect against edge cases where the focused\n\t\t// element is not of the interface HTMLElement (does not have a `focus`\n\t\t// or `blur` property).\n\t\t//\n\t\t// See: https://github.com/Microsoft/TypeScript/issues/5901#issuecomment-431649653\n\t\tif ( activeElement instanceof defaultView.HTMLElement ) {\n\t\t\tactiveElement.focus();\n\t\t}\n\t}\n}\n"],"mappings":";;;;;;;;;AAIA,IAAAA,OAAA,GAAAC,OAAA;AACA,IAAAC,cAAA,GAAAD,OAAA;AACA,IAAAE,aAAA,GAAAF,OAAA;AANA;AACA;AACA;;AAMA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASG,gBAAgBA,CAAEC,IAAI,EAAEC,QAAQ,EAAEC,IAAI,EAAG;EACjD,MAAMC,UAAU,GAAGH,IAAI,CAACG,UAAU;EAClC,IAAIC,CAAC,GAAG,CAAC;EAET,OAAUJ,IAAI,GAAGA,IAAI,CAACK,eAAe,EAAK;IACzCD,CAAC,EAAE;EACJ;EAEAF,IAAI,GAAG,CAAEE,CAAC,EAAE,GAAGF,IAAI,CAAE;EAErB,IAAKC,UAAU,KAAKF,QAAQ,EAAG;IAC9BC,IAAI,GAAGH,gBAAgB,CAAEI,UAAU,EAAEF,QAAQ,EAAEC,IAAK,CAAC;EACtD;EAEA,OAAOA,IAAI;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASI,aAAaA,CAAEN,IAAI,EAAEE,IAAI,EAAG;EACpCA,IAAI,GAAG,CAAE,GAAGA,IAAI,CAAE;EAElB,OAAQF,IAAI,IAAIE,IAAI,CAACK,MAAM,GAAG,CAAC,EAAG;IACjCP,IAAI,GAAGA,IAAI,CAACQ,UAAU,CAAEN,IAAI,CAACO,KAAK,CAAC,CAAC,CAAE;EACvC;EAEA,OAAO;IACNT,IAAI;IACJU,MAAM,EAAER,IAAI,CAAE,CAAC;EAChB,CAAC;AACF;AAEA,SAASS,MAAMA,CAAEC,OAAO,EAAEC,KAAK,EAAG;EACjC,IAAKA,KAAK,CAACC,IAAI,KAAKC,SAAS,EAAG;IAC/B,OAASH,OAAO,CAACI,SAAS,IAAIH,KAAK,CAACC,IAAI;EACzC;EAEA,IAAK,OAAOD,KAAK,KAAK,QAAQ,EAAG;IAChCA,KAAK,GAAGD,OAAO,CAACK,aAAa,CAACC,cAAc,CAAEL,KAAM,CAAC;EACtD;EAEA,MAAM;IAAEM,IAAI;IAAEC;EAAW,CAAC,GAAGP,KAAK;EAElC,IAAKM,IAAI,EAAG;IACXN,KAAK,GAAGD,OAAO,CAACK,aAAa,CAACI,aAAa,CAAEF,IAAK,CAAC;IAEnD,KAAM,MAAMG,GAAG,IAAIF,UAAU,EAAG;MAC/BP,KAAK,CAACU,YAAY,CAAED,GAAG,EAAEF,UAAU,CAAEE,GAAG,CAAG,CAAC;IAC7C;EACD;EAEA,OAAOV,OAAO,CAACY,WAAW,CAAEX,KAAM,CAAC;AACpC;AAEA,SAASY,UAAUA,CAAEzB,IAAI,EAAE0B,IAAI,EAAG;EACjC1B,IAAI,CAAC2B,UAAU,CAAED,IAAK,CAAC;AACxB;AAEA,SAASE,YAAYA,CAAE;EAAEC;AAAU,CAAC,EAAG;EACtC,OAAOA,SAAS;AACjB;AAEA,SAASC,SAASA,CAAE;EAAE3B;AAAW,CAAC,EAAG;EACpC,OAAOA,UAAU;AAClB;AAEA,SAAS4B,MAAMA,CAAE/B,IAAI,EAAG;EACvB,OAAOA,IAAI,CAACgC,QAAQ,KAAKhC,IAAI,CAACiC,SAAS;AACxC;AAEA,SAASC,OAAOA,CAAE;EAAEC;AAAU,CAAC,EAAG;EACjC,OAAOA,SAAS;AACjB;AAEA,SAASC,MAAMA,CAAEpC,IAAI,EAAG;EACvB,OAAOA,IAAI,CAACG,UAAU,CAACkC,WAAW,CAAErC,IAAK,CAAC;AAC3C;AAEO,SAASsC,KAAKA,CAAE;EACtBC,KAAK;EACLC,mBAAmB;EACnBC,cAAc,GAAG,IAAI;EACrBC,WAAW;EACXC,GAAG,GAAGC;AACP,CAAC,EAAG;EACH,IAAIC,SAAS,GAAG,EAAE;EAClB,IAAIC,OAAO,GAAG,EAAE;EAEhB,IAAKN,mBAAmB,EAAG;IAC1BD,KAAK,GAAG;MACP,GAAGA,KAAK;MACRQ,OAAO,EAAEP,mBAAmB,CAAED,KAAM;IACrC,CAAC;EACF;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,MAAMS,WAAW,GAAGA,CAAA,KAAM,IAAA3B,4BAAa,EAAEsB,GAAG,EAAE,EAAG,CAAC;EAElD,MAAMM,IAAI,GAAG,IAAAC,cAAM,EAAE;IACpBX,KAAK;IACLS,WAAW;IACXrC,MAAM;IACNiB,YAAY;IACZE,SAAS;IACTC,MAAM;IACNG,OAAO;IACPE,MAAM;IACNX,UAAU;IACV0B,YAAYA,CAAEC,IAAI,EAAEC,OAAO,EAAG;MAC7BR,SAAS,GAAG9C,gBAAgB,CAAEsD,OAAO,EAAED,IAAI,EAAE,CAC5CC,OAAO,CAAClB,SAAS,CAAC5B,MAAM,CACvB,CAAC;IACJ,CAAC;IACD+C,UAAUA,CAAEF,IAAI,EAAEC,OAAO,EAAG;MAC3BP,OAAO,GAAG/C,gBAAgB,CAAEsD,OAAO,EAAED,IAAI,EAAE,CAC1CC,OAAO,CAAClB,SAAS,CAAC5B,MAAM,CACvB,CAAC;IACJ,CAAC;IACDkC,cAAc;IACdC;EACD,CAAE,CAAC;EAEH,OAAO;IACNU,IAAI,EAAEH,IAAI;IACVM,SAAS,EAAE;MAAEV,SAAS;MAAEC;IAAQ;EACjC,CAAC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASU,KAAKA,CAAE;EACtBjB,KAAK;EACLkB,OAAO;EACPjB,mBAAmB;EACnBkB,iBAAiB;EACjBhB;AACD,CAAC,EAAG;EACH;EACA,MAAM;IAAEU,IAAI;IAAEG;EAAU,CAAC,GAAGjB,KAAK,CAAE;IAClCC,KAAK;IACLC,mBAAmB;IACnBE,WAAW;IACXC,GAAG,EAAEc,OAAO,CAACxC;EACd,CAAE,CAAC;EAEH0C,UAAU,CAAEP,IAAI,EAAEK,OAAQ,CAAC;EAE3B,IAAKlB,KAAK,CAACqB,KAAK,KAAK7C,SAAS,IAAI,CAAE2C,iBAAiB,EAAG;IACvDG,cAAc,CAAEN,SAAS,EAAEE,OAAQ,CAAC;EACrC;AACD;AAEO,SAASE,UAAUA,CAAEG,MAAM,EAAEL,OAAO,EAAG;EAC7C,IAAIrD,CAAC,GAAG,CAAC;EACT,IAAI2D,WAAW;EAEf,OAAUA,WAAW,GAAGD,MAAM,CAACE,UAAU,EAAK;IAC7C,MAAMC,YAAY,GAAGR,OAAO,CAACjD,UAAU,CAAEJ,CAAC,CAAE;IAE5C,IAAK,CAAE6D,YAAY,EAAG;MACrBR,OAAO,CAACjC,WAAW,CAAEuC,WAAY,CAAC;IACnC,CAAC,MAAM,IAAK,CAAEE,YAAY,CAACC,WAAW,CAAEH,WAAY,CAAC,EAAG;MACvD,IACCE,YAAY,CAACE,QAAQ,KAAKJ,WAAW,CAACI,QAAQ,IAC5CF,YAAY,CAACjC,QAAQ,KAAKiC,YAAY,CAAChC,SAAS,IACjDgC,YAAY,CAACG,IAAI,KAAKL,WAAW,CAACK,IAAM,EACxC;QACDX,OAAO,CAACY,YAAY,CAAEN,WAAW,EAAEE,YAAa,CAAC;MAClD,CAAC,MAAM;QACN,MAAMK,iBAAiB,GAAGL,YAAY,CAAC7C,UAAU;QACjD,MAAMmD,gBAAgB,GAAGR,WAAW,CAAC3C,UAAU;QAE/C,IAAKkD,iBAAiB,EAAG;UACxB,IAAIE,EAAE,GAAGF,iBAAiB,CAAC/D,MAAM;;UAEjC;UACA;UACA,OAAQiE,EAAE,EAAE,EAAG;YACd,MAAM;cAAEC;YAAK,CAAC,GAAGH,iBAAiB,CAAEE,EAAE,CAAE;YAExC,IAAK,CAAET,WAAW,CAACW,YAAY,CAAED,IAAK,CAAC,EAAG;cACzCR,YAAY,CAACU,eAAe,CAAEF,IAAK,CAAC;YACrC;UACD;QACD;QAEA,IAAKF,gBAAgB,EAAG;UACvB,KAAM,IAAIC,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGD,gBAAgB,CAAChE,MAAM,EAAEiE,EAAE,EAAE,EAAG;YACtD,MAAM;cAAEC,IAAI;cAAElC;YAAM,CAAC,GAAGgC,gBAAgB,CAAEC,EAAE,CAAE;YAE9C,IAAKP,YAAY,CAACS,YAAY,CAAED,IAAK,CAAC,KAAKlC,KAAK,EAAG;cAClD0B,YAAY,CAAC1C,YAAY,CAAEkD,IAAI,EAAElC,KAAM,CAAC;YACzC;UACD;QACD;QAEAoB,UAAU,CAAEI,WAAW,EAAEE,YAAa,CAAC;QACvCH,MAAM,CAACzB,WAAW,CAAE0B,WAAY,CAAC;MAClC;IACD,CAAC,MAAM;MACND,MAAM,CAACzB,WAAW,CAAE0B,WAAY,CAAC;IAClC;IAEA3D,CAAC,EAAE;EACJ;EAEA,OAAQqD,OAAO,CAACjD,UAAU,CAAEJ,CAAC,CAAE,EAAG;IACjCqD,OAAO,CAACpB,WAAW,CAAEoB,OAAO,CAACjD,UAAU,CAAEJ,CAAC,CAAG,CAAC;EAC/C;AACD;AAEO,SAASyD,cAAcA,CAAE;EAAEhB,SAAS;EAAEC;AAAQ,CAAC,EAAEW,OAAO,EAAG;EACjE,MAAM;IAAEzD,IAAI,EAAE4E,cAAc;IAAElE,MAAM,EAAEmE;EAAY,CAAC,GAAGvE,aAAa,CAClEmD,OAAO,EACPZ,SACD,CAAC;EACD,MAAM;IAAE7C,IAAI,EAAE8E,YAAY;IAAEpE,MAAM,EAAEqE;EAAU,CAAC,GAAGzE,aAAa,CAC9DmD,OAAO,EACPX,OACD,CAAC;EACD,MAAM;IAAE7B;EAAc,CAAC,GAAGwC,OAAO;EACjC,MAAM;IAAEuB;EAAY,CAAC,GAAG/D,aAAa;EACrC,MAAMsC,SAAS,GAAGyB,WAAW,CAACC,YAAY,CAAC,CAAC;EAC5C,MAAMC,KAAK,GAAGjE,aAAa,CAACkE,WAAW,CAAC,CAAC;EAEzCD,KAAK,CAACE,QAAQ,CAAER,cAAc,EAAEC,WAAY,CAAC;EAC7CK,KAAK,CAACG,MAAM,CAAEP,YAAY,EAAEC,SAAU,CAAC;EAEvC,MAAM;IAAEO;EAAc,CAAC,GAAGrE,aAAa;EAEvC,IAAKsC,SAAS,CAACgC,UAAU,GAAG,CAAC,EAAG;IAC/B;IACA;IACA,IAAK,IAAAC,0BAAY,EAAEN,KAAK,EAAE3B,SAAS,CAACkC,UAAU,CAAE,CAAE,CAAE,CAAC,EAAG;MACvD;IACD;IAEAlC,SAAS,CAACmC,eAAe,CAAC,CAAC;EAC5B;EAEAnC,SAAS,CAACoC,QAAQ,CAAET,KAAM,CAAC;;EAE3B;EACA;EACA;EACA,IAAKI,aAAa,KAAKrE,aAAa,CAACqE,aAAa,EAAG;IACpD;IACA;IACA;IACA;IACA;IACA,IAAKA,aAAa,YAAYN,WAAW,CAACY,WAAW,EAAG;MACvDN,aAAa,CAACO,KAAK,CAAC,CAAC;IACtB;EACD;AACD"}