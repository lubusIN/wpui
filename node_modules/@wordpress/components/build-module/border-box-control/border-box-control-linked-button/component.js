import { createElement } from "@wordpress/element";
/**
 * WordPress dependencies
 */
import { link, linkOff } from '@wordpress/icons';
import { __ } from '@wordpress/i18n';

/**
 * Internal dependencies
 */
import Button from '../../button';
import Tooltip from '../../tooltip';
import { View } from '../../view';
import { contextConnect } from '../../ui/context';
import { useBorderBoxControlLinkedButton } from './hook';
const BorderBoxControlLinkedButton = (props, forwardedRef) => {
  const {
    className,
    isLinked,
    ...buttonProps
  } = useBorderBoxControlLinkedButton(props);
  const label = isLinked ? __('Unlink sides') : __('Link sides');
  return createElement(Tooltip, {
    text: label
  }, createElement(View, {
    className: className
  }, createElement(Button, {
    ...buttonProps,
    isSmall: true,
    icon: isLinked ? link : linkOff,
    iconSize: 24,
    "aria-label": label,
    ref: forwardedRef
  })));
};
const ConnectedBorderBoxControlLinkedButton = contextConnect(BorderBoxControlLinkedButton, 'BorderBoxControlLinkedButton');
export default ConnectedBorderBoxControlLinkedButton;
//# sourceMappingURL=component.js.map