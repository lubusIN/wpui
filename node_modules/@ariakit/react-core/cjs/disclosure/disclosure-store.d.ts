import * as Core from "@ariakit/core/disclosure/disclosure-store";
import type { Store } from "../utils/store.js";
export declare function useDisclosureStoreOptions(_props: DisclosureStoreProps): Partial<DisclosureStoreOptions>;
export declare function useDisclosureStoreProps<T extends DisclosureStore>(store: T, props: DisclosureStoreProps): T;
/**
 * Creates a disclosure store.
 * @see https://ariakit.org/components/disclosure
 * @example
 * ```jsx
 * const disclosure = useDisclosureState();
 * <Disclosure state={disclosure}>Disclosure</Disclosure>
 * <DisclosureContent state={disclosure}>Content</DisclosureContent>
 * ```
 */
export declare function useDisclosureStore(props?: DisclosureStoreProps): DisclosureStore;
export type DisclosureStoreState = Core.DisclosureStoreState;
export type DisclosureStoreFunctions = Core.DisclosureStoreFunctions;
export interface DisclosureStoreOptions extends Core.DisclosureStoreOptions {
    /**
     * A callback that gets called when the `open` state changes.
     * @param open The new open value.
     * @example
     * const [open, setOpen] = useState(false);
     * const disclosure = useDisclosureStore({ open, setOpen });
     */
    setOpen?: (open: DisclosureStoreState["open"]) => void;
}
export type DisclosureStoreProps = DisclosureStoreOptions & Core.DisclosureStoreProps;
export type DisclosureStore = DisclosureStoreFunctions & Store<Core.DisclosureStore>;
