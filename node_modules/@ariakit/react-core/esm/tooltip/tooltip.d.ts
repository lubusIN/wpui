import type { HovercardOptions } from "../hovercard/hovercard.js";
import type { As, Props } from "../utils/types.js";
import type { TooltipStore } from "./tooltip-store.js";
/**
 * Returns props to create a `Tooltip` component.
 * @see https://ariakit.org/components/tooltip
 * @example
 * ```jsx
 * const store = useToolTipStore();
 * const props = useTooltip({ store });
 * <TooltipAnchor store={store}>Anchor</TooltipAnchor>
 * <Role {...props}>Tooltip</Role>
 * ```
 */
export declare const useTooltip: import("../utils/types.js").Hook<TooltipOptions<"div">>;
/**
 * Renders a tooltip element.
 * @see https://ariakit.org/components/tooltip
 * @example
 * ```jsx
 * const tooltip = useTooltipStore();
 * <TooltipAnchor store={tooltip}>Anchor</TooltipAnchor>
 * <Tooltip store={tooltip}>Tooltip</Tooltip>
 * ```
 */
export declare const Tooltip: import("../utils/types.js").Component<TooltipOptions<"div">>;
export interface TooltipOptions<T extends As = "div"> extends HovercardOptions<T> {
    /**
     * Object returned by the `useTooltipStore` hook.
     */
    store: TooltipStore;
    /** @default true */
    portal?: HovercardOptions<T>["portal"];
    /** @default 8 */
    gutter?: HovercardOptions<T>["gutter"];
}
export type TooltipProps<T extends As = "div"> = Props<TooltipOptions<T>>;
