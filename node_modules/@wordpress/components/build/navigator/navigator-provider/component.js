"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.NavigatorProvider = void 0;
var _element = require("@wordpress/element");
var _react = require("@emotion/react");
var _isShallowEqual = _interopRequireDefault(require("@wordpress/is-shallow-equal"));
var _context = require("../../ui/context");
var _useCx = require("../../utils/hooks/use-cx");
var _view = require("../../view");
var _context2 = require("../context");
var _router = require("../utils/router");
function _EMOTION_STRINGIFIED_CSS_ERROR__() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }
const MAX_HISTORY_LENGTH = 50;
function screensReducer(state = [], action) {
  switch (action.type) {
    case 'add':
      return [...state, action.screen];
    case 'remove':
      return state.filter(s => s.id !== action.screen.id);
  }
  return state;
}
var _ref = process.env.NODE_ENV === "production" ? {
  name: "15bx5k",
  styles: "overflow-x:hidden"
} : {
  name: "192ebb7-classes",
  styles: "overflow-x:hidden;label:classes;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};
function UnconnectedNavigatorProvider(props, forwardedRef) {
  const {
    initialPath,
    children,
    className,
    ...otherProps
  } = (0, _context.useContextSystem)(props, 'NavigatorProvider');
  const [locationHistory, setLocationHistory] = (0, _element.useState)([{
    path: initialPath
  }]);
  const currentLocationHistory = (0, _element.useRef)([]);
  const [screens, dispatch] = (0, _element.useReducer)(screensReducer, []);
  const currentScreens = (0, _element.useRef)([]);
  (0, _element.useEffect)(() => {
    currentScreens.current = screens;
  }, [screens]);
  (0, _element.useEffect)(() => {
    currentLocationHistory.current = locationHistory;
  }, [locationHistory]);
  const currentMatch = (0, _element.useRef)();
  const matchedPath = (0, _element.useMemo)(() => {
    let currentPath;
    if (locationHistory.length === 0 || (currentPath = locationHistory[locationHistory.length - 1].path) === undefined) {
      currentMatch.current = undefined;
      return undefined;
    }
    const resolvePath = path => {
      const newMatch = (0, _router.patternMatch)(path, screens);

      // If the new match is the same as the current match,
      // return the previous one for performance reasons.
      if (currentMatch.current && newMatch && (0, _isShallowEqual.default)(newMatch.params, currentMatch.current.params) && newMatch.id === currentMatch.current.id) {
        return currentMatch.current;
      }
      return newMatch;
    };
    const newMatch = resolvePath(currentPath);
    currentMatch.current = newMatch;
    return newMatch;
  }, [screens, locationHistory]);
  const addScreen = (0, _element.useCallback)(screen => dispatch({
    type: 'add',
    screen
  }), []);
  const removeScreen = (0, _element.useCallback)(screen => dispatch({
    type: 'remove',
    screen
  }), []);
  const goBack = (0, _element.useCallback)(() => {
    setLocationHistory(prevLocationHistory => {
      if (prevLocationHistory.length <= 1) {
        return prevLocationHistory;
      }
      return [...prevLocationHistory.slice(0, -2), {
        ...prevLocationHistory[prevLocationHistory.length - 2],
        isBack: true,
        hasRestoredFocus: false
      }];
    });
  }, []);
  const goTo = (0, _element.useCallback)((path, options = {}) => {
    const {
      focusTargetSelector,
      isBack = false,
      skipFocus = false,
      replace = false,
      ...restOptions
    } = options;
    const isNavigatingToPreviousPath = isBack && currentLocationHistory.current.length > 1 && currentLocationHistory.current[currentLocationHistory.current.length - 2].path === path;
    if (isNavigatingToPreviousPath) {
      goBack();
      return;
    }
    setLocationHistory(prevLocationHistory => {
      const newLocation = {
        ...restOptions,
        path,
        isBack,
        hasRestoredFocus: false,
        skipFocus
      };
      if (prevLocationHistory.length === 0) {
        return replace ? [] : [newLocation];
      }
      const newLocationHistory = prevLocationHistory.slice(prevLocationHistory.length > MAX_HISTORY_LENGTH - 1 ? 1 : 0, -1);
      if (!replace) {
        newLocationHistory.push(
        // Assign `focusTargetSelector` to the previous location in history
        // (the one we just navigated from).
        {
          ...prevLocationHistory[prevLocationHistory.length - 1],
          focusTargetSelector
        });
      }
      newLocationHistory.push(newLocation);
      return newLocationHistory;
    });
  }, [goBack]);
  const goToParent = (0, _element.useCallback)((options = {}) => {
    const currentPath = currentLocationHistory.current[currentLocationHistory.current.length - 1].path;
    if (currentPath === undefined) {
      return;
    }
    const parentPath = (0, _router.findParent)(currentPath, currentScreens.current);
    if (parentPath === undefined) {
      return;
    }
    goTo(parentPath, {
      ...options,
      isBack: true
    });
  }, [goTo]);
  const navigatorContextValue = (0, _element.useMemo)(() => ({
    location: {
      ...locationHistory[locationHistory.length - 1],
      isInitial: locationHistory.length === 1
    },
    params: matchedPath ? matchedPath.params : {},
    match: matchedPath ? matchedPath.id : undefined,
    goTo,
    goBack,
    goToParent,
    addScreen,
    removeScreen
  }), [locationHistory, matchedPath, goTo, goBack, goToParent, addScreen, removeScreen]);
  const cx = (0, _useCx.useCx)();
  const classes = (0, _element.useMemo)(
  // Prevents horizontal overflow while animating screen transitions.
  () => cx(_ref, className), [className, cx]);
  return (0, _element.createElement)(_view.View, {
    ref: forwardedRef,
    className: classes,
    ...otherProps
  }, (0, _element.createElement)(_context2.NavigatorContext.Provider, {
    value: navigatorContextValue
  }, children));
}

/**
 * The `NavigatorProvider` component allows rendering nested views/panels/menus
 * (via the `NavigatorScreen` component and navigate between these different
 * view (via the `NavigatorButton` and `NavigatorBackButton` components or the
 * `useNavigator` hook).
 *
 * ```jsx
 * import {
 *   __experimentalNavigatorProvider as NavigatorProvider,
 *   __experimentalNavigatorScreen as NavigatorScreen,
 *   __experimentalNavigatorButton as NavigatorButton,
 *   __experimentalNavigatorBackButton as NavigatorBackButton,
 * } from '@wordpress/components';
 *
 * const MyNavigation = () => (
 *   <NavigatorProvider initialPath="/">
 *     <NavigatorScreen path="/">
 *       <p>This is the home screen.</p>
 *        <NavigatorButton path="/child">
 *          Navigate to child screen.
 *       </NavigatorButton>
 *     </NavigatorScreen>
 *
 *     <NavigatorScreen path="/child">
 *       <p>This is the child screen.</p>
 *       <NavigatorBackButton>
 *         Go back
 *       </NavigatorBackButton>
 *     </NavigatorScreen>
 *   </NavigatorProvider>
 * );
 * ```
 */
const NavigatorProvider = (0, _context.contextConnect)(UnconnectedNavigatorProvider, 'NavigatorProvider');
exports.NavigatorProvider = NavigatorProvider;
var _default = NavigatorProvider;
exports.default = _default;
//# sourceMappingURL=component.js.map