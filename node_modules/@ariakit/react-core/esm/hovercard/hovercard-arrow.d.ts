import type { PopoverArrowOptions } from "../popover/popover-arrow.js";
import type { As, Props } from "../utils/types.js";
import type { HovercardStore } from "./hovercard-store.js";
/**
 * Returns props to create a `HovercardArrow` component.
 * @see https://ariakit.org/components/hovercard
 * @example
 * ```jsx
 * const store = useHovercardStore();
 * const props = useHovercardArrow({ store });
 * <Hovercard store={store}>
 *   <Role {...props} />
 *   Details
 * </Hovercard>
 * ```
 */
export declare const useHovercardArrow: import("../utils/types.js").Hook<HovercardArrowOptions<"div">>;
/**
 * Renders an arrow element in a hovercard.
 * @see https://ariakit.org/components/hovercard
 * @example
 * ```jsx
 * const hovercard = useHovercardStore();
 * <HovercardAnchor store={hovercard}>@username</HovercardAnchor>
 * <Hovercard store={hovercard}>
 *   <HovercardArrow />
 *   Details
 * </Hovercard>
 * ```
 */
export declare const HovercardArrow: import("../utils/types.js").Component<HovercardArrowOptions<"div">>;
export interface HovercardArrowOptions<T extends As = "div"> extends PopoverArrowOptions<T> {
    /**
     * Object returned by the `useHovercardStore` hook. If not provided, the
     * parent `Hovercard` component's context will be used.
     */
    store?: HovercardStore;
}
export type HovercardArrowProps<T extends As = "div"> = Props<HovercardArrowOptions<T>>;
