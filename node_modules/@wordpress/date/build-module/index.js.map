{"version":3,"names":["momentLib","deprecated","WP_ZONE","VALID_UTC_OFFSET","settings","l10n","locale","months","monthsShort","weekdays","weekdaysShort","meridiem","am","pm","AM","PM","relative","future","past","s","ss","m","mm","h","hh","d","dd","M","MM","y","yy","startOfWeek","formats","time","date","datetime","datetimeAbbreviated","timezone","offset","string","abbr","setSettings","dateSettings","setupWPTimezone","locales","includes","localeData","longDateFormat","defineLocale","currentLocale","parentLocale","hour","minute","isLowercase","LT","LTS","L","LL","LLL","LLLL","relativeTime","getSettings","__experimentalGetSettings","since","alternative","currentTimezone","tz","zone","add","pack","name","abbrs","untils","offsets","MINUTE_IN_SECONDS","HOUR_IN_MINUTES","HOUR_IN_SECONDS","formatMap","D","j","l","N","S","momentDate","num","format","withOrdinal","replace","w","z","parseInt","toString","W","F","n","t","daysInMonth","isLeapYear","o","Y","a","A","B","timezoned","utcOffset","seconds","minutes","hours","g","G","H","i","u","v","e","I","isDST","O","P","T","Z","sign","parts","substring","split","map","c","r","U","dateFormat","dateValue","Date","char","newFormat","length","push","formatter","join","dateMoment","buildMoment","gmdate","utc","dateI18n","gmdateI18n","undefined","isInTheFuture","now","momentObject","isAfter","getDate","dateString","toDate","humanTimeDiff","from","to","fromMoment","toMoment","isUTCOffset","test"],"sources":["@wordpress/date/src/index.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport momentLib from 'moment';\nimport 'moment-timezone/moment-timezone';\nimport 'moment-timezone/moment-timezone-utils';\n\n/**\n * WordPress dependencies\n */\nimport deprecated from '@wordpress/deprecated';\n\n/** @typedef {import('moment').Moment} Moment */\n/** @typedef {import('moment').LocaleSpecification} MomentLocaleSpecification */\n\n/**\n * @typedef MeridiemConfig\n * @property {string} am Lowercase AM.\n * @property {string} AM Uppercase AM.\n * @property {string} pm Lowercase PM.\n * @property {string} PM Uppercase PM.\n */\n\n/**\n * @typedef FormatsConfig\n * @property {string} time                Time format.\n * @property {string} date                Date format.\n * @property {string} datetime            Datetime format.\n * @property {string} datetimeAbbreviated Abbreviated datetime format.\n */\n\n/**\n * @typedef TimezoneConfig\n * @property {string} offset Offset setting.\n * @property {string} string The timezone as a string (e.g., `'America/Los_Angeles'`).\n * @property {string} abbr   Abbreviation for the timezone.\n */\n\n/* eslint-disable jsdoc/valid-types */\n/**\n * @typedef L10nSettings\n * @property {string}                                     locale        Moment locale.\n * @property {MomentLocaleSpecification['months']}        months        Locale months.\n * @property {MomentLocaleSpecification['monthsShort']}   monthsShort   Locale months short.\n * @property {MomentLocaleSpecification['weekdays']}      weekdays      Locale weekdays.\n * @property {MomentLocaleSpecification['weekdaysShort']} weekdaysShort Locale weekdays short.\n * @property {MeridiemConfig}                             meridiem      Meridiem config.\n * @property {MomentLocaleSpecification['relativeTime']}  relative      Relative time config.\n * @property {0|1|2|3|4|5|6}                              startOfWeek   Day that the week starts on.\n */\n/* eslint-enable jsdoc/valid-types */\n\n/**\n * @typedef DateSettings\n * @property {L10nSettings}   l10n     Localization settings.\n * @property {FormatsConfig}  formats  Date/time formats config.\n * @property {TimezoneConfig} timezone Timezone settings.\n */\n\nconst WP_ZONE = 'WP';\n\n// This regular expression tests positive for UTC offsets as described in ISO 8601.\n// See: https://en.wikipedia.org/wiki/ISO_8601#Time_offsets_from_UTC\nconst VALID_UTC_OFFSET = /^[+-][0-1][0-9](:?[0-9][0-9])?$/;\n\n// Changes made here will likely need to be made in `lib/client-assets.php` as\n// well because it uses the `setSettings()` function to change these settings.\n/** @type {DateSettings} */\nlet settings = {\n\tl10n: {\n\t\tlocale: 'en',\n\t\tmonths: [\n\t\t\t'January',\n\t\t\t'February',\n\t\t\t'March',\n\t\t\t'April',\n\t\t\t'May',\n\t\t\t'June',\n\t\t\t'July',\n\t\t\t'August',\n\t\t\t'September',\n\t\t\t'October',\n\t\t\t'November',\n\t\t\t'December',\n\t\t],\n\t\tmonthsShort: [\n\t\t\t'Jan',\n\t\t\t'Feb',\n\t\t\t'Mar',\n\t\t\t'Apr',\n\t\t\t'May',\n\t\t\t'Jun',\n\t\t\t'Jul',\n\t\t\t'Aug',\n\t\t\t'Sep',\n\t\t\t'Oct',\n\t\t\t'Nov',\n\t\t\t'Dec',\n\t\t],\n\t\tweekdays: [\n\t\t\t'Sunday',\n\t\t\t'Monday',\n\t\t\t'Tuesday',\n\t\t\t'Wednesday',\n\t\t\t'Thursday',\n\t\t\t'Friday',\n\t\t\t'Saturday',\n\t\t],\n\t\tweekdaysShort: [ 'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat' ],\n\t\tmeridiem: { am: 'am', pm: 'pm', AM: 'AM', PM: 'PM' },\n\t\trelative: {\n\t\t\tfuture: '%s from now',\n\t\t\tpast: '%s ago',\n\t\t\ts: 'a few seconds',\n\t\t\tss: '%d seconds',\n\t\t\tm: 'a minute',\n\t\t\tmm: '%d minutes',\n\t\t\th: 'an hour',\n\t\t\thh: '%d hours',\n\t\t\td: 'a day',\n\t\t\tdd: '%d days',\n\t\t\tM: 'a month',\n\t\t\tMM: '%d months',\n\t\t\ty: 'a year',\n\t\t\tyy: '%d years',\n\t\t},\n\t\tstartOfWeek: 0,\n\t},\n\tformats: {\n\t\ttime: 'g: i a',\n\t\tdate: 'F j, Y',\n\t\tdatetime: 'F j, Y g: i a',\n\t\tdatetimeAbbreviated: 'M j, Y g: i a',\n\t},\n\ttimezone: { offset: '0', string: '', abbr: '' },\n};\n\n/**\n * Adds a locale to moment, using the format supplied by `wp_localize_script()`.\n *\n * @param {DateSettings} dateSettings Settings, including locale data.\n */\nexport function setSettings( dateSettings ) {\n\tsettings = dateSettings;\n\n\tsetupWPTimezone();\n\n\t// Does moment already have a locale with the right name?\n\tif ( momentLib.locales().includes( dateSettings.l10n.locale ) ) {\n\t\t// Is that locale misconfigured, e.g. because we are on a site running\n\t\t// WordPress < 6.0?\n\t\tif (\n\t\t\tmomentLib\n\t\t\t\t.localeData( dateSettings.l10n.locale )\n\t\t\t\t.longDateFormat( 'LTS' ) === null\n\t\t) {\n\t\t\t// Delete the misconfigured locale.\n\t\t\t// @ts-ignore Type definitions are incorrect - null is permitted.\n\t\t\tmomentLib.defineLocale( dateSettings.l10n.locale, null );\n\t\t} else {\n\t\t\t// We have a properly configured locale, so no need to create one.\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// defineLocale() will modify the current locale, so back it up.\n\tconst currentLocale = momentLib.locale();\n\n\t// Create locale.\n\tmomentLib.defineLocale( dateSettings.l10n.locale, {\n\t\t// Inherit anything missing from English. We don't load\n\t\t// moment-with-locales.js so English is all there is.\n\t\tparentLocale: 'en',\n\t\tmonths: dateSettings.l10n.months,\n\t\tmonthsShort: dateSettings.l10n.monthsShort,\n\t\tweekdays: dateSettings.l10n.weekdays,\n\t\tweekdaysShort: dateSettings.l10n.weekdaysShort,\n\t\tmeridiem( hour, minute, isLowercase ) {\n\t\t\tif ( hour < 12 ) {\n\t\t\t\treturn isLowercase\n\t\t\t\t\t? dateSettings.l10n.meridiem.am\n\t\t\t\t\t: dateSettings.l10n.meridiem.AM;\n\t\t\t}\n\t\t\treturn isLowercase\n\t\t\t\t? dateSettings.l10n.meridiem.pm\n\t\t\t\t: dateSettings.l10n.meridiem.PM;\n\t\t},\n\t\tlongDateFormat: {\n\t\t\tLT: dateSettings.formats.time,\n\t\t\tLTS: momentLib.localeData( 'en' ).longDateFormat( 'LTS' ),\n\t\t\tL: momentLib.localeData( 'en' ).longDateFormat( 'L' ),\n\t\t\tLL: dateSettings.formats.date,\n\t\t\tLLL: dateSettings.formats.datetime,\n\t\t\tLLLL: momentLib.localeData( 'en' ).longDateFormat( 'LLLL' ),\n\t\t},\n\t\t// From human_time_diff?\n\t\t// Set to `(number, withoutSuffix, key, isFuture) => {}` instead.\n\t\trelativeTime: dateSettings.l10n.relative,\n\t} );\n\n\t// Restore the locale to what it was.\n\tmomentLib.locale( currentLocale );\n}\n\n/**\n * Returns the currently defined date settings.\n *\n * @return {DateSettings} Settings, including locale data.\n */\nexport function getSettings() {\n\treturn settings;\n}\n\n/**\n * Returns the currently defined date settings.\n *\n * @deprecated\n * @return {DateSettings} Settings, including locale data.\n */\nexport function __experimentalGetSettings() {\n\tdeprecated( 'wp.date.__experimentalGetSettings', {\n\t\tsince: '6.1',\n\t\talternative: 'wp.date.getSettings',\n\t} );\n\treturn getSettings();\n}\n\nfunction setupWPTimezone() {\n\t// Get the current timezone settings from the WP timezone string.\n\tconst currentTimezone = momentLib.tz.zone( settings.timezone.string );\n\n\t// Check to see if we have a valid TZ data, if so, use it for the custom WP_ZONE timezone, otherwise just use the offset.\n\tif ( currentTimezone ) {\n\t\t// Create WP timezone based off settings.timezone.string.  We need to include the additional data so that we\n\t\t// don't lose information about daylight savings time and other items.\n\t\t// See https://github.com/WordPress/gutenberg/pull/48083\n\t\tmomentLib.tz.add(\n\t\t\tmomentLib.tz.pack( {\n\t\t\t\tname: WP_ZONE,\n\t\t\t\tabbrs: currentTimezone.abbrs,\n\t\t\t\tuntils: currentTimezone.untils,\n\t\t\t\toffsets: currentTimezone.offsets,\n\t\t\t} )\n\t\t);\n\t} else {\n\t\t// Create WP timezone based off dateSettings.\n\t\tmomentLib.tz.add(\n\t\t\tmomentLib.tz.pack( {\n\t\t\t\tname: WP_ZONE,\n\t\t\t\tabbrs: [ WP_ZONE ],\n\t\t\t\tuntils: [ null ],\n\t\t\t\toffsets: [ -settings.timezone.offset * 60 || 0 ],\n\t\t\t} )\n\t\t);\n\t}\n}\n\n// Date constants.\n/**\n * Number of seconds in one minute.\n *\n * @type {number}\n */\nconst MINUTE_IN_SECONDS = 60;\n/**\n * Number of minutes in one hour.\n *\n * @type {number}\n */\nconst HOUR_IN_MINUTES = 60;\n/**\n * Number of seconds in one hour.\n *\n * @type {number}\n */\nconst HOUR_IN_SECONDS = 60 * MINUTE_IN_SECONDS;\n\n/**\n * Map of PHP formats to Moment.js formats.\n *\n * These are used internally by {@link wp.date.format}, and are either\n * a string representing the corresponding Moment.js format code, or a\n * function which returns the formatted string.\n *\n * This should only be used through {@link wp.date.format}, not\n * directly.\n */\nconst formatMap = {\n\t// Day.\n\td: 'DD',\n\tD: 'ddd',\n\tj: 'D',\n\tl: 'dddd',\n\tN: 'E',\n\n\t/**\n\t * Gets the ordinal suffix.\n\t *\n\t * @param {Moment} momentDate Moment instance.\n\t *\n\t * @return {string} Formatted date.\n\t */\n\tS( momentDate ) {\n\t\t// Do - D.\n\t\tconst num = momentDate.format( 'D' );\n\t\tconst withOrdinal = momentDate.format( 'Do' );\n\t\treturn withOrdinal.replace( num, '' );\n\t},\n\n\tw: 'd',\n\t/**\n\t * Gets the day of the year (zero-indexed).\n\t *\n\t * @param {Moment} momentDate Moment instance.\n\t *\n\t * @return {string} Formatted date.\n\t */\n\tz( momentDate ) {\n\t\t// DDD - 1.\n\t\treturn ( parseInt( momentDate.format( 'DDD' ), 10 ) - 1 ).toString();\n\t},\n\n\t// Week.\n\tW: 'W',\n\n\t// Month.\n\tF: 'MMMM',\n\tm: 'MM',\n\tM: 'MMM',\n\tn: 'M',\n\t/**\n\t * Gets the days in the month.\n\t *\n\t * @param {Moment} momentDate Moment instance.\n\t *\n\t * @return {number} Formatted date.\n\t */\n\tt( momentDate ) {\n\t\treturn momentDate.daysInMonth();\n\t},\n\n\t// Year.\n\t/**\n\t * Gets whether the current year is a leap year.\n\t *\n\t * @param {Moment} momentDate Moment instance.\n\t *\n\t * @return {string} Formatted date.\n\t */\n\tL( momentDate ) {\n\t\treturn momentDate.isLeapYear() ? '1' : '0';\n\t},\n\to: 'GGGG',\n\tY: 'YYYY',\n\ty: 'YY',\n\n\t// Time.\n\ta: 'a',\n\tA: 'A',\n\t/**\n\t * Gets the current time in Swatch Internet Time (.beats).\n\t *\n\t * @param {Moment} momentDate Moment instance.\n\t *\n\t * @return {number} Formatted date.\n\t */\n\tB( momentDate ) {\n\t\tconst timezoned = momentLib( momentDate ).utcOffset( 60 );\n\t\tconst seconds = parseInt( timezoned.format( 's' ), 10 ),\n\t\t\tminutes = parseInt( timezoned.format( 'm' ), 10 ),\n\t\t\thours = parseInt( timezoned.format( 'H' ), 10 );\n\t\treturn parseInt(\n\t\t\t(\n\t\t\t\t( seconds +\n\t\t\t\t\tminutes * MINUTE_IN_SECONDS +\n\t\t\t\t\thours * HOUR_IN_SECONDS ) /\n\t\t\t\t86.4\n\t\t\t).toString(),\n\t\t\t10\n\t\t);\n\t},\n\tg: 'h',\n\tG: 'H',\n\th: 'hh',\n\tH: 'HH',\n\ti: 'mm',\n\ts: 'ss',\n\tu: 'SSSSSS',\n\tv: 'SSS',\n\t// Timezone.\n\te: 'zz',\n\t/**\n\t * Gets whether the timezone is in DST currently.\n\t *\n\t * @param {Moment} momentDate Moment instance.\n\t *\n\t * @return {string} Formatted date.\n\t */\n\tI( momentDate ) {\n\t\treturn momentDate.isDST() ? '1' : '0';\n\t},\n\tO: 'ZZ',\n\tP: 'Z',\n\tT: 'z',\n\t/**\n\t * Gets the timezone offset in seconds.\n\t *\n\t * @param {Moment} momentDate Moment instance.\n\t *\n\t * @return {number} Formatted date.\n\t */\n\tZ( momentDate ) {\n\t\t// Timezone offset in seconds.\n\t\tconst offset = momentDate.format( 'Z' );\n\t\tconst sign = offset[ 0 ] === '-' ? -1 : 1;\n\t\tconst parts = offset\n\t\t\t.substring( 1 )\n\t\t\t.split( ':' )\n\t\t\t.map( ( n ) => parseInt( n, 10 ) );\n\t\treturn (\n\t\t\tsign *\n\t\t\t( parts[ 0 ] * HOUR_IN_MINUTES + parts[ 1 ] ) *\n\t\t\tMINUTE_IN_SECONDS\n\t\t);\n\t},\n\t// Full date/time.\n\tc: 'YYYY-MM-DDTHH:mm:ssZ', // .toISOString.\n\t/**\n\t * Formats the date as RFC2822.\n\t *\n\t * @param {Moment} momentDate Moment instance.\n\t *\n\t * @return {string} Formatted date.\n\t */\n\tr( momentDate ) {\n\t\treturn momentDate\n\t\t\t.locale( 'en' )\n\t\t\t.format( 'ddd, DD MMM YYYY HH:mm:ss ZZ' );\n\t},\n\tU: 'X',\n};\n\n/**\n * Formats a date. Does not alter the date's timezone.\n *\n * @param {string}                             dateFormat PHP-style formatting string.\n *                                                        See php.net/date.\n * @param {Moment | Date | string | undefined} dateValue  Date object or string,\n *                                                        parsable by moment.js.\n *\n * @return {string} Formatted date.\n */\nexport function format( dateFormat, dateValue = new Date() ) {\n\tlet i, char;\n\tconst newFormat = [];\n\tconst momentDate = momentLib( dateValue );\n\tfor ( i = 0; i < dateFormat.length; i++ ) {\n\t\tchar = dateFormat[ i ];\n\t\t// Is this an escape?\n\t\tif ( '\\\\' === char ) {\n\t\t\t// Add next character, then move on.\n\t\t\ti++;\n\t\t\tnewFormat.push( '[' + dateFormat[ i ] + ']' );\n\t\t\tcontinue;\n\t\t}\n\t\tif ( char in formatMap ) {\n\t\t\tconst formatter =\n\t\t\t\tformatMap[ /** @type {keyof formatMap} */ ( char ) ];\n\t\t\tif ( typeof formatter !== 'string' ) {\n\t\t\t\t// If the format is a function, call it.\n\t\t\t\tnewFormat.push( '[' + formatter( momentDate ) + ']' );\n\t\t\t} else {\n\t\t\t\t// Otherwise, add as a formatting string.\n\t\t\t\tnewFormat.push( formatter );\n\t\t\t}\n\t\t} else {\n\t\t\tnewFormat.push( '[' + char + ']' );\n\t\t}\n\t}\n\t// Join with [] between to separate characters, and replace\n\t// unneeded separators with static text.\n\treturn momentDate.format( newFormat.join( '[]' ) );\n}\n\n/**\n * Formats a date (like `date()` in PHP).\n *\n * @param {string}                             dateFormat PHP-style formatting string.\n *                                                        See php.net/date.\n * @param {Moment | Date | string | undefined} dateValue  Date object or string, parsable\n *                                                        by moment.js.\n * @param {string | number | undefined}        timezone   Timezone to output result in or a\n *                                                        UTC offset. Defaults to timezone from\n *                                                        site.\n *\n * @see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\n * @see https://en.wikipedia.org/wiki/ISO_8601#Time_offsets_from_UTC\n *\n * @return {string} Formatted date in English.\n */\nexport function date( dateFormat, dateValue = new Date(), timezone ) {\n\tconst dateMoment = buildMoment( dateValue, timezone );\n\treturn format( dateFormat, dateMoment );\n}\n\n/**\n * Formats a date (like `date()` in PHP), in the UTC timezone.\n *\n * @param {string}                             dateFormat PHP-style formatting string.\n *                                                        See php.net/date.\n * @param {Moment | Date | string | undefined} dateValue  Date object or string,\n *                                                        parsable by moment.js.\n *\n * @return {string} Formatted date in English.\n */\nexport function gmdate( dateFormat, dateValue = new Date() ) {\n\tconst dateMoment = momentLib( dateValue ).utc();\n\treturn format( dateFormat, dateMoment );\n}\n\n/**\n * Formats a date (like `wp_date()` in PHP), translating it into site's locale.\n *\n * Backward Compatibility Notice: if `timezone` is set to `true`, the function\n * behaves like `gmdateI18n`.\n *\n * @param {string}                                dateFormat PHP-style formatting string.\n *                                                           See php.net/date.\n * @param {Moment | Date | string | undefined}    dateValue  Date object or string, parsable by\n *                                                           moment.js.\n * @param {string | number | boolean | undefined} timezone   Timezone to output result in or a\n *                                                           UTC offset. Defaults to timezone from\n *                                                           site. Notice: `boolean` is effectively\n *                                                           deprecated, but still supported for\n *                                                           backward compatibility reasons.\n *\n * @see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\n * @see https://en.wikipedia.org/wiki/ISO_8601#Time_offsets_from_UTC\n *\n * @return {string} Formatted date.\n */\nexport function dateI18n( dateFormat, dateValue = new Date(), timezone ) {\n\tif ( true === timezone ) {\n\t\treturn gmdateI18n( dateFormat, dateValue );\n\t}\n\n\tif ( false === timezone ) {\n\t\ttimezone = undefined;\n\t}\n\n\tconst dateMoment = buildMoment( dateValue, timezone );\n\tdateMoment.locale( settings.l10n.locale );\n\treturn format( dateFormat, dateMoment );\n}\n\n/**\n * Formats a date (like `wp_date()` in PHP), translating it into site's locale\n * and using the UTC timezone.\n *\n * @param {string}                             dateFormat PHP-style formatting string.\n *                                                        See php.net/date.\n * @param {Moment | Date | string | undefined} dateValue  Date object or string,\n *                                                        parsable by moment.js.\n *\n * @return {string} Formatted date.\n */\nexport function gmdateI18n( dateFormat, dateValue = new Date() ) {\n\tconst dateMoment = momentLib( dateValue ).utc();\n\tdateMoment.locale( settings.l10n.locale );\n\treturn format( dateFormat, dateMoment );\n}\n\n/**\n * Check whether a date is considered in the future according to the WordPress settings.\n *\n * @param {string} dateValue Date String or Date object in the Defined WP Timezone.\n *\n * @return {boolean} Is in the future.\n */\nexport function isInTheFuture( dateValue ) {\n\tconst now = momentLib.tz( WP_ZONE );\n\tconst momentObject = momentLib.tz( dateValue, WP_ZONE );\n\n\treturn momentObject.isAfter( now );\n}\n\n/**\n * Create and return a JavaScript Date Object from a date string in the WP timezone.\n *\n * @param {string?} dateString Date formatted in the WP timezone.\n *\n * @return {Date} Date\n */\nexport function getDate( dateString ) {\n\tif ( ! dateString ) {\n\t\treturn momentLib.tz( WP_ZONE ).toDate();\n\t}\n\n\treturn momentLib.tz( dateString, WP_ZONE ).toDate();\n}\n\n/**\n * Returns a human-readable time difference between two dates, like human_time_diff() in PHP.\n *\n * @param {Moment | Date | string}             from From date, in the WP timezone.\n * @param {Moment | Date | string | undefined} to   To date, formatted in the WP timezone.\n *\n * @return {string} Human-readable time difference.\n */\nexport function humanTimeDiff( from, to ) {\n\tconst fromMoment = momentLib.tz( from, WP_ZONE );\n\tconst toMoment = to ? momentLib.tz( to, WP_ZONE ) : momentLib.tz( WP_ZONE );\n\treturn fromMoment.from( toMoment );\n}\n\n/**\n * Creates a moment instance using the given timezone or, if none is provided, using global settings.\n *\n * @param {Moment | Date | string | undefined} dateValue Date object or string, parsable\n *                                                       by moment.js.\n * @param {string | number | undefined}        timezone  Timezone to output result in or a\n *                                                       UTC offset. Defaults to timezone from\n *                                                       site.\n *\n * @see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\n * @see https://en.wikipedia.org/wiki/ISO_8601#Time_offsets_from_UTC\n *\n * @return {Moment} a moment instance.\n */\nfunction buildMoment( dateValue, timezone = '' ) {\n\tconst dateMoment = momentLib( dateValue );\n\n\tif ( timezone && ! isUTCOffset( timezone ) ) {\n\t\t// The ! isUTCOffset() check guarantees that timezone is a string.\n\t\treturn dateMoment.tz( /** @type {string} */ ( timezone ) );\n\t}\n\n\tif ( timezone && isUTCOffset( timezone ) ) {\n\t\treturn dateMoment.utcOffset( timezone );\n\t}\n\n\tif ( settings.timezone.string ) {\n\t\treturn dateMoment.tz( settings.timezone.string );\n\t}\n\n\treturn dateMoment.utcOffset( +settings.timezone.offset );\n}\n\n/**\n * Returns whether a certain UTC offset is valid or not.\n *\n * @param {number|string} offset a UTC offset.\n *\n * @return {boolean} whether a certain UTC offset is valid or not.\n */\nfunction isUTCOffset( offset ) {\n\tif ( 'number' === typeof offset ) {\n\t\treturn true;\n\t}\n\n\treturn VALID_UTC_OFFSET.test( offset );\n}\n\nsetupWPTimezone();\n"],"mappings":"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"}