{"version":3,"names":["select","dispatch","store","richTextStore","registerFormatType","name","settings","window","console","error","test","getFormatType","tagName","className","formatTypeForBareElement","getFormatTypeForBareElement","formatTypeForClassName","getFormatTypeForClassName","title","keywords","length","addFormatTypes"],"sources":["@wordpress/rich-text/src/register-format-type.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { select, dispatch } from '@wordpress/data';\n/**\n * Internal dependencies\n */\nimport { store as richTextStore } from './store';\n/**\n * @typedef {Object} WPFormat\n *\n * @property {string}        name        A string identifying the format. Must be\n *                                       unique across all registered formats.\n * @property {string}        tagName     The HTML tag this format will wrap the\n *                                       selection with.\n * @property {boolean}       interactive Whether format makes content interactive or not.\n * @property {string | null} [className] A class to match the format.\n * @property {string}        title       Name of the format.\n * @property {Function}      edit        Should return a component for the user to\n *                                       interact with the new registered format.\n */\n\n/**\n * Registers a new format provided a unique name and an object defining its\n * behavior.\n *\n * @param {string}   name     Format name.\n * @param {WPFormat} settings Format settings.\n *\n * @return {WPFormat|undefined} The format, if it has been successfully\n *                              registered; otherwise `undefined`.\n */\nexport function registerFormatType( name, settings ) {\n\tsettings = {\n\t\tname,\n\t\t...settings,\n\t};\n\n\tif ( typeof settings.name !== 'string' ) {\n\t\twindow.console.error( 'Format names must be strings.' );\n\t\treturn;\n\t}\n\n\tif ( ! /^[a-z][a-z0-9-]*\\/[a-z][a-z0-9-]*$/.test( settings.name ) ) {\n\t\twindow.console.error(\n\t\t\t'Format names must contain a namespace prefix, include only lowercase alphanumeric characters or dashes, and start with a letter. Example: my-plugin/my-custom-format'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( select( richTextStore ).getFormatType( settings.name ) ) {\n\t\twindow.console.error(\n\t\t\t'Format \"' + settings.name + '\" is already registered.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( typeof settings.tagName !== 'string' || settings.tagName === '' ) {\n\t\twindow.console.error( 'Format tag names must be a string.' );\n\t\treturn;\n\t}\n\n\tif (\n\t\t( typeof settings.className !== 'string' ||\n\t\t\tsettings.className === '' ) &&\n\t\tsettings.className !== null\n\t) {\n\t\twindow.console.error(\n\t\t\t'Format class names must be a string, or null to handle bare elements.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( ! /^[_a-zA-Z]+[a-zA-Z0-9-]*$/.test( settings.className ) ) {\n\t\twindow.console.error(\n\t\t\t'A class name must begin with a letter, followed by any number of hyphens, letters, or numbers.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( settings.className === null ) {\n\t\tconst formatTypeForBareElement = select(\n\t\t\trichTextStore\n\t\t).getFormatTypeForBareElement( settings.tagName );\n\n\t\tif (\n\t\t\tformatTypeForBareElement &&\n\t\t\tformatTypeForBareElement.name !== 'core/unknown'\n\t\t) {\n\t\t\twindow.console.error(\n\t\t\t\t`Format \"${ formatTypeForBareElement.name }\" is already registered to handle bare tag name \"${ settings.tagName }\".`\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t} else {\n\t\tconst formatTypeForClassName = select(\n\t\t\trichTextStore\n\t\t).getFormatTypeForClassName( settings.className );\n\n\t\tif ( formatTypeForClassName ) {\n\t\t\twindow.console.error(\n\t\t\t\t`Format \"${ formatTypeForClassName.name }\" is already registered to handle class name \"${ settings.className }\".`\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif ( ! ( 'title' in settings ) || settings.title === '' ) {\n\t\twindow.console.error(\n\t\t\t'The format \"' + settings.name + '\" must have a title.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( 'keywords' in settings && settings.keywords.length > 3 ) {\n\t\twindow.console.error(\n\t\t\t'The format \"' +\n\t\t\t\tsettings.name +\n\t\t\t\t'\" can have a maximum of 3 keywords.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( typeof settings.title !== 'string' ) {\n\t\twindow.console.error( 'Format titles must be strings.' );\n\t\treturn;\n\t}\n\n\tdispatch( richTextStore ).addFormatTypes( settings );\n\n\treturn settings;\n}\n"],"mappings":"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"}