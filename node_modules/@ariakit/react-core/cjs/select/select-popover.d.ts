import type { PopoverOptions } from "../popover/popover.js";
import type { As, Props } from "../utils/types.js";
import type { SelectListOptions } from "./select-list.js";
/**
 * Returns props to create a `SelectPopover` component.
 * @see https://ariakit.org/components/select
 * @example
 * ```jsx
 * const store = useSelectStore();
 * const props = useSelectPopover({ store });
 * <Role {...props}>
 *   <SelectItem value="Apple" />
 *   <SelectItem value="Orange" />
 * </Role>
 * ```
 */
export declare const useSelectPopover: import("../utils/types.js").Hook<SelectPopoverOptions<"div">>;
/**
 * Renders a select popover. The `role` prop is set to `listbox` by default, but
 * can be overriden by any other valid select popup role (`listbox`, `menu`,
 * `tree`, `grid` or `dialog`).
 * @see https://ariakit.org/components/select
 * @example
 * ```jsx
 * const select = useSelectStore();
 * <Select store={select} />
 * <SelectPopover store={select}>
 *   <SelectItem value="Apple" />
 *   <SelectItem value="Orange" />
 * </SelectPopover>
 * ```
 */
export declare const SelectPopover: import("../utils/types.js").Component<SelectPopoverOptions<"div">>;
export interface SelectPopoverOptions<T extends As = "div"> extends SelectListOptions<T>, Omit<PopoverOptions<T>, "store"> {
}
export type SelectPopoverProps<T extends As = "div"> = Props<SelectPopoverOptions<T>>;
