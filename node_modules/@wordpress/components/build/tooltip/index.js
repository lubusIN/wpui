"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.TOOLTIP_DELAY = void 0;
var _element = require("@wordpress/element");
var Ariakit = _interopRequireWildcard(require("@ariakit/react/tooltip"));
var _compose = require("@wordpress/compose");
var _deprecated = _interopRequireDefault(require("@wordpress/deprecated"));
var _shortcut = _interopRequireDefault(require("../shortcut"));
var _utils = require("../popover/utils");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
/**
 * External dependencies
 */

/**
 * WordPress dependencies
 */

/**
 * Time over anchor to wait before showing tooltip
 */
const TOOLTIP_DELAY = 700;
exports.TOOLTIP_DELAY = TOOLTIP_DELAY;
function Tooltip(props) {
  const {
    children,
    delay = TOOLTIP_DELAY,
    hideOnClick = true,
    placement,
    position,
    shortcut,
    text
  } = props;
  const baseId = (0, _compose.useInstanceId)(Tooltip, 'tooltip');
  const describedById = text || shortcut ? baseId : undefined;
  const isOnlyChild = _element.Children.count(children) === 1;
  // console error if more than one child element is added
  if (!isOnlyChild) {
    if ('development' === process.env.NODE_ENV) {
      // eslint-disable-next-line no-console
      console.error('Tooltip should be called with only a single child element.');
    }
  }

  // Compute tooltip's placement:
  // - give priority to `placement` prop, if defined
  // - otherwise, compute it from the legacy `position` prop (if defined)
  // - finally, fallback to the default placement: 'bottom'
  let computedPlacement;
  if (placement !== undefined) {
    computedPlacement = placement;
  } else if (position !== undefined) {
    computedPlacement = (0, _utils.positionToPlacement)(position);
    (0, _deprecated.default)('`position` prop in wp.components.tooltip', {
      since: '6.4',
      alternative: '`placement` prop'
    });
  }
  computedPlacement = computedPlacement || 'bottom';
  const tooltipStore = Ariakit.useTooltipStore({
    placement: computedPlacement,
    timeout: delay
  });
  const isTooltipOpen = tooltipStore.useState('open');
  return (0, _element.createElement)(_element.Fragment, null, (0, _element.createElement)(Ariakit.TooltipAnchor, {
    onBlur: tooltipStore.hide,
    onClick: hideOnClick ? tooltipStore.hide : undefined,
    store: tooltipStore,
    render: isOnlyChild ? children : undefined
  }, isOnlyChild ? undefined : children), isOnlyChild && (text || shortcut) && isTooltipOpen && (0, _element.createElement)(Ariakit.Tooltip, {
    className: "components-tooltip",
    gutter: 4,
    id: describedById,
    overflowPadding: 0.5,
    store: tooltipStore
  }, text, shortcut && (0, _element.createElement)(_shortcut.default, {
    className: text ? 'components-tooltip__shortcut' : '',
    shortcut: shortcut
  })));
}
var _default = Tooltip;
exports.default = _default;
//# sourceMappingURL=index.js.map