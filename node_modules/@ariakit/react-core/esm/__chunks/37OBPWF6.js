import {
  CheckboxCheckedContext
} from "./M5KYRTQG.js";
import {
  createComponent,
  createElement,
  createHook
} from "./NQJBHION.js";
import {
  __objRest,
  __spreadProps,
  __spreadValues
} from "./PNRLI7OV.js";

// src/checkbox/checkbox-check.tsx
import { useContext } from "react";
import { jsx } from "react/jsx-runtime";
var checkmark = /* @__PURE__ */ jsx(
  "svg",
  {
    display: "block",
    fill: "none",
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: "1.5pt",
    viewBox: "0 0 16 16",
    height: "1em",
    width: "1em",
    children: /* @__PURE__ */ jsx("polyline", { points: "4,8 7,12 12,4" })
  }
);
function getChildren(props) {
  if (props.checked) {
    return props.children || checkmark;
  }
  if (typeof props.children === "function") {
    return props.children;
  }
  return null;
}
var useCheckboxCheck = createHook(
  (_a) => {
    var _b = _a, { store, checked } = _b, props = __objRest(_b, ["store", "checked"]);
    const context = useContext(CheckboxCheckedContext);
    checked = checked != null ? checked : context;
    const children = getChildren({ checked, children: props.children });
    props = __spreadProps(__spreadValues({
      "aria-hidden": true
    }, props), {
      children,
      style: __spreadValues({
        width: "1em",
        height: "1em",
        pointerEvents: "none"
      }, props.style)
    });
    return props;
  }
);
var CheckboxCheck = createComponent((props) => {
  const htmlProps = useCheckboxCheck(props);
  return createElement("span", htmlProps);
});
if (process.env.NODE_ENV !== "production") {
  CheckboxCheck.displayName = "CheckboxCheck";
}

export {
  useCheckboxCheck,
  CheckboxCheck
};
