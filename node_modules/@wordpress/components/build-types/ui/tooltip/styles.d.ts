export const TooltipContent: import("@emotion/utils").SerializedStyles;
export const TooltipPopoverView: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme | undefined;
    as?: import("react").ElementType<any> | undefined;
}, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export const noOutline: import("@emotion/utils").SerializedStyles;
export const TooltipShortcut: import("@emotion/styled").StyledComponent<import("../shortcut").ShortcutProps & import("react").RefAttributes<any> & Omit<Pick<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>, "key" | keyof import("react").HTMLAttributes<HTMLSpanElement>>, "children" | "as" | keyof import("react").RefAttributes<any> | keyof import("../shortcut").ShortcutProps> & {
    as?: keyof JSX.IntrinsicElements | undefined;
} & {
    theme?: import("@emotion/react").Theme | undefined;
}, {}, {}>;
//# sourceMappingURL=styles.d.ts.map