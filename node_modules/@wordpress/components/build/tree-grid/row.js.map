{"version":3,"names":["_element","require","UnforwardedTreeGridRow","children","level","positionInSet","setSize","isExpanded","props","ref","createElement","role","TreeGridRow","forwardRef","exports","_default","default"],"sources":["@wordpress/components/src/tree-grid/row.tsx"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { forwardRef } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport type { WordPressComponentProps } from '../ui/context';\nimport type { TreeGridRowProps } from './types';\n\nfunction UnforwardedTreeGridRow(\n\t{\n\t\tchildren,\n\t\tlevel,\n\t\tpositionInSet,\n\t\tsetSize,\n\t\tisExpanded,\n\t\t...props\n\t}: WordPressComponentProps< TreeGridRowProps, 'tr', false >,\n\tref: React.ForwardedRef< HTMLTableRowElement >\n) {\n\treturn (\n\t\t<tr\n\t\t\t{ ...props }\n\t\t\tref={ ref }\n\t\t\trole=\"row\"\n\t\t\taria-level={ level }\n\t\t\taria-posinset={ positionInSet }\n\t\t\taria-setsize={ setSize }\n\t\t\taria-expanded={ isExpanded }\n\t\t>\n\t\t\t{ children }\n\t\t</tr>\n\t);\n}\n\n/**\n * `TreeGridRow` is used to create a tree hierarchy.\n * It is not a visually styled component, but instead helps with adding\n * keyboard navigation and roving tab index behaviors to tree grid structures.\n *\n * @see {@link https://www.w3.org/TR/wai-aria-practices/examples/treegrid/treegrid-1.html}\n */\nexport const TreeGridRow = forwardRef( UnforwardedTreeGridRow );\n\nexport default TreeGridRow;\n"],"mappings":";;;;;;AAGA,IAAAA,QAAA,GAAAC,OAAA;AAHA;AACA;AACA;;AASA,SAASC,sBAAsBA,CAC9B;EACCC,QAAQ;EACRC,KAAK;EACLC,aAAa;EACbC,OAAO;EACPC,UAAU;EACV,GAAGC;AACsD,CAAC,EAC3DC,GAA8C,EAC7C;EACD,OACC,IAAAT,QAAA,CAAAU,aAAA;IAAA,GACMF,KAAK;IACVC,GAAG,EAAGA,GAAK;IACXE,IAAI,EAAC,KAAK;IACV,cAAaP,KAAO;IACpB,iBAAgBC,aAAe;IAC/B,gBAAeC,OAAS;IACxB,iBAAgBC;EAAY,GAE1BJ,QACC,CAAC;AAEP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMS,WAAW,GAAG,IAAAC,mBAAU,EAAEX,sBAAuB,CAAC;AAACY,OAAA,CAAAF,WAAA,GAAAA,WAAA;AAAA,IAAAG,QAAA,GAEjDH,WAAW;AAAAE,OAAA,CAAAE,OAAA,GAAAD,QAAA"}