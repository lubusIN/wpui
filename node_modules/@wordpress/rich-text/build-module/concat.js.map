{"version":3,"names":["normaliseFormats","create","mergePair","a","b","formats","concat","replacements","text","values","reduce"],"sources":["@wordpress/rich-text/src/concat.js"],"sourcesContent":["/**\n * Internal dependencies\n */\n\nimport { normaliseFormats } from './normalise-formats';\nimport { create } from './create';\n\n/** @typedef {import('./types').RichTextValue} RichTextValue */\n\n/**\n * Concats a pair of rich text values. Not that this mutates `a` and does NOT\n * normalise formats!\n *\n * @param {Object} a Value to mutate.\n * @param {Object} b Value to add read from.\n *\n * @return {Object} `a`, mutated.\n */\nexport function mergePair( a, b ) {\n\ta.formats = a.formats.concat( b.formats );\n\ta.replacements = a.replacements.concat( b.replacements );\n\ta.text += b.text;\n\n\treturn a;\n}\n\n/**\n * Combine all Rich Text values into one. This is similar to\n * `String.prototype.concat`.\n *\n * @param {...RichTextValue} values Objects to combine.\n *\n * @return {RichTextValue} A new value combining all given records.\n */\nexport function concat( ...values ) {\n\treturn normaliseFormats( values.reduce( mergePair, create() ) );\n}\n"],"mappings":"AAAA;AACA;AACA;;AAEA,SAASA,gBAAgB,QAAQ,qBAAqB;AACtD,SAASC,MAAM,QAAQ,UAAU;;AAEjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,SAASA,CAAEC,CAAC,EAAEC,CAAC,EAAG;EACjCD,CAAC,CAACE,OAAO,GAAGF,CAAC,CAACE,OAAO,CAACC,MAAM,CAAEF,CAAC,CAACC,OAAQ,CAAC;EACzCF,CAAC,CAACI,YAAY,GAAGJ,CAAC,CAACI,YAAY,CAACD,MAAM,CAAEF,CAAC,CAACG,YAAa,CAAC;EACxDJ,CAAC,CAACK,IAAI,IAAIJ,CAAC,CAACI,IAAI;EAEhB,OAAOL,CAAC;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASG,MAAMA,CAAE,GAAGG,MAAM,EAAG;EACnC,OAAOT,gBAAgB,CAAES,MAAM,CAACC,MAAM,CAAER,SAAS,EAAED,MAAM,CAAC,CAAE,CAAE,CAAC;AAChE"}