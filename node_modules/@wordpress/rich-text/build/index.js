"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "__experimentalRichText", {
  enumerable: true,
  get: function () {
    return _component.default;
  }
});
Object.defineProperty(exports, "__unstableCreateElement", {
  enumerable: true,
  get: function () {
    return _createElement.createElement;
  }
});
Object.defineProperty(exports, "__unstableFormatEdit", {
  enumerable: true,
  get: function () {
    return _formatEdit.default;
  }
});
Object.defineProperty(exports, "__unstableToDom", {
  enumerable: true,
  get: function () {
    return _toDom.toDom;
  }
});
Object.defineProperty(exports, "__unstableUseRichText", {
  enumerable: true,
  get: function () {
    return _component.useRichText;
  }
});
Object.defineProperty(exports, "applyFormat", {
  enumerable: true,
  get: function () {
    return _applyFormat.applyFormat;
  }
});
Object.defineProperty(exports, "concat", {
  enumerable: true,
  get: function () {
    return _concat.concat;
  }
});
Object.defineProperty(exports, "create", {
  enumerable: true,
  get: function () {
    return _create.create;
  }
});
Object.defineProperty(exports, "getActiveFormat", {
  enumerable: true,
  get: function () {
    return _getActiveFormat.getActiveFormat;
  }
});
Object.defineProperty(exports, "getActiveFormats", {
  enumerable: true,
  get: function () {
    return _getActiveFormats.getActiveFormats;
  }
});
Object.defineProperty(exports, "getActiveObject", {
  enumerable: true,
  get: function () {
    return _getActiveObject.getActiveObject;
  }
});
Object.defineProperty(exports, "getTextContent", {
  enumerable: true,
  get: function () {
    return _getTextContent.getTextContent;
  }
});
Object.defineProperty(exports, "insert", {
  enumerable: true,
  get: function () {
    return _insert.insert;
  }
});
Object.defineProperty(exports, "insertObject", {
  enumerable: true,
  get: function () {
    return _insertObject.insertObject;
  }
});
Object.defineProperty(exports, "isCollapsed", {
  enumerable: true,
  get: function () {
    return _isCollapsed.isCollapsed;
  }
});
Object.defineProperty(exports, "isEmpty", {
  enumerable: true,
  get: function () {
    return _isEmpty.isEmpty;
  }
});
Object.defineProperty(exports, "join", {
  enumerable: true,
  get: function () {
    return _join.join;
  }
});
Object.defineProperty(exports, "registerFormatType", {
  enumerable: true,
  get: function () {
    return _registerFormatType.registerFormatType;
  }
});
Object.defineProperty(exports, "remove", {
  enumerable: true,
  get: function () {
    return _remove.remove;
  }
});
Object.defineProperty(exports, "removeFormat", {
  enumerable: true,
  get: function () {
    return _removeFormat.removeFormat;
  }
});
Object.defineProperty(exports, "replace", {
  enumerable: true,
  get: function () {
    return _replace.replace;
  }
});
Object.defineProperty(exports, "slice", {
  enumerable: true,
  get: function () {
    return _slice.slice;
  }
});
Object.defineProperty(exports, "split", {
  enumerable: true,
  get: function () {
    return _split.split;
  }
});
Object.defineProperty(exports, "store", {
  enumerable: true,
  get: function () {
    return _store.store;
  }
});
Object.defineProperty(exports, "toHTMLString", {
  enumerable: true,
  get: function () {
    return _toHtmlString.toHTMLString;
  }
});
Object.defineProperty(exports, "toggleFormat", {
  enumerable: true,
  get: function () {
    return _toggleFormat.toggleFormat;
  }
});
Object.defineProperty(exports, "unregisterFormatType", {
  enumerable: true,
  get: function () {
    return _unregisterFormatType.unregisterFormatType;
  }
});
Object.defineProperty(exports, "useAnchor", {
  enumerable: true,
  get: function () {
    return _useAnchor.useAnchor;
  }
});
Object.defineProperty(exports, "useAnchorRef", {
  enumerable: true,
  get: function () {
    return _useAnchorRef.useAnchorRef;
  }
});
var _store = require("./store");
var _applyFormat = require("./apply-format");
var _concat = require("./concat");
var _create = require("./create");
var _getActiveFormat = require("./get-active-format");
var _getActiveFormats = require("./get-active-formats");
var _getActiveObject = require("./get-active-object");
var _getTextContent = require("./get-text-content");
var _isCollapsed = require("./is-collapsed");
var _isEmpty = require("./is-empty");
var _join = require("./join");
var _registerFormatType = require("./register-format-type");
var _removeFormat = require("./remove-format");
var _remove = require("./remove");
var _replace = require("./replace");
var _insert = require("./insert");
var _insertObject = require("./insert-object");
var _slice = require("./slice");
var _split = require("./split");
var _toDom = require("./to-dom");
var _toHtmlString = require("./to-html-string");
var _toggleFormat = require("./toggle-format");
var _unregisterFormatType = require("./unregister-format-type");
var _createElement = require("./create-element");
var _useAnchorRef = require("./component/use-anchor-ref");
var _useAnchor = require("./component/use-anchor");
var _component = _interopRequireWildcard(require("./component"));
var _formatEdit = _interopRequireDefault(require("./component/format-edit"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
//# sourceMappingURL=index.js.map