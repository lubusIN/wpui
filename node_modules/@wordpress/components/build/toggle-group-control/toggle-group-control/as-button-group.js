"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ToggleGroupControlAsButtonGroup = void 0;
var _element = require("@wordpress/element");
var _compose = require("@wordpress/compose");
var _view = require("../../view");
var _utils = require("../../utils");
var _context = _interopRequireDefault(require("../context"));
var _utils2 = require("./utils");
/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

function UnforwardedToggleGroupControlAsButtonGroup({
  children,
  isAdaptiveWidth,
  label,
  onChange,
  size,
  value: valueProp,
  id: idProp,
  ...otherProps
}, forwardedRef) {
  const generatedId = (0, _compose.useInstanceId)(ToggleGroupControlAsButtonGroup, 'toggle-group-control-as-button-group');
  const baseId = idProp || generatedId;

  // Use a heuristic to understand if the component is being used in controlled
  // or uncontrolled mode, and consequently:
  // - when controlled, convert `undefined` values to `''` (ie. "no value")
  // - use the `value` prop as the `defaultValue` when uncontrolled
  const {
    value,
    defaultValue
  } = (0, _utils2.useComputeControlledOrUncontrolledValue)(valueProp);
  const [selectedValue, setSelectedValue] = (0, _utils.useControlledValue)({
    defaultValue,
    value,
    onChange
  });
  const groupContextValue = (0, _element.useMemo)(() => ({
    baseId,
    value: selectedValue,
    setValue: setSelectedValue,
    isBlock: !isAdaptiveWidth,
    isDeselectable: true,
    size
  }), [baseId, selectedValue, setSelectedValue, isAdaptiveWidth, size]);
  return (0, _element.createElement)(_context.default.Provider, {
    value: groupContextValue
  }, (0, _element.createElement)(_view.View, {
    "aria-label": label,
    ...otherProps,
    ref: forwardedRef,
    role: "group"
  }, children));
}
const ToggleGroupControlAsButtonGroup = (0, _element.forwardRef)(UnforwardedToggleGroupControlAsButtonGroup);
exports.ToggleGroupControlAsButtonGroup = ToggleGroupControlAsButtonGroup;
//# sourceMappingURL=as-button-group.js.map