import type { ButtonOptions } from "../button/button.js";
import type { As, Props } from "../utils/types.js";
import type { ComboboxStore } from "./combobox-store.js";
/**
 * Returns props to create a `ComboboxCancel` component that clears the combobox
 * input when clicked.
 * @see https://ariakit.org/components/combobox
 * @example
 * ```jsx
 * const store = useComboboxStore();
 * const props = useComboboxCancel({ store });
 * <Combobox store={store} />
 * <Role {...props} />
 * ```
 */
export declare const useComboboxCancel: import("../utils/types.js").Hook<ComboboxCancelOptions<"button">>;
/**
 * Renders a combobox cancel button that clears the combobox input when clicked.
 * @see https://ariakit.org/components/combobox
 * @example
 * ```jsx
 * const combobox = useComboboxStore();
 * <Combobox store={combobox} />
 * <ComboboxCancel store={combobox} />
 * <ComboboxPopover store={combobox}>
 *   <ComboboxItem value="Item 1" />
 *   <ComboboxItem value="Item 2" />
 *   <ComboboxItem value="Item 3" />
 * </ComboboxPopover>
 * ```
 */
export declare const ComboboxCancel: import("../utils/types.js").Component<ComboboxCancelOptions<"button">>;
export interface ComboboxCancelOptions<T extends As = "button"> extends ButtonOptions<T> {
    /**
     * Object returned by the `useComboboxStore` hook.
     */
    store: ComboboxStore;
}
export type ComboboxCancelProps<T extends As = "button"> = Props<ComboboxCancelOptions<T>>;
