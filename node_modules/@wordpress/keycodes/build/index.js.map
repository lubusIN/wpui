{"version":3,"names":["_changeCase","require","_i18n","_platform","BACKSPACE","exports","TAB","ENTER","ESCAPE","SPACE","PAGEUP","PAGEDOWN","END","HOME","LEFT","UP","RIGHT","DOWN","DELETE","F10","ALT","CTRL","COMMAND","SHIFT","ZERO","mapValues","object","mapFn","Object","fromEntries","entries","map","key","value","modifiers","primary","_isApple","primaryShift","primaryAlt","secondary","access","ctrl","alt","ctrlShift","shift","shiftAlt","undefined","rawShortcut","modifier","character","isAppleOS","toLowerCase","join","displayShortcutList","isApple","replacementKeyMap","modifierKeys","reduce","accumulator","_replacementKeyMap$ke","replacementKey","capitalizedCharacter","capitalCase","stripRegexp","displayShortcut","shortcutList","shortcutAriaLabel","__","_replacementKeyMap$ke2","getEventModifiers","event","filter","isKeyboardEvent","getModifiers","mods","eventMods","replacementWithShiftKeyMap","Comma","Backslash","IntlRo","IntlYen","modsDiff","mod","includes","eventModsDiff","length","altKey","String","fromCharCode","keyCode","shiftKey","code"],"sources":["@wordpress/keycodes/src/index.js"],"sourcesContent":["/**\n * Note: The order of the modifier keys in many of the [foo]Shortcut()\n * functions in this file are intentional and should not be changed. They're\n * designed to fit with the standard menu keyboard shortcuts shown in the\n * user's platform.\n *\n * For example, on MacOS menu shortcuts will place Shift before Command, but\n * on Windows Control will usually come first. So don't provide your own\n * shortcut combos directly to keyboardShortcut().\n */\n\n/**\n * External dependencies\n */\nimport { capitalCase } from 'change-case';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { isAppleOS } from './platform';\n\n/** @typedef {typeof ALT | CTRL | COMMAND | SHIFT } WPModifierPart */\n\n/** @typedef {'primary' | 'primaryShift' | 'primaryAlt' | 'secondary' | 'access' | 'ctrl' | 'alt' | 'ctrlShift' | 'shift' | 'shiftAlt' | 'undefined'} WPKeycodeModifier */\n\n/**\n * An object of handler functions for each of the possible modifier\n * combinations. A handler will return a value for a given key.\n *\n * @template T\n *\n * @typedef {Record<WPKeycodeModifier, T>} WPModifierHandler\n */\n\n/**\n * @template T\n *\n * @typedef {(character: string, isApple?: () => boolean) => T} WPKeyHandler\n */\n/** @typedef {(event: import('react').KeyboardEvent<HTMLElement> | KeyboardEvent, character: string, isApple?: () => boolean) => boolean} WPEventKeyHandler */\n\n/** @typedef {( isApple: () => boolean ) => WPModifierPart[]} WPModifier */\n\n/**\n * Keycode for BACKSPACE key.\n */\nexport const BACKSPACE = 8;\n\n/**\n * Keycode for TAB key.\n */\nexport const TAB = 9;\n\n/**\n * Keycode for ENTER key.\n */\nexport const ENTER = 13;\n\n/**\n * Keycode for ESCAPE key.\n */\nexport const ESCAPE = 27;\n\n/**\n * Keycode for SPACE key.\n */\nexport const SPACE = 32;\n\n/**\n * Keycode for PAGEUP key.\n */\nexport const PAGEUP = 33;\n\n/**\n * Keycode for PAGEDOWN key.\n */\nexport const PAGEDOWN = 34;\n\n/**\n * Keycode for END key.\n */\nexport const END = 35;\n\n/**\n * Keycode for HOME key.\n */\nexport const HOME = 36;\n\n/**\n * Keycode for LEFT key.\n */\nexport const LEFT = 37;\n\n/**\n * Keycode for UP key.\n */\nexport const UP = 38;\n\n/**\n * Keycode for RIGHT key.\n */\nexport const RIGHT = 39;\n\n/**\n * Keycode for DOWN key.\n */\nexport const DOWN = 40;\n\n/**\n * Keycode for DELETE key.\n */\nexport const DELETE = 46;\n\n/**\n * Keycode for F10 key.\n */\nexport const F10 = 121;\n\n/**\n * Keycode for ALT key.\n */\nexport const ALT = 'alt';\n\n/**\n * Keycode for CTRL key.\n */\nexport const CTRL = 'ctrl';\n\n/**\n * Keycode for COMMAND/META key.\n */\nexport const COMMAND = 'meta';\n\n/**\n * Keycode for SHIFT key.\n */\nexport const SHIFT = 'shift';\n\n/**\n * Keycode for ZERO key.\n */\nexport const ZERO = 48;\n\nexport { isAppleOS };\n\n/**\n * Map the values of an object with a specified callback and return the result object.\n *\n * @template {{ [s: string]: any; } | ArrayLike<any>} T\n *\n * @param {T}                     object Object to map values of.\n * @param {( value: any ) => any} mapFn  Mapping function\n *\n * @return {any} Active modifier constants.\n */\nfunction mapValues( object, mapFn ) {\n\treturn Object.fromEntries(\n\t\tObject.entries( object ).map( ( [ key, value ] ) => [\n\t\t\tkey,\n\t\t\tmapFn( value ),\n\t\t] )\n\t);\n}\n\n/**\n * Object that contains functions that return the available modifier\n * depending on platform.\n *\n * @type {WPModifierHandler< ( isApple: () => boolean ) => WPModifierPart[]>}\n */\nexport const modifiers = {\n\tprimary: ( _isApple ) => ( _isApple() ? [ COMMAND ] : [ CTRL ] ),\n\tprimaryShift: ( _isApple ) =>\n\t\t_isApple() ? [ SHIFT, COMMAND ] : [ CTRL, SHIFT ],\n\tprimaryAlt: ( _isApple ) =>\n\t\t_isApple() ? [ ALT, COMMAND ] : [ CTRL, ALT ],\n\tsecondary: ( _isApple ) =>\n\t\t_isApple() ? [ SHIFT, ALT, COMMAND ] : [ CTRL, SHIFT, ALT ],\n\taccess: ( _isApple ) => ( _isApple() ? [ CTRL, ALT ] : [ SHIFT, ALT ] ),\n\tctrl: () => [ CTRL ],\n\talt: () => [ ALT ],\n\tctrlShift: () => [ CTRL, SHIFT ],\n\tshift: () => [ SHIFT ],\n\tshiftAlt: () => [ SHIFT, ALT ],\n\tundefined: () => [],\n};\n\n/**\n * An object that contains functions to get raw shortcuts.\n *\n * These are intended for user with the KeyboardShortcuts.\n *\n * @example\n * ```js\n * // Assuming macOS:\n * rawShortcut.primary( 'm' )\n * // \"meta+m\"\"\n * ```\n *\n * @type {WPModifierHandler<WPKeyHandler<string>>} Keyed map of functions to raw\n *                                                 shortcuts.\n */\nexport const rawShortcut = mapValues(\n\tmodifiers,\n\t( /** @type {WPModifier} */ modifier ) => {\n\t\treturn /** @type {WPKeyHandler<string>} */ (\n\t\t\tcharacter,\n\t\t\t_isApple = isAppleOS\n\t\t) => {\n\t\t\treturn [ ...modifier( _isApple ), character.toLowerCase() ].join(\n\t\t\t\t'+'\n\t\t\t);\n\t\t};\n\t}\n);\n\n/**\n * Return an array of the parts of a keyboard shortcut chord for display.\n *\n * @example\n * ```js\n * // Assuming macOS:\n * displayShortcutList.primary( 'm' );\n * // [ \"⌘\", \"M\" ]\n * ```\n *\n * @type {WPModifierHandler<WPKeyHandler<string[]>>} Keyed map of functions to\n *                                                   shortcut sequences.\n */\nexport const displayShortcutList = mapValues(\n\tmodifiers,\n\t( /** @type {WPModifier} */ modifier ) => {\n\t\treturn /** @type {WPKeyHandler<string[]>} */ (\n\t\t\tcharacter,\n\t\t\t_isApple = isAppleOS\n\t\t) => {\n\t\t\tconst isApple = _isApple();\n\t\t\tconst replacementKeyMap = {\n\t\t\t\t[ ALT ]: isApple ? '⌥' : 'Alt',\n\t\t\t\t[ CTRL ]: isApple ? '⌃' : 'Ctrl', // Make sure ⌃ is the U+2303 UP ARROWHEAD unicode character and not the caret character.\n\t\t\t\t[ COMMAND ]: '⌘',\n\t\t\t\t[ SHIFT ]: isApple ? '⇧' : 'Shift',\n\t\t\t};\n\n\t\t\tconst modifierKeys = modifier( _isApple ).reduce(\n\t\t\t\t( accumulator, key ) => {\n\t\t\t\t\tconst replacementKey = replacementKeyMap[ key ] ?? key;\n\t\t\t\t\t// If on the Mac, adhere to platform convention and don't show plus between keys.\n\t\t\t\t\tif ( isApple ) {\n\t\t\t\t\t\treturn [ ...accumulator, replacementKey ];\n\t\t\t\t\t}\n\n\t\t\t\t\treturn [ ...accumulator, replacementKey, '+' ];\n\t\t\t\t},\n\t\t\t\t/** @type {string[]} */ ( [] )\n\t\t\t);\n\n\t\t\t// Symbols (~`,.) are removed by the default regular expression,\n\t\t\t// so override the rule to allow symbols used for shortcuts.\n\t\t\t// see: https://github.com/blakeembrey/change-case#options\n\t\t\tconst capitalizedCharacter = capitalCase( character, {\n\t\t\t\tstripRegexp: /[^A-Z0-9~`,\\.\\\\\\-]/gi,\n\t\t\t} );\n\n\t\t\treturn [ ...modifierKeys, capitalizedCharacter ];\n\t\t};\n\t}\n);\n\n/**\n * An object that contains functions to display shortcuts.\n *\n * @example\n * ```js\n * // Assuming macOS:\n * displayShortcut.primary( 'm' );\n * // \"⌘M\"\n * ```\n *\n * @type {WPModifierHandler<WPKeyHandler<string>>} Keyed map of functions to\n *                                                 display shortcuts.\n */\nexport const displayShortcut = mapValues(\n\tdisplayShortcutList,\n\t( /** @type {WPKeyHandler<string[]>} */ shortcutList ) => {\n\t\treturn /** @type {WPKeyHandler<string>} */ (\n\t\t\tcharacter,\n\t\t\t_isApple = isAppleOS\n\t\t) => shortcutList( character, _isApple ).join( '' );\n\t}\n);\n\n/**\n * An object that contains functions to return an aria label for a keyboard\n * shortcut.\n *\n * @example\n * ```js\n * // Assuming macOS:\n * shortcutAriaLabel.primary( '.' );\n * // \"Command + Period\"\n * ```\n *\n * @type {WPModifierHandler<WPKeyHandler<string>>} Keyed map of functions to\n *                                                 shortcut ARIA labels.\n */\nexport const shortcutAriaLabel = mapValues(\n\tmodifiers,\n\t( /** @type {WPModifier} */ modifier ) => {\n\t\treturn /** @type {WPKeyHandler<string>} */ (\n\t\t\tcharacter,\n\t\t\t_isApple = isAppleOS\n\t\t) => {\n\t\t\tconst isApple = _isApple();\n\t\t\t/** @type {Record<string,string>} */\n\t\t\tconst replacementKeyMap = {\n\t\t\t\t[ SHIFT ]: 'Shift',\n\t\t\t\t[ COMMAND ]: isApple ? 'Command' : 'Control',\n\t\t\t\t[ CTRL ]: 'Control',\n\t\t\t\t[ ALT ]: isApple ? 'Option' : 'Alt',\n\t\t\t\t/* translators: comma as in the character ',' */\n\t\t\t\t',': __( 'Comma' ),\n\t\t\t\t/* translators: period as in the character '.' */\n\t\t\t\t'.': __( 'Period' ),\n\t\t\t\t/* translators: backtick as in the character '`' */\n\t\t\t\t'`': __( 'Backtick' ),\n\t\t\t\t/* translators: tilde as in the character '~' */\n\t\t\t\t'~': __( 'Tilde' ),\n\t\t\t};\n\n\t\t\treturn [ ...modifier( _isApple ), character ]\n\t\t\t\t.map( ( key ) =>\n\t\t\t\t\tcapitalCase( replacementKeyMap[ key ] ?? key )\n\t\t\t\t)\n\t\t\t\t.join( isApple ? ' ' : ' + ' );\n\t\t};\n\t}\n);\n\n/**\n * From a given KeyboardEvent, returns an array of active modifier constants for\n * the event.\n *\n * @param {import('react').KeyboardEvent<HTMLElement> | KeyboardEvent} event Keyboard event.\n *\n * @return {Array<WPModifierPart>} Active modifier constants.\n */\nfunction getEventModifiers( event ) {\n\treturn /** @type {WPModifierPart[]} */ ( [\n\t\tALT,\n\t\tCTRL,\n\t\tCOMMAND,\n\t\tSHIFT,\n\t] ).filter(\n\t\t( key ) =>\n\t\t\tevent[\n\t\t\t\t/** @type {'altKey' | 'ctrlKey' | 'metaKey' | 'shiftKey'} */ (\n\t\t\t\t\t`${ key }Key`\n\t\t\t\t)\n\t\t\t]\n\t);\n}\n\n/**\n * An object that contains functions to check if a keyboard event matches a\n * predefined shortcut combination.\n *\n * @example\n * ```js\n * // Assuming an event for ⌘M key press:\n * isKeyboardEvent.primary( event, 'm' );\n * // true\n * ```\n *\n * @type {WPModifierHandler<WPEventKeyHandler>} Keyed map of functions\n *                                                       to match events.\n */\nexport const isKeyboardEvent = mapValues(\n\tmodifiers,\n\t( /** @type {WPModifier} */ getModifiers ) => {\n\t\treturn /** @type {WPEventKeyHandler} */ (\n\t\t\tevent,\n\t\t\tcharacter,\n\t\t\t_isApple = isAppleOS\n\t\t) => {\n\t\t\tconst mods = getModifiers( _isApple );\n\t\t\tconst eventMods = getEventModifiers( event );\n\t\t\t/** @type {Record<string,string>} */\n\t\t\tconst replacementWithShiftKeyMap = {\n\t\t\t\tComma: ',',\n\t\t\t\tBackslash: '\\\\',\n\t\t\t\t// Windows returns `\\` for both IntlRo and IntlYen.\n\t\t\t\tIntlRo: '\\\\',\n\t\t\t\tIntlYen: '\\\\',\n\t\t\t};\n\n\t\t\tconst modsDiff = mods.filter(\n\t\t\t\t( mod ) => ! eventMods.includes( mod )\n\t\t\t);\n\t\t\tconst eventModsDiff = eventMods.filter(\n\t\t\t\t( mod ) => ! mods.includes( mod )\n\t\t\t);\n\n\t\t\tif ( modsDiff.length > 0 || eventModsDiff.length > 0 ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tlet key = event.key.toLowerCase();\n\n\t\t\tif ( ! character ) {\n\t\t\t\treturn mods.includes( /** @type {WPModifierPart} */ ( key ) );\n\t\t\t}\n\n\t\t\tif ( event.altKey && character.length === 1 ) {\n\t\t\t\tkey = String.fromCharCode( event.keyCode ).toLowerCase();\n\t\t\t}\n\n\t\t\t// `event.key` returns the value of the key pressed, taking into the state of\n\t\t\t// modifier keys such as `Shift`. If the shift key is pressed, a different\n\t\t\t// value may be returned depending on the keyboard layout. It is necessary to\n\t\t\t// convert to the physical key value that don't take into account keyboard\n\t\t\t// layout or modifier key state.\n\t\t\tif (\n\t\t\t\tevent.shiftKey &&\n\t\t\t\tcharacter.length === 1 &&\n\t\t\t\treplacementWithShiftKeyMap[ event.code ]\n\t\t\t) {\n\t\t\t\tkey = replacementWithShiftKeyMap[ event.code ];\n\t\t\t}\n\n\t\t\t// For backwards compatibility.\n\t\t\tif ( character === 'del' ) {\n\t\t\t\tcharacter = 'delete';\n\t\t\t}\n\n\t\t\treturn key === character.toLowerCase();\n\t\t};\n\t}\n);\n"],"mappings":"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"}