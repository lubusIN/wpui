import type { CompositeOptions } from "../composite/composite.js";
import type { As, Props } from "../utils/types.js";
import type { RadioStore } from "./radio-store.js";
/**
 * Returns props to create a `RadioGroup` component.
 * @see https://ariakit.org/components/radio
 * @example
 * ```jsx
 * const store = useRadioStore();
 * const props = useRadioGroup({ store });
 * <Role {...props}>
 *   <Radio value="Apple" />
 *   <Radio value="Orange" />
 * </Role>
 * ```
 */
export declare const useRadioGroup: import("../utils/types.js").Hook<RadioGroupOptions<"div">>;
/**
 * Renders a radio group element.
 * @see https://ariakit.org/components/radio
 * @example
 * ```jsx
 * const radio = useRadioStore();
 * <RadioGroup store={radio}>
 *   <Radio value="Apple" />
 *   <Radio value="Orange" />
 * </RadioGroup>
 * ```
 */
export declare const RadioGroup: import("../utils/types.js").Component<RadioGroupOptions<"div">>;
export interface RadioGroupOptions<T extends As = "div"> extends CompositeOptions<T> {
    /**
     * Object returned by the `useRadioStore` hook.
     */
    store: RadioStore;
}
export type RadioGroupProps<T extends As = "div"> = Props<RadioGroupOptions<T>>;
