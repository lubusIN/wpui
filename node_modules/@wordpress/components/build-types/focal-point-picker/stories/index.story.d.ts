/// <reference types="react" />
/**
 * External dependencies
 */
import type { Meta } from '@storybook/react';
/**
 * Internal dependencies
 */
import FocalPointPicker from '..';
declare const meta: Meta<typeof FocalPointPicker>;
export default meta;
export declare const Default: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0a347bb9").R, Pick<import("../../base-control/types").BaseControlProps, "label" | "help" | "hideLabelFromVision"> & {
    __nextHasNoMarginBottom?: boolean | undefined;
    autoPlay?: boolean | undefined;
    onChange: (value: import("../types").FocalPoint) => void;
    onDrag?: ((value: import("../types").FocalPoint, event: MouseEvent) => void) | undefined;
    onDragEnd?: (() => void) | undefined;
    onDragStart?: ((value: import("../types").FocalPoint, event: import("react").MouseEvent<Element, MouseEvent>) => void) | undefined;
    resolvePoint?: ((point: import("../types").FocalPoint) => import("../types").FocalPoint) | undefined;
    url: string;
    value: import("../types").FocalPoint;
} & Omit<Pick<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "key" | keyof import("react").HTMLAttributes<HTMLDivElement>>, "children" | "label" | "help" | "onChange" | "onDrag" | "onDragEnd" | "onDragStart" | "as" | "autoPlay" | "value" | "url" | "hideLabelFromVision" | "__nextHasNoMarginBottom" | "resolvePoint">>;
export declare const Image: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0a347bb9").R, Pick<import("../../base-control/types").BaseControlProps, "label" | "help" | "hideLabelFromVision"> & {
    __nextHasNoMarginBottom?: boolean | undefined;
    autoPlay?: boolean | undefined;
    onChange: (value: import("../types").FocalPoint) => void;
    onDrag?: ((value: import("../types").FocalPoint, event: MouseEvent) => void) | undefined;
    onDragEnd?: (() => void) | undefined;
    onDragStart?: ((value: import("../types").FocalPoint, event: import("react").MouseEvent<Element, MouseEvent>) => void) | undefined;
    resolvePoint?: ((point: import("../types").FocalPoint) => import("../types").FocalPoint) | undefined;
    url: string;
    value: import("../types").FocalPoint;
} & Omit<Pick<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "key" | keyof import("react").HTMLAttributes<HTMLDivElement>>, "children" | "label" | "help" | "onChange" | "onDrag" | "onDragEnd" | "onDragStart" | "as" | "autoPlay" | "value" | "url" | "hideLabelFromVision" | "__nextHasNoMarginBottom" | "resolvePoint">>;
export declare const Video: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0a347bb9").R, Pick<import("../../base-control/types").BaseControlProps, "label" | "help" | "hideLabelFromVision"> & {
    __nextHasNoMarginBottom?: boolean | undefined;
    autoPlay?: boolean | undefined;
    onChange: (value: import("../types").FocalPoint) => void;
    onDrag?: ((value: import("../types").FocalPoint, event: MouseEvent) => void) | undefined;
    onDragEnd?: (() => void) | undefined;
    onDragStart?: ((value: import("../types").FocalPoint, event: import("react").MouseEvent<Element, MouseEvent>) => void) | undefined;
    resolvePoint?: ((point: import("../types").FocalPoint) => import("../types").FocalPoint) | undefined;
    url: string;
    value: import("../types").FocalPoint;
} & Omit<Pick<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "key" | keyof import("react").HTMLAttributes<HTMLDivElement>>, "children" | "label" | "help" | "onChange" | "onDrag" | "onDragEnd" | "onDragStart" | "as" | "autoPlay" | "value" | "url" | "hideLabelFromVision" | "__nextHasNoMarginBottom" | "resolvePoint">>;
export declare const Snapping: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0a347bb9").R, Pick<import("../../base-control/types").BaseControlProps, "label" | "help" | "hideLabelFromVision"> & {
    __nextHasNoMarginBottom?: boolean | undefined;
    autoPlay?: boolean | undefined;
    onChange: (value: import("../types").FocalPoint) => void;
    onDrag?: ((value: import("../types").FocalPoint, event: MouseEvent) => void) | undefined;
    onDragEnd?: (() => void) | undefined;
    onDragStart?: ((value: import("../types").FocalPoint, event: import("react").MouseEvent<Element, MouseEvent>) => void) | undefined;
    resolvePoint?: ((point: import("../types").FocalPoint) => import("../types").FocalPoint) | undefined;
    url: string;
    value: import("../types").FocalPoint;
} & Omit<Pick<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "key" | keyof import("react").HTMLAttributes<HTMLDivElement>>, "children" | "label" | "help" | "onChange" | "onDrag" | "onDragEnd" | "onDragStart" | "as" | "autoPlay" | "value" | "url" | "hideLabelFromVision" | "__nextHasNoMarginBottom" | "resolvePoint">>;
//# sourceMappingURL=index.story.d.ts.map