import {
  TabContext
} from "../__chunks/UZKBEGMB.js";
import {
  useComposite
} from "../__chunks/AAVDGJD5.js";
import "../__chunks/OXPV2NBK.js";
import "../__chunks/WJ37OVG2.js";
import "../__chunks/MYID4V27.js";
import "../__chunks/BMLNRUFQ.js";
import {
  createComponent,
  createElement,
  createHook
} from "../__chunks/NQJBHION.js";
import {
  useWrapElement
} from "../__chunks/J7Q2EO23.js";
import "../__chunks/CP3U4HPL.js";
import {
  __objRest,
  __spreadValues
} from "../__chunks/PNRLI7OV.js";

// src/tab/tab-list.tsx
import { jsx } from "react/jsx-runtime";
var useTabList = createHook((_a) => {
  var _b = _a, { store } = _b, props = __objRest(_b, ["store"]);
  const orientation = store.useState(
    (state) => state.orientation === "both" ? void 0 : state.orientation
  );
  props = useWrapElement(
    props,
    (element) => /* @__PURE__ */ jsx(TabContext.Provider, { value: store, children: element }),
    [store]
  );
  props = __spreadValues({
    role: "tablist",
    "aria-orientation": orientation
  }, props);
  props = useComposite(__spreadValues({ store }, props));
  return props;
});
var TabList = createComponent((props) => {
  const htmlProps = useTabList(props);
  return createElement("div", htmlProps);
});
if (process.env.NODE_ENV !== "production") {
  TabList.displayName = "TabList";
}
export {
  TabList,
  useTabList
};
