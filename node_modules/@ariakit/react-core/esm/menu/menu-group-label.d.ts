import type { CompositeGroupLabelOptions } from "../composite/composite-group-label.js";
import type { As, Props } from "../utils/types.js";
import type { MenuStore } from "./menu-store.js";
/**
 * Returns props to create a `MenuGroupLabel` component. This hook must be used
 * in a component that's wrapped with `MenuGroup` so the `aria-labelledby` prop
 * is properly set on the menu group element.
 * @see https://ariakit.org/components/menu
 * @example
 * ```jsx
 * // This component must be wrapped with MenuGroup
 * const props = useMenuGroupLabel();
 * <Role {...props}>Label</Role>
 * ```
 */
export declare const useMenuGroupLabel: import("../utils/types.js").Hook<MenuGroupLabelOptions<"div">>;
/**
 * Renders a label in a menu group. This component must be wrapped with
 * `MenuGroup` so the `aria-labelledby` prop is properly set on the menu group
 * element.
 * @see https://ariakit.org/components/menu
 * @example
 * ```jsx
 * const menu = useMenuStore();
 * <MenuButton store={menu}>Recent Items</MenuButton>
 * <Menu store={menu}>
 *   <MenuGroup>
 *     <MenuGroupLabel>Applications</MenuGroupLabel>
 *     <MenuItem>Google Chrome.app</MenuItem>
 *     <MenuItem>Safari.app</MenuItem>
 *   </MenuGroup>
 * </Menu>
 * ```
 */
export declare const MenuGroupLabel: import("../utils/types.js").Component<MenuGroupLabelOptions<"div">>;
export interface MenuGroupLabelOptions<T extends As = "div"> extends CompositeGroupLabelOptions<T> {
    /**
     * Object returned by the `useMenuStore` hook.
     */
    store?: MenuStore;
}
export type MenuGroupLabelProps<T extends As = "div"> = Props<MenuGroupLabelOptions<T>>;
