{"version":3,"names":["_element","require","_compose","_data","_create","_toDom","_toHtmlString","_useDefaultStyle","_useBoundaryStyle","_useCopyHandler","_useFormatBoundaries","_useSelectObject","_useInputAndSelection","_useSelectionChangeCompat","_useDelete","useRichText","value","selectionStart","selectionEnd","placeholder","preserveWhiteSpace","onSelectionChange","onChange","__unstableDisableFormats","disableFormats","__unstableIsSelected","isSelected","__unstableDependencies","__unstableAfterParse","__unstableBeforeSerialize","__unstableAddInvisibleFormats","registry","useRegistry","forceRender","useReducer","ref","useRef","createRecord","ownerDocument","defaultView","current","selection","getSelection","range","rangeCount","getRangeAt","create","element","__unstableIsEditableTree","applyRecord","newRecord","domOnly","apply","prepareEditableTree","__unstableDomOnly","_value","record","setRecordFromProps","html","formats","Array","length","replacements","start","end","hadSelectionUpdate","hasRelevantInitFormat","type","handleChangesUponInit","activeFormats","undefined","handleChange","text","toHTMLString","batch","__unstableFormats","__unstableText","applyFromProps","didMount","useLayoutEffect","activeElement","focus","mergedRefs","useMergeRefs","useDefaultStyle","useBoundaryStyle","useCopyHandler","useSelectObject","useFormatBoundaries","useDelete","useInputAndSelection","useSelectionChangeCompat","useRefEffect","getValue","__experimentalRichText"],"sources":["@wordpress/rich-text/src/component/index.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useRef, useLayoutEffect, useReducer } from '@wordpress/element';\nimport { useMergeRefs, useRefEffect } from '@wordpress/compose';\nimport { useRegistry } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { create } from '../create';\nimport { apply } from '../to-dom';\nimport { toHTMLString } from '../to-html-string';\nimport { useDefaultStyle } from './use-default-style';\nimport { useBoundaryStyle } from './use-boundary-style';\nimport { useCopyHandler } from './use-copy-handler';\nimport { useFormatBoundaries } from './use-format-boundaries';\nimport { useSelectObject } from './use-select-object';\nimport { useInputAndSelection } from './use-input-and-selection';\nimport { useSelectionChangeCompat } from './use-selection-change-compat';\nimport { useDelete } from './use-delete';\n\nexport function useRichText( {\n\tvalue = '',\n\tselectionStart,\n\tselectionEnd,\n\tplaceholder,\n\tpreserveWhiteSpace,\n\tonSelectionChange,\n\tonChange,\n\t__unstableDisableFormats: disableFormats,\n\t__unstableIsSelected: isSelected,\n\t__unstableDependencies = [],\n\t__unstableAfterParse,\n\t__unstableBeforeSerialize,\n\t__unstableAddInvisibleFormats,\n} ) {\n\tconst registry = useRegistry();\n\tconst [ , forceRender ] = useReducer( () => ( {} ) );\n\tconst ref = useRef();\n\n\tfunction createRecord() {\n\t\tconst {\n\t\t\townerDocument: { defaultView },\n\t\t} = ref.current;\n\t\tconst selection = defaultView.getSelection();\n\t\tconst range =\n\t\t\tselection.rangeCount > 0 ? selection.getRangeAt( 0 ) : null;\n\n\t\treturn create( {\n\t\t\telement: ref.current,\n\t\t\trange,\n\t\t\t__unstableIsEditableTree: true,\n\t\t\tpreserveWhiteSpace,\n\t\t} );\n\t}\n\n\tfunction applyRecord( newRecord, { domOnly } = {} ) {\n\t\tapply( {\n\t\t\tvalue: newRecord,\n\t\t\tcurrent: ref.current,\n\t\t\tprepareEditableTree: __unstableAddInvisibleFormats,\n\t\t\t__unstableDomOnly: domOnly,\n\t\t\tplaceholder,\n\t\t} );\n\t}\n\n\t// Internal values are updated synchronously, unlike props and state.\n\tconst _value = useRef( value );\n\tconst record = useRef();\n\n\tfunction setRecordFromProps() {\n\t\t_value.current = value;\n\t\trecord.current = create( {\n\t\t\thtml: value,\n\t\t\tpreserveWhiteSpace,\n\t\t} );\n\t\tif ( disableFormats ) {\n\t\t\trecord.current.formats = Array( value.length );\n\t\t\trecord.current.replacements = Array( value.length );\n\t\t}\n\t\tif ( __unstableAfterParse ) {\n\t\t\trecord.current.formats = __unstableAfterParse( record.current );\n\t\t}\n\t\trecord.current.start = selectionStart;\n\t\trecord.current.end = selectionEnd;\n\t}\n\n\tconst hadSelectionUpdate = useRef( false );\n\n\tif ( ! record.current ) {\n\t\thadSelectionUpdate.current = isSelected;\n\t\tsetRecordFromProps();\n\t\t// Sometimes formats are added programmatically and we need to make\n\t\t// sure it's persisted to the block store / markup. If these formats\n\t\t// are not applied, they could cause inconsistencies between the data\n\t\t// in the visual editor and the frontend. Right now, it's only relevant\n\t\t// to the `core/text-color` format, which is applied at runtime in\n\t\t// certain circunstances. See the `__unstableFilterAttributeValue`\n\t\t// function in `packages/format-library/src/text-color/index.js`.\n\t\t// @todo find a less-hacky way of solving this.\n\n\t\tconst hasRelevantInitFormat =\n\t\t\trecord.current?.formats[ 0 ]?.[ 0 ]?.type === 'core/text-color';\n\n\t\tif ( hasRelevantInitFormat ) {\n\t\t\thandleChangesUponInit( record.current );\n\t\t}\n\t} else if (\n\t\tselectionStart !== record.current.start ||\n\t\tselectionEnd !== record.current.end\n\t) {\n\t\thadSelectionUpdate.current = isSelected;\n\t\trecord.current = {\n\t\t\t...record.current,\n\t\t\tstart: selectionStart,\n\t\t\tend: selectionEnd,\n\t\t\tactiveFormats: undefined,\n\t\t};\n\t}\n\n\t/**\n\t * Sync the value to global state. The node tree and selection will also be\n\t * updated if differences are found.\n\t *\n\t * @param {Object} newRecord The record to sync and apply.\n\t */\n\tfunction handleChange( newRecord ) {\n\t\trecord.current = newRecord;\n\t\tapplyRecord( newRecord );\n\n\t\tif ( disableFormats ) {\n\t\t\t_value.current = newRecord.text;\n\t\t} else {\n\t\t\t_value.current = toHTMLString( {\n\t\t\t\tvalue: __unstableBeforeSerialize\n\t\t\t\t\t? {\n\t\t\t\t\t\t\t...newRecord,\n\t\t\t\t\t\t\tformats: __unstableBeforeSerialize( newRecord ),\n\t\t\t\t\t  }\n\t\t\t\t\t: newRecord,\n\t\t\t\tpreserveWhiteSpace,\n\t\t\t} );\n\t\t}\n\n\t\tconst { start, end, formats, text } = newRecord;\n\n\t\t// Selection must be updated first, so it is recorded in history when\n\t\t// the content change happens.\n\t\t// We batch both calls to only attempt to rerender once.\n\t\tregistry.batch( () => {\n\t\t\tonSelectionChange( start, end );\n\t\t\tonChange( _value.current, {\n\t\t\t\t__unstableFormats: formats,\n\t\t\t\t__unstableText: text,\n\t\t\t} );\n\t\t} );\n\t\tforceRender();\n\t}\n\n\tfunction handleChangesUponInit( newRecord ) {\n\t\trecord.current = newRecord;\n\n\t\t_value.current = toHTMLString( {\n\t\t\tvalue: __unstableBeforeSerialize\n\t\t\t\t? {\n\t\t\t\t\t\t...newRecord,\n\t\t\t\t\t\tformats: __unstableBeforeSerialize( newRecord ),\n\t\t\t\t  }\n\t\t\t\t: newRecord,\n\t\t\tpreserveWhiteSpace,\n\t\t} );\n\n\t\tconst { formats, text } = newRecord;\n\n\t\tregistry.batch( () => {\n\t\t\tonChange( _value.current, {\n\t\t\t\t__unstableFormats: formats,\n\t\t\t\t__unstableText: text,\n\t\t\t} );\n\t\t} );\n\t\tforceRender();\n\t}\n\n\tfunction applyFromProps() {\n\t\tsetRecordFromProps();\n\t\tapplyRecord( record.current );\n\t}\n\n\tconst didMount = useRef( false );\n\n\t// Value updates must happen synchonously to avoid overwriting newer values.\n\tuseLayoutEffect( () => {\n\t\tif ( didMount.current && value !== _value.current ) {\n\t\t\tapplyFromProps();\n\t\t\tforceRender();\n\t\t}\n\t}, [ value ] );\n\n\t// Value updates must happen synchonously to avoid overwriting newer values.\n\tuseLayoutEffect( () => {\n\t\tif ( ! hadSelectionUpdate.current ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ref.current.ownerDocument.activeElement !== ref.current ) {\n\t\t\tref.current.focus();\n\t\t}\n\n\t\tapplyRecord( record.current );\n\t\thadSelectionUpdate.current = false;\n\t}, [ hadSelectionUpdate.current ] );\n\n\tconst mergedRefs = useMergeRefs( [\n\t\tref,\n\t\tuseDefaultStyle(),\n\t\tuseBoundaryStyle( { record } ),\n\t\tuseCopyHandler( { record, preserveWhiteSpace } ),\n\t\tuseSelectObject(),\n\t\tuseFormatBoundaries( { record, applyRecord } ),\n\t\tuseDelete( {\n\t\t\tcreateRecord,\n\t\t\thandleChange,\n\t\t} ),\n\t\tuseInputAndSelection( {\n\t\t\trecord,\n\t\t\tapplyRecord,\n\t\t\tcreateRecord,\n\t\t\thandleChange,\n\t\t\tisSelected,\n\t\t\tonSelectionChange,\n\t\t} ),\n\t\tuseSelectionChangeCompat(),\n\t\tuseRefEffect( () => {\n\t\t\tapplyFromProps();\n\t\t\tdidMount.current = true;\n\t\t}, [ placeholder, ...__unstableDependencies ] ),\n\t] );\n\n\treturn {\n\t\tvalue: record.current,\n\t\t// A function to get the most recent value so event handlers in\n\t\t// useRichText implementations have access to it. For example when\n\t\t// listening to input events, we internally update the state, but this\n\t\t// state is not yet available to the input event handler because React\n\t\t// may re-render asynchronously.\n\t\tgetValue: () => record.current,\n\t\tonChange: handleChange,\n\t\tref: mergedRefs,\n\t};\n}\n\nexport default function __experimentalRichText() {}\n"],"mappings":"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"}