/// <reference types="react" />
/**
 * External dependencies
 */
import type { Meta } from '@storybook/react';
/**
 * Internal dependencies
 */
import { Card } from '..';
declare const meta: Meta<typeof Card>;
export default meta;
export declare const Default: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0a347bb9").R, import("../../surface/types").SurfaceProps & {
    size?: import("../types").SizeOptions | "extraSmall" | undefined;
} & {
    elevation?: number | undefined;
    isBorderless?: boolean | undefined;
    isRounded?: boolean | undefined;
    isElevated?: boolean | undefined;
} & import("react").RefAttributes<any> & Omit<Pick<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "key" | keyof import("react").HTMLAttributes<HTMLDivElement>>, "elevation" | "size" | "as" | keyof import("react").RefAttributes<any> | keyof import("../../surface/types").SurfaceProps | "isBorderless" | "isRounded" | "isElevated"> & {
    as?: keyof JSX.IntrinsicElements | undefined;
}>;
/**
 * `CardMedia` provides a container for full-bleed content within a `Card`,
 * such as images, video, or even just a background color. The corners will be rounded if necessary.
 */
export declare const FullBleedContent: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0a347bb9").R, import("../../surface/types").SurfaceProps & {
    size?: import("../types").SizeOptions | "extraSmall" | undefined;
} & {
    elevation?: number | undefined;
    isBorderless?: boolean | undefined;
    isRounded?: boolean | undefined;
    isElevated?: boolean | undefined;
} & import("react").RefAttributes<any> & Omit<Pick<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "key" | keyof import("react").HTMLAttributes<HTMLDivElement>>, "elevation" | "size" | "as" | keyof import("react").RefAttributes<any> | keyof import("../../surface/types").SurfaceProps | "isBorderless" | "isRounded" | "isElevated"> & {
    as?: keyof JSX.IntrinsicElements | undefined;
}>;
//# sourceMappingURL=index.story.d.ts.map