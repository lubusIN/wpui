"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _element = require("@wordpress/element");
var _reactNative = require("react-native");
var _components = require("@wordpress/components");
var _i18n = require("@wordpress/i18n");
var _mediaEdit = require("../media-edit");
var _iconCustomize = _interopRequireDefault(require("./icon-customize"));
var _style = _interopRequireDefault(require("./style.scss"));
/**
 * External dependencies
 */

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

const accessibilityHint = _reactNative.Platform.OS === 'ios' ? (0, _i18n.__)('Double tap to open Action Sheet to edit, replace, or clear the image') : (0, _i18n.__)('Double tap to open Bottom Sheet to edit, replace, or clear the image');
const ImageEditingButton = ({
  onSelectMediaUploadOption,
  openMediaOptions,
  pickerOptions,
  url
}) => {
  return (0, _element.createElement)(_mediaEdit.MediaEdit, {
    onSelect: onSelectMediaUploadOption,
    source: {
      uri: url
    },
    openReplaceMediaOptions: openMediaOptions,
    render: ({
      open,
      mediaOptions
    }) => (0, _element.createElement)(_reactNative.TouchableWithoutFeedback, {
      accessibilityHint: accessibilityHint,
      accessibilityLabel: (0, _i18n.__)('Edit image'),
      accessibilityRole: 'button',
      onPress: open
    }, (0, _element.createElement)(_reactNative.View, {
      style: _style.default.editContainer
    }, (0, _element.createElement)(_reactNative.View, {
      style: _style.default.edit
    }, mediaOptions(), (0, _element.createElement)(_components.Icon, {
      size: 16,
      icon: _iconCustomize.default,
      ..._style.default.iconCustomise
    })))),
    pickerOptions: pickerOptions
  });
};
var _default = ImageEditingButton;
exports.default = _default;
//# sourceMappingURL=image-editing-button.native.js.map