import type { As, Options, Props } from "../utils/types.js";
/**
 * Returns props to create a `FocusableContainer` component.
 * @see https://ariakit.org/components/focusable
 * @example
 * ```jsx
 * const props = useFocusableContainer();
 * <Role {...props} />
 * ```
 */
export declare const useFocusableContainer: import("../utils/types.js").Hook<FocusableContainerOptions<"div">>;
/**
 * Renders a div that wraps `Focusable` components and controls whether they
 * can be auto focused.
 * @see https://ariakit.org/components/focusable
 * @example
 * ```jsx
 * <FocusableContainer autoFocusOnShow={false}>
 *   <Focusable autoFocus />
 * </FocusableContainer>
 * ```
 */
export declare const FocusableContainer: import("../utils/types.js").Component<FocusableContainerOptions<"div">>;
export type FocusableContainerOptions<T extends As = "div"> = Options<T> & {
    /**
     * Determines whether focusable elements inside the container should be
     * automatically focused when the container is shown and they have the
     * `autoFocus` prop.
     * @default true
     */
    autoFocusOnShow?: boolean;
};
export type FocusableContainerProps<T extends As = "div"> = Props<FocusableContainerOptions<T>>;
