{"version":3,"names":["RCTAztecView","useCallback","useTextInputOffset","scrollEnabled","scrollViewRef","getTextInputOffset","caret","caretY","textInput","InputState","getCurrentFocusedElement","Promise","resolve","current","measureLayout","_x","y","_width","height","caretYOffset","Math","round","abs"],"sources":["@wordpress/components/src/mobile/keyboard-aware-flat-list/use-text-input-offset.native.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport RCTAztecView from '@wordpress/react-native-aztec';\nimport { useCallback } from '@wordpress/element';\n\n/** @typedef {import('@wordpress/element').RefObject} RefObject */\n/**\n * Hook that calculates the currently focused TextInput's current\n * caret Y coordinate position.\n *\n * @param {boolean}   scrollEnabled Whether the scroll is enabled or not.\n * @param {RefObject} scrollViewRef ScrollView reference.\n * @return {[Function]} Function to get the current TextInput's offset.\n */\nexport default function useTextInputOffset( scrollEnabled, scrollViewRef ) {\n\tconst getTextInputOffset = useCallback(\n\t\tasync ( caret ) => {\n\t\t\tconst { caretY = null } = caret ?? {};\n\t\t\tconst textInput =\n\t\t\t\tRCTAztecView.InputState.getCurrentFocusedElement();\n\n\t\t\treturn new Promise( ( resolve ) => {\n\t\t\t\tif (\n\t\t\t\t\tscrollViewRef.current &&\n\t\t\t\t\ttextInput &&\n\t\t\t\t\tscrollEnabled &&\n\t\t\t\t\tcaretY !== null\n\t\t\t\t) {\n\t\t\t\t\ttextInput.measureLayout(\n\t\t\t\t\t\tscrollViewRef.current,\n\t\t\t\t\t\t( _x, y, _width, height ) => {\n\t\t\t\t\t\t\tconst caretYOffset =\n\t\t\t\t\t\t\t\t// For cases where the caretY value is -1\n\t\t\t\t\t\t\t\t// we use the y + height value, e.g the current\n\t\t\t\t\t\t\t\t// character index is not valid or out of bounds\n\t\t\t\t\t\t\t\t// see https://github.com/wordpress-mobile/AztecEditor-iOS/blob/4d0522d67b0056ac211466caaa76936cc5b4f947/Aztec/Classes/TextKit/TextView.swift#L762\n\t\t\t\t\t\t\t\tcaretY >= 0 && caretY < height\n\t\t\t\t\t\t\t\t\t? y + caretY\n\t\t\t\t\t\t\t\t\t: y + height;\n\t\t\t\t\t\t\tresolve( Math.round( Math.abs( caretYOffset ) ) );\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() => resolve( null )\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tresolve( null );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\t\t[ scrollEnabled, scrollViewRef ]\n\t);\n\n\treturn [ getTextInputOffset ];\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,YAAY,MAAM,+BAA+B;AACxD,SAASC,WAAW,QAAQ,oBAAoB;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,kBAAkBA,CAAEC,aAAa,EAAEC,aAAa,EAAG;EAC1E,MAAMC,kBAAkB,GAAGJ,WAAW,CACrC,MAAQK,KAAK,IAAM;IAClB,MAAM;MAAEC,MAAM,GAAG;IAAK,CAAC,GAAGD,KAAK,aAALA,KAAK,cAALA,KAAK,GAAI,CAAC,CAAC;IACrC,MAAME,SAAS,GACdR,YAAY,CAACS,UAAU,CAACC,wBAAwB,CAAC,CAAC;IAEnD,OAAO,IAAIC,OAAO,CAAIC,OAAO,IAAM;MAClC,IACCR,aAAa,CAACS,OAAO,IACrBL,SAAS,IACTL,aAAa,IACbI,MAAM,KAAK,IAAI,EACd;QACDC,SAAS,CAACM,aAAa,CACtBV,aAAa,CAACS,OAAO,EACrB,CAAEE,EAAE,EAAEC,CAAC,EAAEC,MAAM,EAAEC,MAAM,KAAM;UAC5B,MAAMC,YAAY;UACjB;UACA;UACA;UACA;UACAZ,MAAM,IAAI,CAAC,IAAIA,MAAM,GAAGW,MAAM,GAC3BF,CAAC,GAAGT,MAAM,GACVS,CAAC,GAAGE,MAAM;UACdN,OAAO,CAAEQ,IAAI,CAACC,KAAK,CAAED,IAAI,CAACE,GAAG,CAAEH,YAAa,CAAE,CAAE,CAAC;QAClD,CAAC,EACD,MAAMP,OAAO,CAAE,IAAK,CACrB,CAAC;MACF,CAAC,MAAM;QACNA,OAAO,CAAE,IAAK,CAAC;MAChB;IACD,CAAE,CAAC;EACJ,CAAC,EACD,CAAET,aAAa,EAAEC,aAAa,CAC/B,CAAC;EAED,OAAO,CAAEC,kBAAkB,CAAE;AAC9B"}