/// <reference types="react" />
/**
 * External dependencies
 */
import type { Meta } from '@storybook/react';
/**
 * Internal dependencies
 */
import ComboboxControl from '..';
declare const meta: Meta<typeof ComboboxControl>;
export default meta;
export declare const Default: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0a347bb9").R, Pick<import("../../base-control/types").BaseControlProps, "className" | "label" | "help" | "hideLabelFromVision" | "__nextHasNoMarginBottom"> & {
    __experimentalRenderItem?: ((args: {
        item: import("../types").ComboboxControlOption;
    }) => import("react").ReactNode) | undefined;
    __next36pxDefaultSize?: boolean | undefined;
    __next40pxDefaultSize?: boolean | undefined;
    allowReset?: boolean | undefined;
    messages?: {
        selected: string;
    } | undefined;
    onChange?: ((value: string | null | undefined) => void) | undefined;
    onFilterValueChange?: ((value: string) => void) | undefined;
    options: import("../types").ComboboxControlOption[];
    value?: string | null | undefined;
}>;
/**
 * The rendered output of each suggestion can be customized by passing a
 * render function to the `__experimentalRenderItem` prop. (This is still an experimental feature
 * and is subject to change.)
 */
export declare const WithCustomRenderItem: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0a347bb9").R, Pick<import("../../base-control/types").BaseControlProps, "className" | "label" | "help" | "hideLabelFromVision" | "__nextHasNoMarginBottom"> & {
    __experimentalRenderItem?: ((args: {
        item: import("../types").ComboboxControlOption;
    }) => import("react").ReactNode) | undefined;
    __next36pxDefaultSize?: boolean | undefined;
    __next40pxDefaultSize?: boolean | undefined;
    allowReset?: boolean | undefined;
    messages?: {
        selected: string;
    } | undefined;
    onChange?: ((value: string | null | undefined) => void) | undefined;
    onFilterValueChange?: ((value: string) => void) | undefined;
    options: import("../types").ComboboxControlOption[];
    value?: string | null | undefined;
}>;
//# sourceMappingURL=index.story.d.ts.map