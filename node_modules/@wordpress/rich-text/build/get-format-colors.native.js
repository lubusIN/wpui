"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getFormatColors = getFormatColors;
var _blockEditor = require("@wordpress/block-editor");
/**
 * WordPress dependencies
 */

const FORMAT_TYPE = 'core/text-color';
const REGEX_TO_MATCH = /^has-(.*)-color$/;
const TAGS_TO_SEARCH = /\<mark/;
function getFormatColors(value, formats, colors) {
  if (value?.search(TAGS_TO_SEARCH) !== -1) {
    const newFormats = formats.slice();
    newFormats.forEach(format => {
      format.forEach(currentFormat => {
        if (currentFormat?.type === FORMAT_TYPE) {
          const className = currentFormat?.attributes?.class;
          currentFormat.attributes.style = currentFormat.attributes.style.replace(/ /g, '');
          className?.split(' ').forEach(currentClass => {
            const match = currentClass.match(REGEX_TO_MATCH);
            if (match) {
              const [, colorSlug] = currentClass.match(REGEX_TO_MATCH);
              const colorObject = (0, _blockEditor.getColorObjectByAttributeValues)(colors, colorSlug);
              const currentStyles = currentFormat?.attributes?.style;
              if (colorObject && (!currentStyles || currentStyles?.indexOf(colorObject.color) === -1)) {
                currentFormat.attributes.style = [`color: ${colorObject.color}`, currentStyles].join(';');
              }
            }
          });
        }
      });
    });
    return newFormats;
  }
  return formats;
}
//# sourceMappingURL=get-format-colors.native.js.map