"use strict";Object.defineProperty(exports, "__esModule", {value: true});

var _KLZID3QOcjs = require('./KLZID3QO.cjs');


var _5VOPA6D3cjs = require('./5VOPA6D3.cjs');




var _CWY2PHPRcjs = require('./CWY2PHPR.cjs');


var _5WLTMVVQcjs = require('./5WLTMVVQ.cjs');




var _72I2GWXFcjs = require('./72I2GWXF.cjs');

// src/composite/composite-typeahead.ts
var _react = require('react');
var _dom = require('@ariakit/core/utils/dom');
var _events = require('@ariakit/core/utils/events');
var _misc = require('@ariakit/core/utils/misc');
var chars = "";
function clearChars() {
  chars = "";
}
function isValidTypeaheadEvent(event) {
  const target = event.target;
  if (target && _dom.isTextField.call(void 0, target))
    return false;
  if (event.key === " " && chars.length)
    return true;
  return event.key.length === 1 && !event.ctrlKey && !event.altKey && !event.metaKey && /^[\p{Letter}\p{Number}]$/u.test(event.key);
}
function isSelfTargetOrItem(event, items) {
  if (_events.isSelfTarget.call(void 0, event))
    return true;
  const target = event.target;
  if (!target)
    return false;
  const isItem = items.some((item) => item.element === target);
  return isItem;
}
function getEnabledItems(items) {
  return items.filter((item) => !item.disabled);
}
function itemTextStartsWith(item, text) {
  var _a;
  const itemText = ((_a = item.element) == null ? void 0 : _a.textContent) || item.children;
  if (!itemText)
    return false;
  return _misc.normalizeString.call(void 0, itemText).trim().toLowerCase().startsWith(text.toLowerCase());
}
function getSameInitialItems(items, char, activeId) {
  if (!activeId)
    return items;
  const activeItem = items.find((item) => item.id === activeId);
  if (!activeItem)
    return items;
  if (!itemTextStartsWith(activeItem, char))
    return items;
  if (chars !== char && itemTextStartsWith(activeItem, chars))
    return items;
  chars = char;
  return _KLZID3QOcjs.flipItems.call(void 0, 
    items.filter((item) => itemTextStartsWith(item, chars)),
    activeId
  ).filter((item) => item.id !== activeId);
}
var useCompositeTypeahead = _CWY2PHPRcjs.createHook.call(void 0, 
  (_a) => {
    var _b = _a, { store, typeahead = true } = _b, props = _72I2GWXFcjs.__objRest.call(void 0, _b, ["store", "typeahead"]);
    const context = _react.useContext.call(void 0, _5VOPA6D3cjs.CompositeContext);
    store = store || context;
    _misc.invariant.call(void 0, 
      store,
      process.env.NODE_ENV !== "production" && "CompositeTypeahead must be a Composite component"
    );
    const onKeyDownCaptureProp = props.onKeyDownCapture;
    const cleanupTimeoutRef = _react.useRef.call(void 0, 0);
    const onKeyDownCapture = _5WLTMVVQcjs.useEvent.call(void 0, 
      (event) => {
        onKeyDownCaptureProp == null ? void 0 : onKeyDownCaptureProp(event);
        if (event.defaultPrevented)
          return;
        if (!typeahead)
          return;
        if (!store)
          return;
        const { items, activeId } = store.getState();
        if (!isValidTypeaheadEvent(event))
          return clearChars();
        let enabledItems = getEnabledItems(items);
        if (!isSelfTargetOrItem(event, enabledItems))
          return clearChars();
        event.preventDefault();
        window.clearTimeout(cleanupTimeoutRef.current);
        cleanupTimeoutRef.current = window.setTimeout(() => {
          chars = "";
        }, 500);
        const char = event.key.toLowerCase();
        chars += char;
        enabledItems = getSameInitialItems(enabledItems, char, activeId);
        const item = enabledItems.find(
          (item2) => itemTextStartsWith(item2, chars)
        );
        if (item) {
          store.move(item.id);
        } else {
          clearChars();
        }
      }
    );
    props = _72I2GWXFcjs.__spreadProps.call(void 0, _72I2GWXFcjs.__spreadValues.call(void 0, {}, props), {
      onKeyDownCapture
    });
    return props;
  }
);
var CompositeTypeahead = _CWY2PHPRcjs.createComponent.call(void 0, 
  (props) => {
    const htmlProps = useCompositeTypeahead(props);
    return _CWY2PHPRcjs.createElement.call(void 0, "div", htmlProps);
  }
);
if (process.env.NODE_ENV !== "production") {
  CompositeTypeahead.displayName = "CompositeTypeahead";
}




exports.useCompositeTypeahead = useCompositeTypeahead; exports.CompositeTypeahead = CompositeTypeahead;
