{"version":3,"names":["_element","require","_compose","noop","POSITIONS","bottom","corner","exports","useResizeLabel","axis","fadeTimeout","onResize","position","showPx","resizeListener","sizes","useResizeObserver","isAxisControlled","moveX","setMoveX","useState","moveY","setMoveY","width","height","heightRef","useRef","widthRef","moveTimeoutRef","debounceUnsetMoveXY","useCallback","unsetMoveXY","current","window","clearTimeout","setTimeout","useEffect","isRendered","didWidthChange","didHeightChange","label","getSizeLabel","undefined","labelUnit"],"sources":["@wordpress/components/src/resizable-box/resize-tooltip/utils.ts"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useCallback, useEffect, useRef, useState } from '@wordpress/element';\nimport { useResizeObserver } from '@wordpress/compose';\n\nconst noop = () => {};\n\nexport type Axis = 'x' | 'y';\n\nexport const POSITIONS = {\n\tbottom: 'bottom',\n\tcorner: 'corner',\n} as const;\n\nexport type Position = ( typeof POSITIONS )[ keyof typeof POSITIONS ];\n\ninterface UseResizeLabelProps {\n\t/** The label value. */\n\tlabel?: string;\n\t/** Element to be rendered for resize listening events. */\n\tresizeListener: JSX.Element;\n}\n\ninterface UseResizeLabelArgs {\n\taxis?: Axis;\n\tfadeTimeout: number;\n\tonResize( data: { width: number | null; height: number | null } ): void;\n\tposition: Position;\n\tshowPx: boolean;\n}\n\n/**\n * Custom hook that manages resize listener events. It also provides a label\n * based on current resize width x height values.\n *\n * @param props\n * @param props.axis        Only shows the label corresponding to the axis.\n * @param props.fadeTimeout Duration (ms) before deactivating the resize label.\n * @param props.onResize    Callback when a resize occurs. Provides { width, height } callback.\n * @param props.position    Adjusts label value.\n * @param props.showPx      Whether to add `PX` to the label.\n *\n * @return Properties for hook.\n */\nexport function useResizeLabel( {\n\taxis,\n\tfadeTimeout = 180,\n\tonResize = noop,\n\tposition = POSITIONS.bottom,\n\tshowPx = false,\n}: UseResizeLabelArgs ): UseResizeLabelProps {\n\t/*\n\t * The width/height values derive from this special useResizeObserver hook.\n\t * This custom hook uses the ResizeObserver API to listen for resize events.\n\t */\n\tconst [ resizeListener, sizes ] = useResizeObserver();\n\n\t/*\n\t * Indicates if the x/y axis is preferred.\n\t * If set, we will avoid resetting the moveX and moveY values.\n\t * This will allow for the preferred axis values to persist in the label.\n\t */\n\tconst isAxisControlled = !! axis;\n\n\t/*\n\t * The moveX and moveY values are used to track whether the label should\n\t * display width, height, or width x height.\n\t */\n\tconst [ moveX, setMoveX ] = useState( false );\n\tconst [ moveY, setMoveY ] = useState( false );\n\n\t/*\n\t * Cached dimension values to check for width/height updates from the\n\t * sizes property from useResizeAware()\n\t */\n\tconst { width, height } = sizes;\n\tconst heightRef = useRef( height );\n\tconst widthRef = useRef( width );\n\n\t/*\n\t * This timeout is used with setMoveX and setMoveY to determine of\n\t * both width and height values have changed at (roughly) the same time.\n\t */\n\tconst moveTimeoutRef = useRef< number >();\n\n\tconst debounceUnsetMoveXY = useCallback( () => {\n\t\tconst unsetMoveXY = () => {\n\t\t\t/*\n\t\t\t * If axis is controlled, we will avoid resetting the moveX and moveY values.\n\t\t\t * This will allow for the preferred axis values to persist in the label.\n\t\t\t */\n\t\t\tif ( isAxisControlled ) return;\n\t\t\tsetMoveX( false );\n\t\t\tsetMoveY( false );\n\t\t};\n\n\t\tif ( moveTimeoutRef.current ) {\n\t\t\twindow.clearTimeout( moveTimeoutRef.current );\n\t\t}\n\n\t\tmoveTimeoutRef.current = window.setTimeout( unsetMoveXY, fadeTimeout );\n\t}, [ fadeTimeout, isAxisControlled ] );\n\n\tuseEffect( () => {\n\t\t/*\n\t\t * On the initial render of useResizeAware, the height and width values are\n\t\t * null. They are calculated then set using via an internal useEffect hook.\n\t\t */\n\t\tconst isRendered = width !== null || height !== null;\n\n\t\tif ( ! isRendered ) return;\n\n\t\tconst didWidthChange = width !== widthRef.current;\n\t\tconst didHeightChange = height !== heightRef.current;\n\n\t\tif ( ! didWidthChange && ! didHeightChange ) return;\n\n\t\t/*\n\t\t * After the initial render, the useResizeAware will set the first\n\t\t * width and height values. We'll sync those values with our\n\t\t * width and height refs. However, we shouldn't render our Tooltip\n\t\t * label on this first cycle.\n\t\t */\n\t\tif ( width && ! widthRef.current && height && ! heightRef.current ) {\n\t\t\twidthRef.current = width;\n\t\t\theightRef.current = height;\n\t\t\treturn;\n\t\t}\n\n\t\t/*\n\t\t * After the first cycle, we can track width and height changes.\n\t\t */\n\t\tif ( didWidthChange ) {\n\t\t\tsetMoveX( true );\n\t\t\twidthRef.current = width;\n\t\t}\n\n\t\tif ( didHeightChange ) {\n\t\t\tsetMoveY( true );\n\t\t\theightRef.current = height;\n\t\t}\n\n\t\tonResize( { width, height } );\n\t\tdebounceUnsetMoveXY();\n\t}, [ width, height, onResize, debounceUnsetMoveXY ] );\n\n\tconst label = getSizeLabel( {\n\t\taxis,\n\t\theight,\n\t\tmoveX,\n\t\tmoveY,\n\t\tposition,\n\t\tshowPx,\n\t\twidth,\n\t} );\n\n\treturn {\n\t\tlabel,\n\t\tresizeListener,\n\t};\n}\n\ninterface GetSizeLabelArgs {\n\taxis?: Axis;\n\theight: number | null;\n\tmoveX: boolean;\n\tmoveY: boolean;\n\tposition: Position;\n\tshowPx: boolean;\n\twidth: number | null;\n}\n\n/**\n * Gets the resize label based on width and height values (as well as recent changes).\n *\n * @param props\n * @param props.axis     Only shows the label corresponding to the axis.\n * @param props.height   Height value.\n * @param props.moveX    Recent width (x axis) changes.\n * @param props.moveY    Recent width (y axis) changes.\n * @param props.position Adjusts label value.\n * @param props.showPx   Whether to add `PX` to the label.\n * @param props.width    Width value.\n *\n * @return The rendered label.\n */\nfunction getSizeLabel( {\n\taxis,\n\theight,\n\tmoveX = false,\n\tmoveY = false,\n\tposition = POSITIONS.bottom,\n\tshowPx = false,\n\twidth,\n}: GetSizeLabelArgs ): string | undefined {\n\tif ( ! moveX && ! moveY ) return undefined;\n\n\t/*\n\t * Corner position...\n\t * We want the label to appear like width x height.\n\t */\n\tif ( position === POSITIONS.corner ) {\n\t\treturn `${ width } x ${ height }`;\n\t}\n\n\t/*\n\t * Other POSITIONS...\n\t * The label will combine both width x height values if both\n\t * values have recently been changed.\n\t *\n\t * Otherwise, only width or height will be displayed.\n\t * The `PX` unit will be added, if specified by the `showPx` prop.\n\t */\n\tconst labelUnit = showPx ? ' px' : '';\n\n\tif ( axis ) {\n\t\tif ( axis === 'x' && moveX ) {\n\t\t\treturn `${ width }${ labelUnit }`;\n\t\t}\n\t\tif ( axis === 'y' && moveY ) {\n\t\t\treturn `${ height }${ labelUnit }`;\n\t\t}\n\t}\n\n\tif ( moveX && moveY ) {\n\t\treturn `${ width } x ${ height }`;\n\t}\n\tif ( moveX ) {\n\t\treturn `${ width }${ labelUnit }`;\n\t}\n\tif ( moveY ) {\n\t\treturn `${ height }${ labelUnit }`;\n\t}\n\n\treturn undefined;\n}\n"],"mappings":"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"}