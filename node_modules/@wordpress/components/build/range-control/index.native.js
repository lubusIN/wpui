"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _element = require("@wordpress/element");
var _rangeCell = _interopRequireDefault(require("../mobile/bottom-sheet/range-cell"));
var _stepperCell = _interopRequireDefault(require("../mobile/bottom-sheet/stepper-cell"));
/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

const RangeControl = (0, _element.memo)(({
  className,
  currentInput,
  label,
  value,
  instanceId,
  onChange,
  beforeIcon,
  afterIcon,
  help,
  allowReset,
  initialPosition,
  min,
  max,
  type,
  separatorType,
  disabled,
  ...props
}) => {
  if (type === 'stepper') {
    return (0, _element.createElement)(_stepperCell.default, {
      label: label,
      max: max,
      min: min,
      onChange: onChange,
      separatorType: separatorType,
      value: value,
      disabled: disabled
    });
  }
  const id = `inspector-range-control-${instanceId}`;
  const currentInputValue = currentInput === null ? value : currentInput;
  const initialSliderValue = isFinite(currentInputValue) ? currentInputValue : initialPosition;
  return (0, _element.createElement)(_rangeCell.default, {
    label: label,
    id: id,
    help: help,
    className: className,
    onChange: onChange,
    "aria-describedby": !!help ? `${id}__help` : undefined,
    minimumValue: min,
    maximumValue: max,
    value: value,
    beforeIcon: beforeIcon,
    afterIcon: afterIcon,
    allowReset: allowReset,
    defaultValue: initialSliderValue,
    separatorType: separatorType,
    disabled: disabled,
    ...props
  });
});
var _default = RangeControl;
exports.default = _default;
//# sourceMappingURL=index.native.js.map