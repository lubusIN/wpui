"use strict";Object.defineProperty(exports, "__esModule", {value: true});

var _FA3DXDDTcjs = require('./FA3DXDDT.cjs');


var _Z3TLXRS7cjs = require('./Z3TLXRS7.cjs');


var _56NPFF7Pcjs = require('./56NPFF7P.cjs');




var _BWQVQDGCcjs = require('./BWQVQDGC.cjs');


var _PD5YFDLOcjs = require('./PD5YFDLO.cjs');

// src/dialog/utils/disable-tree-outside.ts
var _dom = require('@ariakit/core/utils/dom');
var _focus = require('@ariakit/core/utils/focus');
var _misc = require('@ariakit/core/utils/misc');
function disableElement(element) {
  if (!("style" in element))
    return _misc.noop;
  if (_56NPFF7Pcjs.supportsInert.call(void 0, )) {
    return _BWQVQDGCcjs.setProperty.call(void 0, element, "inert", true);
  }
  return _misc.chain.call(void 0, 
    _FA3DXDDTcjs.hideElementFromAccessibilityTree.call(void 0, element),
    _BWQVQDGCcjs.assignStyle.call(void 0, element, {
      pointerEvents: "none",
      userSelect: "none",
      cursor: "default"
    })
  );
}
function disableTreeOutside(...elements) {
  const cleanups = [];
  const ids = elements.map((el) => el == null ? void 0 : el.id);
  if (!_56NPFF7Pcjs.supportsInert.call(void 0, )) {
    _focus.getAllTabbable.call(void 0, ).forEach((element) => {
      if (elements.some((el) => el && _dom.contains.call(void 0, el, element)))
        return;
      cleanups.unshift(_BWQVQDGCcjs.setAttribute.call(void 0, element, "tabindex", "-1"));
    });
  }
  _PD5YFDLOcjs.walkTreeOutside.call(void 0, elements, (element) => {
    if (_Z3TLXRS7cjs.isBackdrop.call(void 0, element, ...ids))
      return;
    cleanups.unshift(disableElement(element));
  });
  const restoreTreeOutside = () => {
    cleanups.forEach((fn) => fn());
  };
  return restoreTreeOutside;
}



exports.disableTreeOutside = disableTreeOutside;
