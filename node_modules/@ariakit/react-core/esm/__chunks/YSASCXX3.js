import {
  DialogDescriptionContext
} from "./LNHZLQEK.js";
import {
  createComponent,
  createElement,
  createHook
} from "./NQJBHION.js";
import {
  useId,
  useSafeLayoutEffect
} from "./J7Q2EO23.js";
import {
  __objRest,
  __spreadValues
} from "./PNRLI7OV.js";

// src/dialog/dialog-description.ts
import { useContext } from "react";
var useDialogDescription = createHook(
  (_a) => {
    var _b = _a, { store } = _b, props = __objRest(_b, ["store"]);
    const setDescriptionId = useContext(DialogDescriptionContext);
    const id = useId(props.id);
    useSafeLayoutEffect(() => {
      setDescriptionId == null ? void 0 : setDescriptionId(id);
      return () => setDescriptionId == null ? void 0 : setDescriptionId(void 0);
    }, [setDescriptionId, id]);
    props = __spreadValues({
      id
    }, props);
    return props;
  }
);
var DialogDescription = createComponent(
  (props) => {
    const htmlProps = useDialogDescription(props);
    return createElement("p", htmlProps);
  }
);
if (process.env.NODE_ENV !== "production") {
  DialogDescription.displayName = "DialogDescription";
}

export {
  useDialogDescription,
  DialogDescription
};
