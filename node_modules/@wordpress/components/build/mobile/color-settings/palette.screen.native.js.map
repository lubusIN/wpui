{"version":3,"names":["_element","require","_reactNative","_i18n","_compose","_components","_native","_colorPalette","_interopRequireDefault","_colorIndicator","_navBar","_segmentedControl","_utils","_style","HIT_SLOP","top","bottom","left","right","THEME_PALETTE_NAME","PaletteScreen","route","useRoute","navigation","useNavigation","shouldEnableBottomSheetScroll","useContext","BottomSheetContext","label","onColorChange","onGradientChange","onColorCleared","colorValue","defaultSettings","hideNavigation","params","segments","isGradient","colorsUtils","currentValue","setCurrentValue","useState","isGradientColor","selectedSegmentIndex","allAvailableColors","useMobileGlobalStylesColors","currentSegment","setCurrentSegment","isGradientSegment","currentSegmentColors","colors","gradients","horizontalSeparatorStyle","usePreferredColorSchemeStyle","styles","horizontalSeparator","horizontalSeparatorDark","clearButtonStyle","clearButton","clearButtonDark","selectedColorTextStyle","colorText","colorTextDark","isSolidSegment","isCustomGadientShown","setColor","color","onClear","undefined","onCustomPress","navigate","screens","picker","gradientPicker","getClearButton","createElement","TouchableWithoutFeedback","onPress","hitSlop","View","style","clearButtonContainer","Text","__","getFooter","default","segmentHandler","selectedIndex","indexOf","addonLeft","colorIndicator","addonRight","footer","flex","maxFontSizeMultiplier","selectable","toUpperCase","selectColorText","BackButton","goBack","Heading","colorPalettes","map","palette","paletteKey","paletteSettings","allColors","enableCustomColor","name","key","activeColor","Fragment","PanelBody","ColorControl","withColorIndicator","_default","exports"],"sources":["@wordpress/components/src/mobile/color-settings/palette.screen.native.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport { View, Text, TouchableWithoutFeedback } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useState, useContext } from '@wordpress/element';\nimport { usePreferredColorSchemeStyle } from '@wordpress/compose';\nimport {\n\tColorControl,\n\tPanelBody,\n\tBottomSheetContext,\n\tuseMobileGlobalStylesColors,\n} from '@wordpress/components';\nimport { useRoute, useNavigation } from '@react-navigation/native';\n\n/**\n * Internal dependencies\n */\nimport ColorPalette from '../../color-palette';\nimport ColorIndicator from '../../color-indicator';\nimport NavBar from '../bottom-sheet/nav-bar';\nimport SegmentedControls from '../segmented-control';\nimport { colorsUtils } from './utils';\n\nimport styles from './style.scss';\n\nconst HIT_SLOP = { top: 8, bottom: 8, left: 8, right: 8 };\nconst THEME_PALETTE_NAME = 'Theme';\n\nconst PaletteScreen = () => {\n\tconst route = useRoute();\n\tconst navigation = useNavigation();\n\tconst { shouldEnableBottomSheetScroll } = useContext( BottomSheetContext );\n\tconst {\n\t\tlabel,\n\t\tonColorChange,\n\t\tonGradientChange,\n\t\tonColorCleared,\n\t\tcolorValue,\n\t\tdefaultSettings,\n\t\thideNavigation = false,\n\t} = route.params || {};\n\tconst { segments, isGradient } = colorsUtils;\n\tconst [ currentValue, setCurrentValue ] = useState( colorValue );\n\tconst isGradientColor = isGradient( currentValue );\n\tconst selectedSegmentIndex = isGradientColor ? 1 : 0;\n\tconst allAvailableColors = useMobileGlobalStylesColors();\n\n\tconst [ currentSegment, setCurrentSegment ] = useState(\n\t\tsegments[ selectedSegmentIndex ]\n\t);\n\tconst isGradientSegment = currentSegment === colorsUtils.segments[ 1 ];\n\tconst currentSegmentColors = ! isGradientSegment\n\t\t? defaultSettings.colors\n\t\t: defaultSettings.gradients;\n\n\tconst horizontalSeparatorStyle = usePreferredColorSchemeStyle(\n\t\tstyles.horizontalSeparator,\n\t\tstyles.horizontalSeparatorDark\n\t);\n\tconst clearButtonStyle = usePreferredColorSchemeStyle(\n\t\tstyles.clearButton,\n\t\tstyles.clearButtonDark\n\t);\n\tconst selectedColorTextStyle = usePreferredColorSchemeStyle(\n\t\tstyles.colorText,\n\t\tstyles.colorTextDark\n\t);\n\n\tconst isSolidSegment = currentSegment === segments[ 0 ];\n\tconst isCustomGadientShown = ! isSolidSegment && isGradientColor;\n\n\tconst setColor = ( color ) => {\n\t\tsetCurrentValue( color );\n\t\tif ( isSolidSegment && onColorChange && onGradientChange ) {\n\t\t\tonColorChange( color );\n\t\t} else if ( isSolidSegment && onColorChange ) {\n\t\t\tonColorChange( color );\n\t\t} else if ( ! isSolidSegment && onGradientChange ) {\n\t\t\tonGradientChange( color );\n\t\t}\n\t};\n\n\tfunction onClear() {\n\t\tsetCurrentValue( undefined );\n\n\t\tif ( onColorCleared ) {\n\t\t\tonColorCleared();\n\t\t}\n\t}\n\n\tfunction onCustomPress() {\n\t\tif ( isSolidSegment ) {\n\t\t\tnavigation.navigate( colorsUtils.screens.picker, {\n\t\t\t\tcurrentValue,\n\t\t\t\tsetColor,\n\t\t\t} );\n\t\t} else {\n\t\t\tnavigation.navigate( colorsUtils.screens.gradientPicker, {\n\t\t\t\tsetColor,\n\t\t\t\tisGradientColor,\n\t\t\t\tcurrentValue,\n\t\t\t} );\n\t\t}\n\t}\n\n\tfunction getClearButton() {\n\t\treturn (\n\t\t\t<TouchableWithoutFeedback onPress={ onClear } hitSlop={ HIT_SLOP }>\n\t\t\t\t<View style={ styles.clearButtonContainer }>\n\t\t\t\t\t<Text style={ clearButtonStyle }>{ __( 'Reset' ) }</Text>\n\t\t\t\t</View>\n\t\t\t</TouchableWithoutFeedback>\n\t\t);\n\t}\n\n\tfunction getFooter() {\n\t\tif ( onGradientChange ) {\n\t\t\treturn (\n\t\t\t\t<SegmentedControls\n\t\t\t\t\tsegments={ segments }\n\t\t\t\t\tsegmentHandler={ setCurrentSegment }\n\t\t\t\t\tselectedIndex={ segments.indexOf( currentSegment ) }\n\t\t\t\t\taddonLeft={\n\t\t\t\t\t\tcurrentValue && (\n\t\t\t\t\t\t\t<ColorIndicator\n\t\t\t\t\t\t\t\tcolor={ currentValue }\n\t\t\t\t\t\t\t\tstyle={ styles.colorIndicator }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\taddonRight={ currentValue && getClearButton() }\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<View style={ styles.footer }>\n\t\t\t\t<View style={ styles.flex }>\n\t\t\t\t\t{ currentValue && (\n\t\t\t\t\t\t<ColorIndicator\n\t\t\t\t\t\t\tcolor={ currentValue }\n\t\t\t\t\t\t\tstyle={ styles.colorIndicator }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</View>\n\t\t\t\t{ currentValue ? (\n\t\t\t\t\t<Text\n\t\t\t\t\t\tstyle={ selectedColorTextStyle }\n\t\t\t\t\t\tmaxFontSizeMultiplier={ 2 }\n\t\t\t\t\t\tselectable\n\t\t\t\t\t>\n\t\t\t\t\t\t{ currentValue.toUpperCase() }\n\t\t\t\t\t</Text>\n\t\t\t\t) : (\n\t\t\t\t\t<Text\n\t\t\t\t\t\tstyle={ styles.selectColorText }\n\t\t\t\t\t\tmaxFontSizeMultiplier={ 2 }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ __( 'Select a color above' ) }\n\t\t\t\t\t</Text>\n\t\t\t\t) }\n\t\t\t\t<View style={ styles.flex }>\n\t\t\t\t\t{ currentValue && getClearButton() }\n\t\t\t\t</View>\n\t\t\t</View>\n\t\t);\n\t}\n\treturn (\n\t\t<View>\n\t\t\t{ ! hideNavigation && (\n\t\t\t\t<NavBar>\n\t\t\t\t\t<NavBar.BackButton onPress={ navigation.goBack } />\n\t\t\t\t\t<NavBar.Heading>{ label } </NavBar.Heading>\n\t\t\t\t</NavBar>\n\t\t\t) }\n\n\t\t\t<View style={ styles.colorPalettes }>\n\t\t\t\t{ currentSegmentColors.map( ( palette, paletteKey ) => {\n\t\t\t\t\tconst paletteSettings = {\n\t\t\t\t\t\tcolors: palette.colors,\n\t\t\t\t\t\tgradients: palette.gradients,\n\t\t\t\t\t\tallColors: allAvailableColors,\n\t\t\t\t\t};\n\t\t\t\t\tconst enableCustomColor =\n\t\t\t\t\t\t! isGradientSegment &&\n\t\t\t\t\t\tpalette.name === THEME_PALETTE_NAME;\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ColorPalette\n\t\t\t\t\t\t\tenableCustomColor={ enableCustomColor }\n\t\t\t\t\t\t\tlabel={ palette.name }\n\t\t\t\t\t\t\tkey={ paletteKey }\n\t\t\t\t\t\t\tsetColor={ setColor }\n\t\t\t\t\t\t\tactiveColor={ currentValue }\n\t\t\t\t\t\t\tisGradientColor={ isGradientColor }\n\t\t\t\t\t\t\tcurrentSegment={ currentSegment }\n\t\t\t\t\t\t\tonCustomPress={ onCustomPress }\n\t\t\t\t\t\t\tshouldEnableBottomSheetScroll={\n\t\t\t\t\t\t\t\tshouldEnableBottomSheetScroll\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdefaultSettings={ paletteSettings }\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t} ) }\n\t\t\t</View>\n\n\t\t\t{ isCustomGadientShown && (\n\t\t\t\t<>\n\t\t\t\t\t<View style={ horizontalSeparatorStyle } />\n\t\t\t\t\t<PanelBody>\n\t\t\t\t\t\t<ColorControl\n\t\t\t\t\t\t\tlabel={ __( 'Customize Gradient' ) }\n\t\t\t\t\t\t\tonPress={ onCustomPress }\n\t\t\t\t\t\t\twithColorIndicator={ false }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelBody>\n\t\t\t\t</>\n\t\t\t) }\n\t\t\t<View style={ horizontalSeparatorStyle } />\n\t\t\t{ getFooter() }\n\t\t</View>\n\t);\n};\n\nexport default PaletteScreen;\n"],"mappings":"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"}