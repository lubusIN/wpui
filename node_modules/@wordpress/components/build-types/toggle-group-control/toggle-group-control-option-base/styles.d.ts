/// <reference types="react" />
import type { ToggleGroupControlProps, ToggleGroupControlOptionBaseProps } from '../types';
export declare const LabelView: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme | undefined;
    as?: import("react").ElementType<any> | undefined;
}, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export declare const labelBlock: import("@emotion/utils").SerializedStyles;
export declare const buttonView: ({ isDeselectable, isIcon, isPressed, size, }: Pick<ToggleGroupControlProps, "size" | "isDeselectable"> & Pick<ToggleGroupControlOptionBaseProps, "isIcon"> & {
    isPressed?: boolean | undefined;
}) => import("@emotion/utils").SerializedStyles;
export declare const ButtonContentView: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme | undefined;
    as?: import("react").ElementType<any> | undefined;
}, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, {}>;
export declare const backdropView: import("@emotion/utils").SerializedStyles;
//# sourceMappingURL=styles.d.ts.map