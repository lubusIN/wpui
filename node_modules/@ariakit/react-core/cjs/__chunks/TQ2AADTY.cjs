"use strict";Object.defineProperty(exports, "__esModule", {value: true});

var _2WZVSPAIcjs = require('./2WZVSPAI.cjs');


var _SZTCN3SGcjs = require('./SZTCN3SG.cjs');


var _I4JDDV3Vcjs = require('./I4JDDV3V.cjs');




var _CWY2PHPRcjs = require('./CWY2PHPR.cjs');





var _5WLTMVVQcjs = require('./5WLTMVVQ.cjs');




var _72I2GWXFcjs = require('./72I2GWXF.cjs');

// src/combobox/combobox-list.tsx
var _react = require('react');
var _events = require('@ariakit/core/utils/events');
var _jsxruntime = require('react/jsx-runtime');
var useComboboxList = _CWY2PHPRcjs.createHook.call(void 0, 
  (_a) => {
    var _b = _a, { store, focusable = true, alwaysVisible } = _b, props = _72I2GWXFcjs.__objRest.call(void 0, _b, ["store", "focusable", "alwaysVisible"]);
    const ref = _react.useRef.call(void 0, null);
    const id = _5WLTMVVQcjs.useId.call(void 0, props.id);
    const onKeyDownProp = props.onKeyDown;
    const onKeyDown = _5WLTMVVQcjs.useEvent.call(void 0, (event) => {
      onKeyDownProp == null ? void 0 : onKeyDownProp(event);
      if (event.defaultPrevented)
        return;
      if (event.key === "Escape") {
        store.move(null);
      }
    });
    const restoreVirtualFocus = _react.useRef.call(void 0, false);
    const onFocusVisibleProp = props.onFocusVisible;
    const onFocusVisible = _5WLTMVVQcjs.useEvent.call(void 0, (event) => {
      onFocusVisibleProp == null ? void 0 : onFocusVisibleProp(event);
      if (event.defaultPrevented)
        return;
      if (event.type !== "focus")
        return;
      const { virtualFocus } = store.getState();
      if (!virtualFocus)
        return;
      const { relatedTarget, currentTarget } = event;
      if (relatedTarget && currentTarget.contains(relatedTarget))
        return;
      restoreVirtualFocus.current = true;
      store.setState("virtualFocus", false);
    });
    const onBlurProp = props.onBlur;
    const onBlur = _5WLTMVVQcjs.useEvent.call(void 0, (event) => {
      onBlurProp == null ? void 0 : onBlurProp(event);
      if (event.defaultPrevented)
        return;
      if (!restoreVirtualFocus.current)
        return;
      if (!_events.isFocusEventOutside.call(void 0, event))
        return;
      restoreVirtualFocus.current = false;
      store.setState("virtualFocus", true);
    });
    props = _5WLTMVVQcjs.useWrapElement.call(void 0, 
      props,
      (element) => /* @__PURE__ */ _jsxruntime.jsx.call(void 0, _2WZVSPAIcjs.ComboboxContext.Provider, { value: store, children: element }),
      [store]
    );
    const mounted = store.useState("mounted");
    const hidden = _SZTCN3SGcjs.isHidden.call(void 0, mounted, props.hidden, alwaysVisible);
    const style = hidden ? _72I2GWXFcjs.__spreadProps.call(void 0, _72I2GWXFcjs.__spreadValues.call(void 0, {}, props.style), { display: "none" }) : props.style;
    props = _72I2GWXFcjs.__spreadProps.call(void 0, _72I2GWXFcjs.__spreadValues.call(void 0, {
      id,
      hidden,
      role: "listbox",
      tabIndex: focusable ? -1 : void 0
    }, props), {
      ref: _5WLTMVVQcjs.useMergeRefs.call(void 0, id ? store.setContentElement : null, ref, props.ref),
      style,
      onKeyDown,
      onFocusVisible,
      onBlur
    });
    props = _I4JDDV3Vcjs.useFocusable.call(void 0, _72I2GWXFcjs.__spreadValues.call(void 0, { focusable }, props));
    return props;
  }
);
var ComboboxList = _CWY2PHPRcjs.createComponent.call(void 0, (props) => {
  const htmlProps = useComboboxList(props);
  return _CWY2PHPRcjs.createElement.call(void 0, "div", htmlProps);
});
if (process.env.NODE_ENV !== "production") {
  ComboboxList.displayName = "ComboboxList";
}




exports.useComboboxList = useComboboxList; exports.ComboboxList = ComboboxList;
