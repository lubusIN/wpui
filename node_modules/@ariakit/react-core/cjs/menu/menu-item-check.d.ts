import type { CheckboxCheckOptions } from "../checkbox/checkbox-check.js";
import type { As, Props } from "../utils/types.js";
import type { MenuStore } from "./menu-store.js";
/**
 * Returns props to create a `MenuItemCheck` component.
 * @see https://ariakit.org/components/menu
 * @example
 * ```jsx
 * const props = useMenuItemCheck({ checked: true });
 * <Role {...props} />
 * ```
 */
export declare const useMenuItemCheck: import("../utils/types.js").Hook<MenuItemCheckOptions<"span">>;
/**
 * Renders a checkmark inside a `MenuItemCheckbox` or `MenuItemRadio`
 * components. This component must be wrapped with one of those components or
 * the `checked` prop must be explicitly passed to the component.
 * @see https://ariakit.org/components/menu
 * @example
 * ```jsx
 * const menu = useMenuStore({
 *   defaultValues: { apple: true, orange: false },
 * });
 * <MenuButton store={menu}>Fruits</MenuButton>
 * <Menu store={menu}>
 *   <MenuItemCheckbox name="apple">
 *     <MenuItemCheck />
 *     Apple
 *   </MenuItemCheckbox>
 *   <MenuItemCheckbox name="orange">
 *     <MenuItemCheck />
 *     Orange
 *   </MenuItemCheckbox>
 * </Menu>
 * ```
 */
export declare const MenuItemCheck: import("../utils/types.js").Component<MenuItemCheckOptions<"span">>;
export interface MenuItemCheckOptions<T extends As = "span"> extends Omit<CheckboxCheckOptions<T>, "store"> {
    /**
     * Object returned by the `useMenuStore` hook.
     */
    store?: MenuStore;
}
export type MenuItemCheckProps<T extends As = "span"> = Props<MenuItemCheckOptions<T>>;
