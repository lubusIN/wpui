import { createElement } from "@wordpress/element";
/**
 * WordPress dependencies
 */
import { forwardRef, useContext } from '@wordpress/element';

/**
 * External dependencies
 */

/**
 * Internal dependencies
 */
import ToolbarItem from '../toolbar-item';
import ToolbarContext from '../toolbar-context';
import DropdownMenu from '../../dropdown-menu';
function ToolbarDropdownMenu(props, ref) {
  const accessibleToolbarState = useContext(ToolbarContext);
  if (!accessibleToolbarState) {
    return createElement(DropdownMenu, {
      ...props
    });
  }

  // ToolbarItem will pass all props to the render prop child, which will pass
  // all props to the toggle of DropdownMenu. This means that ToolbarDropdownMenu
  // has the same API as DropdownMenu.
  return createElement(ToolbarItem, {
    ref: ref,
    ...props.toggleProps
  }, toolbarItemProps => createElement(DropdownMenu, {
    ...props,
    popoverProps: {
      ...props.popoverProps
    },
    toggleProps: toolbarItemProps
  }));
}
export default forwardRef(ToolbarDropdownMenu);
//# sourceMappingURL=index.js.map