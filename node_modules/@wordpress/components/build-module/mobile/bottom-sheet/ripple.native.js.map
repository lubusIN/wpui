{"version":3,"names":["Platform","TouchableOpacity","TouchableNativeFeedback","View","withPreferredColorScheme","rippleStyles","ANDROID_VERSION_LOLLIPOP","ANDROID_VERSION_PIE","TouchableRipple","style","onPress","disabled","disabledProp","children","activeOpacity","getStylesFromColorScheme","borderless","touchableProps","isTouchableNativeSupported","OS","Version","rippleColor","ripple","rippleDark","backgroundColor","useForeground","createElement","background","Ripple","overflow"],"sources":["@wordpress/components/src/mobile/bottom-sheet/ripple.native.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport {\n\tPlatform,\n\tTouchableOpacity,\n\tTouchableNativeFeedback,\n\tView,\n} from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { withPreferredColorScheme } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport rippleStyles from './ripple.native.scss';\n\nconst ANDROID_VERSION_LOLLIPOP = 21;\nconst ANDROID_VERSION_PIE = 28;\n\nconst TouchableRipple = ( {\n\tstyle,\n\tonPress,\n\tdisabled: disabledProp,\n\tchildren,\n\tactiveOpacity,\n\tgetStylesFromColorScheme,\n\tborderless = false,\n\t...touchableProps\n} ) => {\n\tconst isTouchableNativeSupported =\n\t\tPlatform.OS === 'android' &&\n\t\tPlatform.Version >= ANDROID_VERSION_LOLLIPOP;\n\n\tconst disabled = disabledProp || ! onPress;\n\tconst rippleColor = getStylesFromColorScheme(\n\t\trippleStyles.ripple,\n\t\trippleStyles.rippleDark\n\t).backgroundColor;\n\n\tif ( isTouchableNativeSupported ) {\n\t\t// A workaround for ripple on Android P is to use useForeground + overflow: 'hidden'\n\t\t// https://github.com/facebook/react-native/issues/6480\n\t\tconst useForeground =\n\t\t\tPlatform.OS === 'android' &&\n\t\t\tPlatform.Version >= ANDROID_VERSION_PIE &&\n\t\t\tborderless;\n\n\t\treturn (\n\t\t\t<TouchableNativeFeedback\n\t\t\t\t{ ...touchableProps }\n\t\t\t\tonPress={ onPress }\n\t\t\t\tdisabled={ disabled }\n\t\t\t\tuseForeground={ useForeground }\n\t\t\t\tbackground={ TouchableNativeFeedback.Ripple(\n\t\t\t\t\trippleColor,\n\t\t\t\t\tborderless\n\t\t\t\t) }\n\t\t\t>\n\t\t\t\t<View style={ [ borderless && rippleStyles.overflow, style ] }>\n\t\t\t\t\t{ children }\n\t\t\t\t</View>\n\t\t\t</TouchableNativeFeedback>\n\t\t);\n\t}\n\n\treturn (\n\t\t<TouchableOpacity\n\t\t\t{ ...touchableProps }\n\t\t\tonPress={ onPress }\n\t\t\tdisabled={ disabled }\n\t\t\tactiveOpacity={ activeOpacity }\n\t\t\tstyle={ style }\n\t\t>\n\t\t\t{ children }\n\t\t</TouchableOpacity>\n\t);\n};\n\nexport default withPreferredColorScheme( TouchableRipple );\n"],"mappings":";AAAA;AACA;AACA;AACA,SACCA,QAAQ,EACRC,gBAAgB,EAChBC,uBAAuB,EACvBC,IAAI,QACE,cAAc;;AAErB;AACA;AACA;AACA,SAASC,wBAAwB,QAAQ,oBAAoB;;AAE7D;AACA;AACA;AACA,OAAOC,YAAY,MAAM,sBAAsB;AAE/C,MAAMC,wBAAwB,GAAG,EAAE;AACnC,MAAMC,mBAAmB,GAAG,EAAE;AAE9B,MAAMC,eAAe,GAAGA,CAAE;EACzBC,KAAK;EACLC,OAAO;EACPC,QAAQ,EAAEC,YAAY;EACtBC,QAAQ;EACRC,aAAa;EACbC,wBAAwB;EACxBC,UAAU,GAAG,KAAK;EAClB,GAAGC;AACJ,CAAC,KAAM;EACN,MAAMC,0BAA0B,GAC/BlB,QAAQ,CAACmB,EAAE,KAAK,SAAS,IACzBnB,QAAQ,CAACoB,OAAO,IAAId,wBAAwB;EAE7C,MAAMK,QAAQ,GAAGC,YAAY,IAAI,CAAEF,OAAO;EAC1C,MAAMW,WAAW,GAAGN,wBAAwB,CAC3CV,YAAY,CAACiB,MAAM,EACnBjB,YAAY,CAACkB,UACd,CAAC,CAACC,eAAe;EAEjB,IAAKN,0BAA0B,EAAG;IACjC;IACA;IACA,MAAMO,aAAa,GAClBzB,QAAQ,CAACmB,EAAE,KAAK,SAAS,IACzBnB,QAAQ,CAACoB,OAAO,IAAIb,mBAAmB,IACvCS,UAAU;IAEX,OACCU,aAAA,CAACxB,uBAAuB;MAAA,GAClBe,cAAc;MACnBP,OAAO,EAAGA,OAAS;MACnBC,QAAQ,EAAGA,QAAU;MACrBc,aAAa,EAAGA,aAAe;MAC/BE,UAAU,EAAGzB,uBAAuB,CAAC0B,MAAM,CAC1CP,WAAW,EACXL,UACD;IAAG,GAEHU,aAAA,CAACvB,IAAI;MAACM,KAAK,EAAG,CAAEO,UAAU,IAAIX,YAAY,CAACwB,QAAQ,EAAEpB,KAAK;IAAI,GAC3DI,QACG,CACkB,CAAC;EAE5B;EAEA,OACCa,aAAA,CAACzB,gBAAgB;IAAA,GACXgB,cAAc;IACnBP,OAAO,EAAGA,OAAS;IACnBC,QAAQ,EAAGA,QAAU;IACrBG,aAAa,EAAGA,aAAe;IAC/BL,KAAK,EAAGA;EAAO,GAEbI,QACe,CAAC;AAErB,CAAC;AAED,eAAeT,wBAAwB,CAAEI,eAAgB,CAAC"}