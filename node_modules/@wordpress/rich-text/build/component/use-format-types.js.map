{"version":3,"names":["_element","require","_data","_store","formatTypesSelector","select","richTextStore","getFormatTypes","interactiveContentTags","Set","useFormatTypes","clientId","identifier","withoutInteractiveFormatting","allowedFormats","allFormatTypes","useSelect","formatTypes","useMemo","filter","name","tagName","includes","has","keyedSelected","reduce","accumulator","type","__experimentalGetPropsForEditableTreePreparation","richTextIdentifier","blockClientId","dispatch","useDispatch","prepareHandlers","valueHandlers","changeHandlers","dependencies","forEach","__experimentalCreatePrepareEditableTree","selected","handler","__experimentalCreateOnChangeEditableValue","push","key","dispatchers","__experimentalGetPropsForEditableTreeChangeHandler"],"sources":["@wordpress/rich-text/src/component/use-format-types.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useMemo } from '@wordpress/element';\nimport { useSelect, useDispatch } from '@wordpress/data';\n/**\n * Internal dependencies\n */\nimport { store as richTextStore } from '../store';\n\nfunction formatTypesSelector( select ) {\n\treturn select( richTextStore ).getFormatTypes();\n}\n\n/**\n * Set of all interactive content tags.\n *\n * @see https://html.spec.whatwg.org/multipage/dom.html#interactive-content\n */\nconst interactiveContentTags = new Set( [\n\t'a',\n\t'audio',\n\t'button',\n\t'details',\n\t'embed',\n\t'iframe',\n\t'input',\n\t'label',\n\t'select',\n\t'textarea',\n\t'video',\n] );\n\n/**\n * This hook provides RichText with the `formatTypes` and its derived props from\n * experimental format type settings.\n *\n * @param {Object}  $0                              Options\n * @param {string}  $0.clientId                     Block client ID.\n * @param {string}  $0.identifier                   Block attribute.\n * @param {boolean} $0.withoutInteractiveFormatting Whether to clean the interactive formattings or not.\n * @param {Array}   $0.allowedFormats               Allowed formats\n */\nexport function useFormatTypes( {\n\tclientId,\n\tidentifier,\n\twithoutInteractiveFormatting,\n\tallowedFormats,\n} ) {\n\tconst allFormatTypes = useSelect( formatTypesSelector, [] );\n\tconst formatTypes = useMemo( () => {\n\t\treturn allFormatTypes.filter( ( { name, tagName } ) => {\n\t\t\tif ( allowedFormats && ! allowedFormats.includes( name ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\twithoutInteractiveFormatting &&\n\t\t\t\tinteractiveContentTags.has( tagName )\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t} );\n\t}, [ allFormatTypes, allowedFormats, interactiveContentTags ] );\n\tconst keyedSelected = useSelect(\n\t\t( select ) =>\n\t\t\tformatTypes.reduce( ( accumulator, type ) => {\n\t\t\t\tif ( type.__experimentalGetPropsForEditableTreePreparation ) {\n\t\t\t\t\taccumulator[ type.name ] =\n\t\t\t\t\t\ttype.__experimentalGetPropsForEditableTreePreparation(\n\t\t\t\t\t\t\tselect,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\trichTextIdentifier: identifier,\n\t\t\t\t\t\t\t\tblockClientId: clientId,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn accumulator;\n\t\t\t}, {} ),\n\t\t[ formatTypes, clientId, identifier ]\n\t);\n\tconst dispatch = useDispatch();\n\tconst prepareHandlers = [];\n\tconst valueHandlers = [];\n\tconst changeHandlers = [];\n\tconst dependencies = [];\n\n\tformatTypes.forEach( ( type ) => {\n\t\tif ( type.__experimentalCreatePrepareEditableTree ) {\n\t\t\tconst selected = keyedSelected[ type.name ];\n\t\t\tconst handler = type.__experimentalCreatePrepareEditableTree(\n\t\t\t\tselected,\n\t\t\t\t{\n\t\t\t\t\trichTextIdentifier: identifier,\n\t\t\t\t\tblockClientId: clientId,\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tif ( type.__experimentalCreateOnChangeEditableValue ) {\n\t\t\t\tvalueHandlers.push( handler );\n\t\t\t} else {\n\t\t\t\tprepareHandlers.push( handler );\n\t\t\t}\n\n\t\t\tfor ( const key in selected ) {\n\t\t\t\tdependencies.push( selected[ key ] );\n\t\t\t}\n\t\t}\n\n\t\tif ( type.__experimentalCreateOnChangeEditableValue ) {\n\t\t\tlet dispatchers = {};\n\n\t\t\tif ( type.__experimentalGetPropsForEditableTreeChangeHandler ) {\n\t\t\t\tdispatchers =\n\t\t\t\t\ttype.__experimentalGetPropsForEditableTreeChangeHandler(\n\t\t\t\t\t\tdispatch,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trichTextIdentifier: identifier,\n\t\t\t\t\t\t\tblockClientId: clientId,\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t}\n\n\t\t\tchangeHandlers.push(\n\t\t\t\ttype.__experimentalCreateOnChangeEditableValue(\n\t\t\t\t\t{\n\t\t\t\t\t\t...( keyedSelected[ type.name ] || {} ),\n\t\t\t\t\t\t...dispatchers,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\trichTextIdentifier: identifier,\n\t\t\t\t\t\tblockClientId: clientId,\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t} );\n\n\treturn {\n\t\tformatTypes,\n\t\tprepareHandlers,\n\t\tvalueHandlers,\n\t\tchangeHandlers,\n\t\tdependencies,\n\t};\n}\n"],"mappings":"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"}