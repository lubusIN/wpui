{"version":3,"names":["_element","require","_reactNative","_reactNativeReanimated","_interopRequireWildcard","_compose","_useTextInputOffset","_interopRequireDefault","_useKeyboardOffset","_useScrollToTextInput","_useTextInputCaretPosition","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","AnimatedScrollView","Animated","createAnimatedComponent","ScrollView","KeyboardAwareFlatList","extraScrollHeight","innerRef","onScroll","scrollEnabled","scrollViewStyle","shouldPreventAutomaticScroll","props","scrollViewRef","useRef","scrollViewMeasurements","scrollViewYOffset","useSharedValue","height","windowHeight","width","windowWidth","useWindowDimensions","isLandscape","keyboardOffset","useKeyboardOffset","currentCaretData","useTextInputCaretPosition","getTextInputOffset","useTextInputOffset","scrollToTextInputOffset","useScrollToTextInput","onScrollToTextInput","useThrottle","useCallback","caret","textInputOffset","hasTextInputOffset","leading","useEffect","current","scrollHandler","useAnimatedScrollHandler","event","contentOffset","value","y","measureScrollView","scrollRef","getNativeScrollRef","measureInWindow","_x","onContentSizeChange","getRef","ref","contentInset","bottom","style","flex","createElement","automaticallyAdjustContentInsets","keyboardShouldPersistTaps","scrollEventThrottle","FlatList","exports","_default"],"sources":["@wordpress/components/src/mobile/keyboard-aware-flat-list/index.ios.js"],"sourcesContent":["/**\n * External dependencies\n */\n\nimport { ScrollView, FlatList, useWindowDimensions } from 'react-native';\nimport Animated, {\n\tuseAnimatedScrollHandler,\n\tuseSharedValue,\n} from 'react-native-reanimated';\n\n/**\n * WordPress dependencies\n */\nimport { useCallback, useEffect, useRef } from '@wordpress/element';\nimport { useThrottle } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport useTextInputOffset from './use-text-input-offset';\nimport useKeyboardOffset from './use-keyboard-offset';\nimport useScrollToTextInput from './use-scroll-to-text-input';\nimport useTextInputCaretPosition from './use-text-input-caret-position';\n\nconst AnimatedScrollView = Animated.createAnimatedComponent( ScrollView );\n\n/**\n * React component that provides a FlatList that is aware of the keyboard state and can scroll\n * to the currently focused TextInput.\n *\n * @param {Object}   props                              Component props.\n * @param {number}   props.extraScrollHeight            Extra scroll height for the content.\n * @param {Function} props.innerRef                     Function to pass the ScrollView ref to the parent component.\n * @param {Function} props.onScroll                     Function to be called when the list is scrolled.\n * @param {boolean}  props.scrollEnabled                Whether the list can be scrolled.\n * @param {Object}   props.scrollViewStyle              Additional style for the ScrollView component.\n * @param {boolean}  props.shouldPreventAutomaticScroll Whether to prevent scrolling when there's a Keyboard offset set.\n * @param {Object}   props...                           Other props to pass to the FlatList component.\n * @return {WPComponent} KeyboardAwareFlatList component.\n */\nexport const KeyboardAwareFlatList = ( {\n\textraScrollHeight,\n\tinnerRef,\n\tonScroll,\n\tscrollEnabled,\n\tscrollViewStyle,\n\tshouldPreventAutomaticScroll,\n\t...props\n} ) => {\n\tconst scrollViewRef = useRef();\n\tconst scrollViewMeasurements = useRef();\n\tconst scrollViewYOffset = useSharedValue( -1 );\n\n\tconst { height: windowHeight, width: windowWidth } = useWindowDimensions();\n\tconst isLandscape = windowWidth >= windowHeight;\n\n\tconst [ keyboardOffset ] = useKeyboardOffset(\n\t\tscrollEnabled,\n\t\tshouldPreventAutomaticScroll\n\t);\n\n\tconst [ currentCaretData ] = useTextInputCaretPosition( scrollEnabled );\n\n\tconst [ getTextInputOffset ] = useTextInputOffset(\n\t\tscrollEnabled,\n\t\tscrollViewRef\n\t);\n\n\tconst [ scrollToTextInputOffset ] = useScrollToTextInput(\n\t\textraScrollHeight,\n\t\tkeyboardOffset,\n\t\tscrollEnabled,\n\t\tscrollViewMeasurements,\n\t\tscrollViewRef,\n\t\tscrollViewYOffset\n\t);\n\n\tconst onScrollToTextInput = useThrottle(\n\t\tuseCallback(\n\t\t\tasync ( caret ) => {\n\t\t\t\tconst textInputOffset = await getTextInputOffset( caret );\n\t\t\t\tconst hasTextInputOffset = textInputOffset !== null;\n\n\t\t\t\tif ( hasTextInputOffset ) {\n\t\t\t\t\tscrollToTextInputOffset( caret, textInputOffset );\n\t\t\t\t}\n\t\t\t},\n\t\t\t[ getTextInputOffset, scrollToTextInputOffset ]\n\t\t),\n\t\t200,\n\t\t{ leading: false }\n\t);\n\n\tuseEffect( () => {\n\t\tonScrollToTextInput( currentCaretData );\n\t}, [ currentCaretData, onScrollToTextInput ] );\n\n\t// When the orientation changes, the ScrollView measurements\n\t// need to be re-calculated.\n\tuseEffect( () => {\n\t\tscrollViewMeasurements.current = null;\n\t}, [ isLandscape ] );\n\n\tconst scrollHandler = useAnimatedScrollHandler( {\n\t\tonScroll: ( event ) => {\n\t\t\tconst { contentOffset } = event;\n\t\t\tscrollViewYOffset.value = contentOffset.y;\n\t\t\tonScroll( event );\n\t\t},\n\t} );\n\n\tconst measureScrollView = useCallback( () => {\n\t\tif ( scrollViewRef.current ) {\n\t\t\tconst scrollRef = scrollViewRef.current.getNativeScrollRef();\n\n\t\t\tscrollRef.measureInWindow( ( _x, y, width, height ) => {\n\t\t\t\tscrollViewMeasurements.current = { y, width, height };\n\t\t\t} );\n\t\t}\n\t}, [] );\n\n\tconst onContentSizeChange = useCallback( () => {\n\t\tonScrollToTextInput( currentCaretData );\n\n\t\t// Sets the first values when the content size changes.\n\t\tif ( ! scrollViewMeasurements.current ) {\n\t\t\tmeasureScrollView();\n\t\t}\n\t}, [ measureScrollView, onScrollToTextInput, currentCaretData ] );\n\n\tconst getRef = useCallback(\n\t\t( ref ) => {\n\t\t\tscrollViewRef.current = ref;\n\t\t\tinnerRef( ref );\n\t\t},\n\t\t[ innerRef ]\n\t);\n\n\t// Adds content insets when the keyboard is opened to have\n\t// extra padding at the bottom.\n\tconst contentInset = { bottom: keyboardOffset };\n\n\tconst style = [ { flex: 1 }, scrollViewStyle ];\n\n\treturn (\n\t\t<AnimatedScrollView\n\t\t\tautomaticallyAdjustContentInsets={ false }\n\t\t\tcontentInset={ contentInset }\n\t\t\tkeyboardShouldPersistTaps=\"handled\"\n\t\t\tonContentSizeChange={ onContentSizeChange }\n\t\t\tonScroll={ scrollHandler }\n\t\t\tref={ getRef }\n\t\t\tscrollEnabled={ scrollEnabled }\n\t\t\tscrollEventThrottle={ 16 }\n\t\t\tstyle={ style }\n\t\t>\n\t\t\t<FlatList { ...props } scrollEnabled={ false } />\n\t\t</AnimatedScrollView>\n\t);\n};\n\nexport default KeyboardAwareFlatList;\n"],"mappings":"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"}