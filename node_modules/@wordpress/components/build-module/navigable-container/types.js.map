{"version":3,"names":[],"sources":["@wordpress/components/src/navigable-container/types.ts"],"sourcesContent":["/**\n * External dependencies\n */\nimport type { ForwardedRef, ReactNode } from 'react';\n\n/**\n * Internal dependencies\n */\nimport type { WordPressComponentProps } from '../ui/context';\n\ntype BaseProps = {\n\t/**\n\t * The component children.\n\t */\n\tchildren?: ReactNode;\n\t/**\n\t * A boolean which tells the component whether or not to cycle from the end back to the beginning and vice versa.\n\t *\n\t * @default true\n\t */\n\tcycle?: boolean;\n\t/**\n\t * A callback invoked on the keydown event.\n\t */\n\tonKeyDown?: ( event: KeyboardEvent ) => void;\n\t/**\n\t * A callback invoked when the menu navigates to one of its children passing the index and child as an argument\n\t */\n\tonNavigate?: ( index: number, focusable: HTMLElement ) => void;\n};\n\nexport type NavigableContainerProps = WordPressComponentProps<\n\tBaseProps & {\n\t\t/**\n\t\t * Gets an offset, given an event.\n\t\t */\n\t\teventToOffset: ( event: KeyboardEvent ) => -1 | 0 | 1 | undefined;\n\t\t/**\n\t\t * The forwarded ref.\n\t\t */\n\t\tforwardedRef?: ForwardedRef< any >;\n\t\t/**\n\t\t * Whether to only consider browser tab stops.\n\t\t *\n\t\t * @default false\n\t\t */\n\t\tonlyBrowserTabstops: boolean;\n\t\t/**\n\t\t * Whether to stop navigation events.\n\t\t *\n\t\t * @default false\n\t\t */\n\t\tstopNavigationEvents: boolean;\n\t},\n\t'div',\n\tfalse\n>;\n\nexport type NavigableMenuProps = WordPressComponentProps<\n\tBaseProps & {\n\t\t/**\n\t\t * The orientation of the menu.\n\t\t *\n\t\t * @default 'vertical'\n\t\t */\n\t\torientation?: 'vertical' | 'horizontal' | 'both';\n\t},\n\t'div',\n\tfalse\n>;\n\nexport type TabbableContainerProps = WordPressComponentProps<\n\tBaseProps & Partial< Pick< NavigableContainerProps, 'eventToOffset' > >,\n\t'div',\n\tfalse\n>;\n"],"mappings":""}