{"version":3,"names":["_unitControl","_interopRequireDefault","require","_utils","_utils2","_boxControlStyles","noop","BoxInputControls","onChange","onFocus","onHoverOn","onHoverOff","values","selectedUnits","setSelectedUnits","sides","props","createHandleOnFocus","side","event","createHandleOnHoverOn","createHandleOnHoverOff","handleOnChange","nextValues","createHandleOnChange","next","isNumeric","undefined","isNaN","parseFloat","nextValue","altKey","bottom","top","right","left","createHandleOnUnitChange","newUnits","filteredSides","length","ALL_SIDES","filter","includes","first","last","only","_element","createElement","LayoutContainer","className","Layout","gap","align","map","parsedQuantity","parsedUnit","parseQuantityAndUnitFromRawValue","computedUnit","default","isFirst","isLast","isOnly","value","join","onUnitChange","label","LABELS","key"],"sources":["@wordpress/components/src/box-control/input-controls.tsx"],"sourcesContent":["/**\n * Internal dependencies\n */\nimport UnitControl from './unit-control';\nimport { parseQuantityAndUnitFromRawValue } from '../unit-control/utils';\nimport { ALL_SIDES, LABELS } from './utils';\nimport { LayoutContainer, Layout } from './styles/box-control-styles';\nimport type { BoxControlInputControlProps, BoxControlValue } from './types';\nimport type { UnitControlProps } from '../unit-control/types';\n\nconst noop = () => {};\n\nexport default function BoxInputControls( {\n\tonChange = noop,\n\tonFocus = noop,\n\tonHoverOn = noop,\n\tonHoverOff = noop,\n\tvalues,\n\tselectedUnits,\n\tsetSelectedUnits,\n\tsides,\n\t...props\n}: BoxControlInputControlProps ) {\n\tconst createHandleOnFocus =\n\t\t( side: keyof BoxControlValue ) =>\n\t\t( event: React.FocusEvent< HTMLInputElement > ) => {\n\t\t\tonFocus( event, { side } );\n\t\t};\n\n\tconst createHandleOnHoverOn = ( side: keyof BoxControlValue ) => () => {\n\t\tonHoverOn( { [ side ]: true } );\n\t};\n\n\tconst createHandleOnHoverOff = ( side: keyof BoxControlValue ) => () => {\n\t\tonHoverOff( { [ side ]: false } );\n\t};\n\n\tconst handleOnChange = ( nextValues: BoxControlValue ) => {\n\t\tonChange( nextValues );\n\t};\n\n\tconst createHandleOnChange: (\n\t\tside: keyof BoxControlValue\n\t) => UnitControlProps[ 'onChange' ] =\n\t\t( side ) =>\n\t\t( next, { event } ) => {\n\t\t\tconst nextValues = { ...values };\n\t\t\tconst isNumeric =\n\t\t\t\tnext !== undefined && ! isNaN( parseFloat( next ) );\n\t\t\tconst nextValue = isNumeric ? next : undefined;\n\n\t\t\tnextValues[ side ] = nextValue;\n\n\t\t\t/**\n\t\t\t * Supports changing pair sides. For example, holding the ALT key\n\t\t\t * when changing the TOP will also update BOTTOM.\n\t\t\t */\n\t\t\t// @ts-expect-error - TODO: event.altKey is only present when the change event was\n\t\t\t// triggered by a keyboard event. Should this feature be implemented differently so\n\t\t\t// it also works with drag events?\n\t\t\tif ( event.altKey ) {\n\t\t\t\tswitch ( side ) {\n\t\t\t\t\tcase 'top':\n\t\t\t\t\t\tnextValues.bottom = nextValue;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'bottom':\n\t\t\t\t\t\tnextValues.top = nextValue;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'left':\n\t\t\t\t\t\tnextValues.right = nextValue;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'right':\n\t\t\t\t\t\tnextValues.left = nextValue;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thandleOnChange( nextValues );\n\t\t};\n\n\tconst createHandleOnUnitChange =\n\t\t( side: keyof BoxControlValue ) => ( next?: string ) => {\n\t\t\tconst newUnits = { ...selectedUnits };\n\t\t\tnewUnits[ side ] = next;\n\t\t\tsetSelectedUnits( newUnits );\n\t\t};\n\n\t// Filter sides if custom configuration provided, maintaining default order.\n\tconst filteredSides = sides?.length\n\t\t? ALL_SIDES.filter( ( side ) => sides.includes( side ) )\n\t\t: ALL_SIDES;\n\n\tconst first = filteredSides[ 0 ];\n\tconst last = filteredSides[ filteredSides.length - 1 ];\n\tconst only = first === last && first;\n\n\treturn (\n\t\t<LayoutContainer className=\"component-box-control__input-controls-wrapper\">\n\t\t\t<Layout\n\t\t\t\tgap={ 0 }\n\t\t\t\talign=\"top\"\n\t\t\t\tclassName=\"component-box-control__input-controls\"\n\t\t\t>\n\t\t\t\t{ filteredSides.map( ( side ) => {\n\t\t\t\t\tconst [ parsedQuantity, parsedUnit ] =\n\t\t\t\t\t\tparseQuantityAndUnitFromRawValue( values[ side ] );\n\n\t\t\t\t\tconst computedUnit = values[ side ]\n\t\t\t\t\t\t? parsedUnit\n\t\t\t\t\t\t: selectedUnits[ side ];\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<UnitControl\n\t\t\t\t\t\t\t{ ...props }\n\t\t\t\t\t\t\tisFirst={ first === side }\n\t\t\t\t\t\t\tisLast={ last === side }\n\t\t\t\t\t\t\tisOnly={ only === side }\n\t\t\t\t\t\t\tvalue={ [ parsedQuantity, computedUnit ].join(\n\t\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\tonChange={ createHandleOnChange( side ) }\n\t\t\t\t\t\t\tonUnitChange={ createHandleOnUnitChange( side ) }\n\t\t\t\t\t\t\tonFocus={ createHandleOnFocus( side ) }\n\t\t\t\t\t\t\tonHoverOn={ createHandleOnHoverOn( side ) }\n\t\t\t\t\t\t\tonHoverOff={ createHandleOnHoverOff( side ) }\n\t\t\t\t\t\t\tlabel={ LABELS[ side ] }\n\t\t\t\t\t\t\tkey={ `box-control-${ side }` }\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t} ) }\n\t\t\t</Layout>\n\t\t</LayoutContainer>\n\t);\n}\n"],"mappings":";;;;;;;;AAGA,IAAAA,YAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,MAAA,GAAAD,OAAA;AACA,IAAAE,OAAA,GAAAF,OAAA;AACA,IAAAG,iBAAA,GAAAH,OAAA;AANA;AACA;AACA;;AAQA,MAAMI,IAAI,GAAGA,CAAA,KAAM,CAAC,CAAC;AAEN,SAASC,gBAAgBA,CAAE;EACzCC,QAAQ,GAAGF,IAAI;EACfG,OAAO,GAAGH,IAAI;EACdI,SAAS,GAAGJ,IAAI;EAChBK,UAAU,GAAGL,IAAI;EACjBM,MAAM;EACNC,aAAa;EACbC,gBAAgB;EAChBC,KAAK;EACL,GAAGC;AACyB,CAAC,EAAG;EAChC,MAAMC,mBAAmB,GACtBC,IAA2B,IAC3BC,KAA2C,IAAM;IAClDV,OAAO,CAAEU,KAAK,EAAE;MAAED;IAAK,CAAE,CAAC;EAC3B,CAAC;EAEF,MAAME,qBAAqB,GAAKF,IAA2B,IAAM,MAAM;IACtER,SAAS,CAAE;MAAE,CAAEQ,IAAI,GAAI;IAAK,CAAE,CAAC;EAChC,CAAC;EAED,MAAMG,sBAAsB,GAAKH,IAA2B,IAAM,MAAM;IACvEP,UAAU,CAAE;MAAE,CAAEO,IAAI,GAAI;IAAM,CAAE,CAAC;EAClC,CAAC;EAED,MAAMI,cAAc,GAAKC,UAA2B,IAAM;IACzDf,QAAQ,CAAEe,UAAW,CAAC;EACvB,CAAC;EAED,MAAMC,oBAE6B,GAChCN,IAAI,IACN,CAAEO,IAAI,EAAE;IAAEN;EAAM,CAAC,KAAM;IACtB,MAAMI,UAAU,GAAG;MAAE,GAAGX;IAAO,CAAC;IAChC,MAAMc,SAAS,GACdD,IAAI,KAAKE,SAAS,IAAI,CAAEC,KAAK,CAAEC,UAAU,CAAEJ,IAAK,CAAE,CAAC;IACpD,MAAMK,SAAS,GAAGJ,SAAS,GAAGD,IAAI,GAAGE,SAAS;IAE9CJ,UAAU,CAAEL,IAAI,CAAE,GAAGY,SAAS;;IAE9B;AACH;AACA;AACA;IACG;IACA;IACA;IACA,IAAKX,KAAK,CAACY,MAAM,EAAG;MACnB,QAASb,IAAI;QACZ,KAAK,KAAK;UACTK,UAAU,CAACS,MAAM,GAAGF,SAAS;UAC7B;QACD,KAAK,QAAQ;UACZP,UAAU,CAACU,GAAG,GAAGH,SAAS;UAC1B;QACD,KAAK,MAAM;UACVP,UAAU,CAACW,KAAK,GAAGJ,SAAS;UAC5B;QACD,KAAK,OAAO;UACXP,UAAU,CAACY,IAAI,GAAGL,SAAS;UAC3B;MACF;IACD;IAEAR,cAAc,CAAEC,UAAW,CAAC;EAC7B,CAAC;EAEF,MAAMa,wBAAwB,GAC3BlB,IAA2B,IAAQO,IAAa,IAAM;IACvD,MAAMY,QAAQ,GAAG;MAAE,GAAGxB;IAAc,CAAC;IACrCwB,QAAQ,CAAEnB,IAAI,CAAE,GAAGO,IAAI;IACvBX,gBAAgB,CAAEuB,QAAS,CAAC;EAC7B,CAAC;;EAEF;EACA,MAAMC,aAAa,GAAGvB,KAAK,EAAEwB,MAAM,GAChCC,iBAAS,CAACC,MAAM,CAAIvB,IAAI,IAAMH,KAAK,CAAC2B,QAAQ,CAAExB,IAAK,CAAE,CAAC,GACtDsB,iBAAS;EAEZ,MAAMG,KAAK,GAAGL,aAAa,CAAE,CAAC,CAAE;EAChC,MAAMM,IAAI,GAAGN,aAAa,CAAEA,aAAa,CAACC,MAAM,GAAG,CAAC,CAAE;EACtD,MAAMM,IAAI,GAAGF,KAAK,KAAKC,IAAI,IAAID,KAAK;EAEpC,OACC,IAAAG,QAAA,CAAAC,aAAA,EAAC1C,iBAAA,CAAA2C,eAAe;IAACC,SAAS,EAAC;EAA+C,GACzE,IAAAH,QAAA,CAAAC,aAAA,EAAC1C,iBAAA,CAAA6C,MAAM;IACNC,GAAG,EAAG,CAAG;IACTC,KAAK,EAAC,KAAK;IACXH,SAAS,EAAC;EAAuC,GAE/CX,aAAa,CAACe,GAAG,CAAInC,IAAI,IAAM;IAChC,MAAM,CAAEoC,cAAc,EAAEC,UAAU,CAAE,GACnC,IAAAC,uCAAgC,EAAE5C,MAAM,CAAEM,IAAI,CAAG,CAAC;IAEnD,MAAMuC,YAAY,GAAG7C,MAAM,CAAEM,IAAI,CAAE,GAChCqC,UAAU,GACV1C,aAAa,CAAEK,IAAI,CAAE;IAExB,OACC,IAAA4B,QAAA,CAAAC,aAAA,EAAC/C,YAAA,CAAA0D,OAAW;MAAA,GACN1C,KAAK;MACV2C,OAAO,EAAGhB,KAAK,KAAKzB,IAAM;MAC1B0C,MAAM,EAAGhB,IAAI,KAAK1B,IAAM;MACxB2C,MAAM,EAAGhB,IAAI,KAAK3B,IAAM;MACxB4C,KAAK,EAAG,CAAER,cAAc,EAAEG,YAAY,CAAE,CAACM,IAAI,CAC5C,EACD,CAAG;MACHvD,QAAQ,EAAGgB,oBAAoB,CAAEN,IAAK,CAAG;MACzC8C,YAAY,EAAG5B,wBAAwB,CAAElB,IAAK,CAAG;MACjDT,OAAO,EAAGQ,mBAAmB,CAAEC,IAAK,CAAG;MACvCR,SAAS,EAAGU,qBAAqB,CAAEF,IAAK,CAAG;MAC3CP,UAAU,EAAGU,sBAAsB,CAAEH,IAAK,CAAG;MAC7C+C,KAAK,EAAGC,cAAM,CAAEhD,IAAI,CAAI;MACxBiD,GAAG,EAAI,eAAejD,IAAM;IAAG,CAC/B,CAAC;EAEJ,CAAE,CACK,CACQ,CAAC;AAEpB"}