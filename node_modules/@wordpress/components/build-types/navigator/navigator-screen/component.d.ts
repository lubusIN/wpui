/// <reference types="react" />
import type { MotionProps } from 'framer-motion';
/**
 * Internal dependencies
 */
import type { WordPressComponentProps } from '../../ui/context';
import type { NavigatorScreenProps } from '../types';
type Props = Omit<WordPressComponentProps<NavigatorScreenProps, 'div', false>, Exclude<keyof MotionProps, 'style' | 'children'>>;
/**
 * The `NavigatorScreen` component represents a single view/screen/panel and
 * should be used in combination with the `NavigatorProvider`, the
 * `NavigatorButton` and the `NavigatorBackButton` components (or the `useNavigator`
 * hook).
 *
 * @example
 * ```jsx
 * import {
 *   __experimentalNavigatorProvider as NavigatorProvider,
 *   __experimentalNavigatorScreen as NavigatorScreen,
 *   __experimentalNavigatorButton as NavigatorButton,
 *   __experimentalNavigatorBackButton as NavigatorBackButton,
 * } from '@wordpress/components';
 *
 * const MyNavigation = () => (
 *   <NavigatorProvider initialPath="/">
 *     <NavigatorScreen path="/">
 *       <p>This is the home screen.</p>
 *        <NavigatorButton path="/child">
 *          Navigate to child screen.
 *       </NavigatorButton>
 *     </NavigatorScreen>
 *
 *     <NavigatorScreen path="/child">
 *       <p>This is the child screen.</p>
 *       <NavigatorBackButton>
 *         Go back
 *       </NavigatorBackButton>
 *     </NavigatorScreen>
 *   </NavigatorProvider>
 * );
 * ```
 */
export declare const NavigatorScreen: import("../../ui/context").WordPressComponent<import("react").ElementType<any>, Props & import("react").RefAttributes<any>, boolean>;
export default NavigatorScreen;
//# sourceMappingURL=component.d.ts.map