import {
  HeadingContext
} from "./COQHFAEN.js";
import {
  createComponent,
  createElement,
  createHook
} from "./NQJBHION.js";
import {
  useMergeRefs,
  useTagName
} from "./J7Q2EO23.js";
import {
  __spreadProps,
  __spreadValues
} from "./PNRLI7OV.js";

// src/heading/heading.ts
import { useContext, useMemo, useRef } from "react";
var useHeading = createHook((props) => {
  const ref = useRef(null);
  const level = useContext(HeadingContext) || 1;
  const as = `h${level}`;
  const tagName = useTagName(ref, props.as || as);
  const isNativeHeading = useMemo(
    () => !!tagName && /^h\d$/.test(tagName),
    [tagName]
  );
  props = __spreadProps(__spreadValues({
    as,
    role: !isNativeHeading ? "heading" : void 0,
    "aria-level": !isNativeHeading ? level : void 0
  }, props), {
    ref: useMergeRefs(ref, props.ref)
  });
  return props;
});
var Heading = createComponent((props) => {
  const htmlProps = useHeading(props);
  return createElement("h1", htmlProps);
});
if (process.env.NODE_ENV !== "production") {
  Heading.displayName = "Heading";
}

export {
  useHeading,
  Heading
};
