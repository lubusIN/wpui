{"version":3,"names":["memoize","colord","extend","namesPlugin","colorComputationNode","getColorComputationNode","document","el","createElement","setAttribute","body","appendChild","isColor","value","test","isValid","_getComputedBackgroundColor","backgroundColor","includes","style","background","computedColor","window","getComputedStyle","getComputedBackgroundColor","getOptimalTextColor","isLight","getOptimalTextShade","result"],"sources":["@wordpress/components/src/ui/utils/colors.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport memoize from 'memize';\nimport { colord, extend } from 'colord';\nimport namesPlugin from 'colord/plugins/names';\n\n/** @type {HTMLDivElement} */\nlet colorComputationNode;\n\nextend( [ namesPlugin ] );\n\n/**\n * @return {HTMLDivElement | undefined} The HTML element for color computation.\n */\nfunction getColorComputationNode() {\n\tif ( typeof document === 'undefined' ) return;\n\n\tif ( ! colorComputationNode ) {\n\t\t// Create a temporary element for style computation.\n\t\tconst el = document.createElement( 'div' );\n\t\tel.setAttribute( 'data-g2-color-computation-node', '' );\n\t\t// Inject for window computed style.\n\t\tdocument.body.appendChild( el );\n\t\tcolorComputationNode = el;\n\t}\n\n\treturn colorComputationNode;\n}\n\n/**\n * @param {string | unknown} value\n *\n * @return {boolean} Whether the value is a valid color.\n */\nfunction isColor( value ) {\n\tif ( typeof value !== 'string' ) return false;\n\tconst test = colord( value );\n\n\treturn test.isValid();\n}\n\n/**\n * Retrieves the computed background color. This is useful for getting the\n * value of a CSS variable color.\n *\n * @param {string | unknown} backgroundColor The background color to compute.\n *\n * @return {string} The computed background color.\n */\nfunction _getComputedBackgroundColor( backgroundColor ) {\n\tif ( typeof backgroundColor !== 'string' ) return '';\n\n\tif ( isColor( backgroundColor ) ) return backgroundColor;\n\n\tif ( ! backgroundColor.includes( 'var(' ) ) return '';\n\tif ( typeof document === 'undefined' ) return '';\n\n\t// Attempts to gracefully handle CSS variables color values.\n\tconst el = getColorComputationNode();\n\tif ( ! el ) return '';\n\n\tel.style.background = backgroundColor;\n\t// Grab the style.\n\tconst computedColor = window?.getComputedStyle( el ).background;\n\t// Reset.\n\tel.style.background = '';\n\n\treturn computedColor || '';\n}\n\nconst getComputedBackgroundColor = memoize( _getComputedBackgroundColor );\n\n/**\n * Get the text shade optimized for readability, based on a background color.\n *\n * @param {string | unknown} backgroundColor The background color.\n *\n * @return {string} The optimized text color (black or white).\n */\nexport function getOptimalTextColor( backgroundColor ) {\n\tconst background = getComputedBackgroundColor( backgroundColor );\n\n\treturn colord( background ).isLight() ? '#000000' : '#ffffff';\n}\n\n/**\n * Get the text shade optimized for readability, based on a background color.\n *\n * @param {string | unknown} backgroundColor The background color.\n *\n * @return {string} The optimized text shade (dark or light).\n */\nexport function getOptimalTextShade( backgroundColor ) {\n\tconst result = getOptimalTextColor( backgroundColor );\n\n\treturn result === '#000000' ? 'dark' : 'light';\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,OAAO,MAAM,QAAQ;AAC5B,SAASC,MAAM,EAAEC,MAAM,QAAQ,QAAQ;AACvC,OAAOC,WAAW,MAAM,sBAAsB;;AAE9C;AACA,IAAIC,oBAAoB;AAExBF,MAAM,CAAE,CAAEC,WAAW,CAAG,CAAC;;AAEzB;AACA;AACA;AACA,SAASE,uBAAuBA,CAAA,EAAG;EAClC,IAAK,OAAOC,QAAQ,KAAK,WAAW,EAAG;EAEvC,IAAK,CAAEF,oBAAoB,EAAG;IAC7B;IACA,MAAMG,EAAE,GAAGD,QAAQ,CAACE,aAAa,CAAE,KAAM,CAAC;IAC1CD,EAAE,CAACE,YAAY,CAAE,gCAAgC,EAAE,EAAG,CAAC;IACvD;IACAH,QAAQ,CAACI,IAAI,CAACC,WAAW,CAAEJ,EAAG,CAAC;IAC/BH,oBAAoB,GAAGG,EAAE;EAC1B;EAEA,OAAOH,oBAAoB;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASQ,OAAOA,CAAEC,KAAK,EAAG;EACzB,IAAK,OAAOA,KAAK,KAAK,QAAQ,EAAG,OAAO,KAAK;EAC7C,MAAMC,IAAI,GAAGb,MAAM,CAAEY,KAAM,CAAC;EAE5B,OAAOC,IAAI,CAACC,OAAO,CAAC,CAAC;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,2BAA2BA,CAAEC,eAAe,EAAG;EACvD,IAAK,OAAOA,eAAe,KAAK,QAAQ,EAAG,OAAO,EAAE;EAEpD,IAAKL,OAAO,CAAEK,eAAgB,CAAC,EAAG,OAAOA,eAAe;EAExD,IAAK,CAAEA,eAAe,CAACC,QAAQ,CAAE,MAAO,CAAC,EAAG,OAAO,EAAE;EACrD,IAAK,OAAOZ,QAAQ,KAAK,WAAW,EAAG,OAAO,EAAE;;EAEhD;EACA,MAAMC,EAAE,GAAGF,uBAAuB,CAAC,CAAC;EACpC,IAAK,CAAEE,EAAE,EAAG,OAAO,EAAE;EAErBA,EAAE,CAACY,KAAK,CAACC,UAAU,GAAGH,eAAe;EACrC;EACA,MAAMI,aAAa,GAAGC,MAAM,EAAEC,gBAAgB,CAAEhB,EAAG,CAAC,CAACa,UAAU;EAC/D;EACAb,EAAE,CAACY,KAAK,CAACC,UAAU,GAAG,EAAE;EAExB,OAAOC,aAAa,IAAI,EAAE;AAC3B;AAEA,MAAMG,0BAA0B,GAAGxB,OAAO,CAAEgB,2BAA4B,CAAC;;AAEzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASS,mBAAmBA,CAAER,eAAe,EAAG;EACtD,MAAMG,UAAU,GAAGI,0BAA0B,CAAEP,eAAgB,CAAC;EAEhE,OAAOhB,MAAM,CAAEmB,UAAW,CAAC,CAACM,OAAO,CAAC,CAAC,GAAG,SAAS,GAAG,SAAS;AAC9D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,mBAAmBA,CAAEV,eAAe,EAAG;EACtD,MAAMW,MAAM,GAAGH,mBAAmB,CAAER,eAAgB,CAAC;EAErD,OAAOW,MAAM,KAAK,SAAS,GAAG,MAAM,GAAG,OAAO;AAC/C"}