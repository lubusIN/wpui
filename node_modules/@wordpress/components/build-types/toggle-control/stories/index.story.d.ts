/// <reference types="react" />
/**
 * External dependencies
 */
import type { Meta } from '@storybook/react';
/**
 * Internal dependencies
 */
import ToggleControl from '..';
declare const meta: Meta<typeof ToggleControl>;
export default meta;
export declare const Default: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0a347bb9").R, Pick<import("../../form-toggle/types").FormToggleProps, "disabled" | "checked"> & Pick<import("../../base-control/types").BaseControlProps, "className" | "__nextHasNoMarginBottom"> & {
    help?: import("react").ReactNode | ((checked: boolean) => import("react").ReactNode);
    label: import("react").ReactNode;
    onChange: (value: boolean) => void;
} & Omit<Pick<import("react").DetailedHTMLProps<import("react").InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>, "key" | keyof import("react").InputHTMLAttributes<HTMLInputElement>>, "className" | "children" | "label" | "help" | "onChange" | "as" | "disabled" | "checked" | "__nextHasNoMarginBottom">>;
export declare const WithHelpText: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0a347bb9").R, Pick<import("../../form-toggle/types").FormToggleProps, "disabled" | "checked"> & Pick<import("../../base-control/types").BaseControlProps, "className" | "__nextHasNoMarginBottom"> & {
    help?: import("react").ReactNode | ((checked: boolean) => import("react").ReactNode);
    label: import("react").ReactNode;
    onChange: (value: boolean) => void;
} & Omit<Pick<import("react").DetailedHTMLProps<import("react").InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>, "key" | keyof import("react").InputHTMLAttributes<HTMLInputElement>>, "className" | "children" | "label" | "help" | "onChange" | "as" | "disabled" | "checked" | "__nextHasNoMarginBottom">>;
//# sourceMappingURL=index.story.d.ts.map