"use strict";Object.defineProperty(exports, "__esModule", {value: true});

var _RXCUKHX3cjs = require('../__chunks/RXCUKHX3.cjs');
require('../__chunks/QR3ATHWU.cjs');




var _CWY2PHPRcjs = require('../__chunks/CWY2PHPR.cjs');



var _5WLTMVVQcjs = require('../__chunks/5WLTMVVQ.cjs');
require('../__chunks/7WUTS26Y.cjs');




var _72I2GWXFcjs = require('../__chunks/72I2GWXF.cjs');

// src/focus-trap/focus-trap-region.tsx
var _react = require('react');
var _focus = require('@ariakit/core/utils/focus');
var _jsxruntime = require('react/jsx-runtime');
var useFocusTrapRegion = _CWY2PHPRcjs.createHook.call(void 0, 
  (_a) => {
    var _b = _a, { enabled = false } = _b, props = _72I2GWXFcjs.__objRest.call(void 0, _b, ["enabled"]);
    const ref = _react.useRef.call(void 0, null);
    props = _5WLTMVVQcjs.useWrapElement.call(void 0, 
      props,
      (element) => {
        const renderFocusTrap = () => {
          if (!enabled)
            return null;
          return /* @__PURE__ */ _jsxruntime.jsx.call(void 0, 
            _RXCUKHX3cjs.FocusTrap,
            {
              onFocus: (event) => {
                const container = ref.current;
                if (!container)
                  return;
                const tabbables = _focus.getAllTabbableIn.call(void 0, container, true);
                const first = tabbables[0];
                const last = tabbables[tabbables.length - 1];
                if (!tabbables.length) {
                  container.focus();
                  return;
                }
                if (event.relatedTarget === first) {
                  last == null ? void 0 : last.focus();
                } else {
                  first == null ? void 0 : first.focus();
                }
              }
            }
          );
        };
        return /* @__PURE__ */ _jsxruntime.jsxs.call(void 0, _jsxruntime.Fragment, { children: [
          renderFocusTrap(),
          element,
          renderFocusTrap()
        ] });
      },
      [enabled]
    );
    props = _72I2GWXFcjs.__spreadProps.call(void 0, _72I2GWXFcjs.__spreadValues.call(void 0, {}, props), {
      ref: _5WLTMVVQcjs.useMergeRefs.call(void 0, ref, props.ref)
    });
    return props;
  }
);
var FocusTrapRegion = _CWY2PHPRcjs.createComponent.call(void 0, 
  (props) => {
    const htmlProps = useFocusTrapRegion(props);
    return _CWY2PHPRcjs.createElement.call(void 0, "div", htmlProps);
  }
);
if (process.env.NODE_ENV !== "production") {
  FocusTrapRegion.displayName = "FocusTrapRegion";
}



exports.FocusTrapRegion = FocusTrapRegion; exports.useFocusTrapRegion = useFocusTrapRegion;
