/// <reference types="react" />
export declare const ToolsPanel: (columns: number) => import("@emotion/utils").SerializedStyles;
/**
 * Items injected into a ToolsPanel via a virtual bubbling slot will require
 * an inner dom element to be injected. The following rule allows for the
 * CSS grid display to be re-established.
 */
export declare const ToolsPanelWithInnerWrapper: (columns: number) => import("@emotion/utils").SerializedStyles;
export declare const ToolsPanelHiddenInnerWrapper: import("@emotion/utils").SerializedStyles;
export declare const ToolsPanelHeader: import("@emotion/utils").SerializedStyles;
export declare const ToolsPanelHeading: import("@emotion/utils").SerializedStyles;
export declare const ToolsPanelItem: import("@emotion/utils").SerializedStyles;
export declare const ToolsPanelItemPlaceholder: import("@emotion/utils").SerializedStyles;
export declare const DropdownMenu: import("@emotion/utils").SerializedStyles;
export declare const ResetLabel: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme | undefined;
    as?: import("react").ElementType<any> | undefined;
}, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>, {}>;
export declare const DefaultControlsItem: import("@emotion/utils").SerializedStyles;
//# sourceMappingURL=styles.d.ts.map