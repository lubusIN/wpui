"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _element = require("@wordpress/element");
var _toolbarItem = _interopRequireDefault(require("../toolbar-item"));
var _toolbarContext = _interopRequireDefault(require("../toolbar-context"));
var _dropdownMenu = _interopRequireDefault(require("../../dropdown-menu"));
/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

function ToolbarDropdownMenu(props, ref) {
  const accessibleToolbarState = (0, _element.useContext)(_toolbarContext.default);
  if (!accessibleToolbarState) {
    return (0, _element.createElement)(_dropdownMenu.default, {
      ...props
    });
  }

  // ToolbarItem will pass all props to the render prop child, which will pass
  // all props to the toggle of DropdownMenu. This means that ToolbarDropdownMenu
  // has the same API as DropdownMenu.
  return (0, _element.createElement)(_toolbarItem.default, {
    ref: ref,
    ...props.toggleProps
  }, toolbarItemProps => (0, _element.createElement)(_dropdownMenu.default, {
    ...props,
    popoverProps: {
      ...props.popoverProps
    },
    toggleProps: toolbarItemProps
  }));
}
var _default = (0, _element.forwardRef)(ToolbarDropdownMenu);
exports.default = _default;
//# sourceMappingURL=index.js.map